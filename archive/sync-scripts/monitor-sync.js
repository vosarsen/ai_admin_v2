#!/usr/bin/env node

/**
 * –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤–∏–∑–∏—Ç–æ–≤
 */

require('dotenv').config();
const { supabase } = require('./src/database/supabase');

let lastCount = 0;
let startTime = Date.now();

async function monitorProgress() {
  const { count } = await supabase.from('visits').select('*', { count: 'exact', head: true });
  
  // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
  const { data: uniqueData } = await supabase
    .from('visits')
    .select('client_id');
  
  const uniqueClients = new Set(uniqueData?.map(v => v.client_id)).size;
  
  // –°–∫–æ—Ä–æ—Å—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  const elapsed = (Date.now() - startTime) / 1000;
  const speed = Math.round((count - lastCount) / 5); // –≤–∏–∑–∏—Ç–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É
  
  // –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
  const expectedTotal = 3042;
  const progress = Math.min(100, Math.round((count / expectedTotal) * 100));
  const progressBar = '‚ñà'.repeat(Math.floor(progress / 2)) + '‚ñë'.repeat(50 - Math.floor(progress / 2));
  
  console.clear();
  console.log('üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –í–ò–ó–ò–¢–û–í');
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
  console.log('');
  console.log(`–ü—Ä–æ–≥—Ä–µ—Å—Å: [${progressBar}] ${progress}%`);
  console.log('');
  console.log(`üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
  console.log(`  ‚Ä¢ –í–∏–∑–∏—Ç–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: ${count} / ~${expectedTotal}`);
  console.log(`  ‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤: ${uniqueClients} / ~1000`);
  console.log(`  ‚Ä¢ –°–∫–æ—Ä–æ—Å—Ç—å: ${speed} –≤–∏–∑–∏—Ç–æ–≤/—Å–µ–∫`);
  console.log(`  ‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${Math.round(elapsed)} —Å–µ–∫`);
  console.log('');
  
  if (speed > 0) {
    const remaining = Math.max(0, expectedTotal - count);
    const eta = Math.round(remaining / speed);
    console.log(`‚è±Ô∏è  –û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: ~${Math.floor(eta / 60)}–º ${eta % 60}—Å`);
  }
  
  lastCount = count;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
  if (count >= expectedTotal * 0.95) {
    console.log('');
    console.log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–æ—á—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    process.exit(0);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
console.log('üöÄ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...\n');
monitorProgress();
setInterval(monitorProgress, 5000);