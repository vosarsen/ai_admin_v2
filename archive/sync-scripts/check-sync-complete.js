const { supabase } = require('./src/database/supabase');

async function checkSyncComplete() {
  console.log('\nüìä –ü–†–û–í–ï–†–ö–ê –ü–û–õ–ù–û–¢–´ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò');
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
  const { count: totalClients } = await supabase
    .from('clients')
    .select('*', { count: 'exact', head: true })
    .eq('company_id', 962302);
  
  const { count: clientsWithVisits } = await supabase
    .from('clients')
    .select('*', { count: 'exact', head: true })
    .eq('company_id', 962302)
    .gt('visit_count', 0);
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–∑–∏—Ç–æ–≤
  const { count: totalVisits } = await supabase
    .from('visits')
    .select('*', { count: 'exact', head: true });
  
  const { data: uniqueClients } = await supabase
    .from('visits')
    .select('client_id')
    .not('client_id', 'is', null);
  
  const uniqueClientIds = new Set(uniqueClients?.map(v => v.client_id));
  
  // –î–∞—Ç—ã
  const { data: firstVisit } = await supabase
    .from('visits')
    .select('visit_date')
    .order('visit_date', { ascending: true })
    .limit(1);
  
  const { data: lastVisit } = await supabase
    .from('visits')
    .select('visit_date')
    .order('visit_date', { ascending: false })
    .limit(1);
  
  console.log('üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–õ–ò–ï–ù–¢–û–í:');
  console.log(`  ‚Ä¢ –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –ë–î: ${totalClients}`);
  console.log(`  ‚Ä¢ –ö–ª–∏–µ–Ω—Ç–æ–≤ —Å visit_count > 0: ${clientsWithVisits}`);
  console.log(`  ‚Ä¢ –ö–ª–∏–µ–Ω—Ç–æ–≤ —Å –≤–∏–∑–∏—Ç–∞–º–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ visits: ${uniqueClientIds.size}`);
  console.log('');
  
  console.log('üìÖ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –í–ò–ó–ò–¢–û–í:');
  console.log(`  ‚Ä¢ –í—Å–µ–≥–æ –≤–∏–∑–∏—Ç–æ–≤ –≤ –ë–î: ${totalVisits}`);
  console.log(`  ‚Ä¢ –ü–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç: ${firstVisit?.[0]?.visit_date || '–Ω/–¥'} (–æ—Ç–∫—Ä—ã—Ç–∏–µ: 11.12.2023)`);
  console.log(`  ‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç: ${lastVisit?.[0]?.visit_date || '–Ω/–¥'}`);
  console.log('');
  
  // –ê–Ω–∞–ª–∏–∑ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π
  const percentWithVisits = Math.round((uniqueClientIds.size / clientsWithVisits) * 100);
  
  console.log('üîç –ê–ù–ê–õ–ò–ó:');
  console.log(`  ‚Ä¢ ${percentWithVisits}% –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å visit_count > 0 –∏–º–µ—é—Ç –∑–∞–ø–∏—Å–∏ –≤ visits`);
  
  if (percentWithVisits < 50) {
    console.log('\n‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò:');
    console.log(`  –¢–æ–ª—å–∫–æ ${uniqueClientIds.size} –∏–∑ ${clientsWithVisits} –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–º–µ—é—Ç –≤–∏–∑–∏—Ç—ã`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ–ª—å–∫–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –±—ã–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤
    const sixMonthsAgo = new Date();
    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);
    
    const { count: recentClients } = await supabase
      .from('clients')
      .select('*', { count: 'exact', head: true })
      .eq('company_id', 962302)
      .gte('last_visit_date', sixMonthsAgo.toISOString().split('T')[0]);
    
    console.log(`\n  –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤: ${recentClients}`);
    console.log('  –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –Ω–∏–∑–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:');
    console.log('  1. YClients API —Ç—Ä–µ–±—É–µ—Ç –∑–∞–ø—Ä–æ—Å –¥–ª—è –ö–ê–ñ–î–û–ì–û –∫–ª–∏–µ–Ω—Ç–∞ –æ—Ç–¥–µ–ª—å–Ω–æ');
    console.log('  2. –ü—Ä–æ—Ü–µ—Å—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –µ—â–µ –∏–¥–µ—Ç (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç)');
    console.log('  3. –ú–Ω–æ–≥–∏–µ –∫–ª–∏–µ–Ω—Ç—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã, –Ω–æ –Ω–µ –∏–º–µ—é—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –≤–∏–∑–∏—Ç–æ–≤');
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è
    console.log('\nüìå –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:');
    console.log('  –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤:');
    console.log('  node scripts/sync-recent-clients.js');
  } else {
    console.log('\n‚úÖ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –£–°–ü–ï–®–ù–ê!');
    console.log(`  ${percentWithVisits}% –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–º–µ—é—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–∏–∑–∏—Ç—ã`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –±–µ–∑ –≤–∏–∑–∏—Ç–æ–≤ –≤ API
  const { data: clientsSample } = await supabase
    .from('clients')
    .select('id, name, visit_count')
    .eq('company_id', 962302)
    .gt('visit_count', 5)
    .limit(10);
  
  let clientsWithoutVisits = 0;
  for (const client of clientsSample || []) {
    const { count } = await supabase
      .from('visits')
      .select('*', { count: 'exact', head: true })
      .eq('client_id', client.id);
    
    if (count === 0) clientsWithoutVisits++;
  }
  
  if (clientsWithoutVisits > 5) {
    console.log('\n‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –∫–ª–∏–µ–Ω—Ç—ã —Å visit_count > 5, –Ω–æ –±–µ–∑ –∑–∞–ø–∏—Å–µ–π –≤ visits');
    console.log('  –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–ª–∏');
    console.log('  YClients API –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç—Ç–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤');
  }
}

checkSyncComplete().catch(console.error);