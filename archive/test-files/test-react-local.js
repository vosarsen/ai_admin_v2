#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ReAct –ª–æ–∫–∞–ª—å–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤ AI Admin
 */

const AIAdminService = require('./src/services/ai-admin-v2');

async function testReAct() {
  console.log('üöÄ Testing ReAct pattern locally...\n');
  
  const tests = [
    {
      message: '–ó–∞–ø–∏—à–∏ –º–µ–Ω—è –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É —Å–µ–≥–æ–¥–Ω—è –≤ 19:00',
      description: '–¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –≤—Ä–µ–º—è'
    },
    {
      message: '–ó–∞–ø–∏—à–∏ –º–µ–Ω—è –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É —Å–µ–≥–æ–¥–Ω—è –≤ 17:00',
      description: '–¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏ –Ω–∞ –∑–∞–Ω—è—Ç–æ–µ –≤—Ä–µ–º—è'
    },
    {
      message: '–ö–∞–∫–æ–µ –≤—Ä–µ–º—è —Å–≤–æ–±–æ–¥–Ω–æ –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É –∑–∞–≤—Ç—Ä–∞?',
      description: '–¢–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤'
    }
  ];
  
  for (const test of tests) {
    console.log('='.repeat(60));
    console.log(`üìù ${test.description}`);
    console.log(`Message: ${test.message}`);
    console.log('='.repeat(60));
    
    try {
      const result = await AIAdminService.processMessage(
        test.message,
        '79001234567',
        962302 // company ID –¥–ª—è —Ç–µ—Å—Ç–æ–≤
      );
      
      console.log('‚úÖ Response:', result.response);
      if (result.commands) {
        console.log('üìä Commands executed:', result.commands.length);
      }
    } catch (error) {
      console.error('‚ùå Error:', error.message);
    }
    
    console.log('\n');
  }
}

testReAct().catch(console.error);