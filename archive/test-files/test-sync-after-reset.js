require('dotenv').config();
const { supabase } = require('./src/database/supabase');
const { getSyncManager } = require('./src/sync/sync-manager');

async function testSync() {
  console.log('üîÑ –¢–ï–°–¢ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ü–û–°–õ–ï –†–£–ß–ù–û–ì–û –û–ë–ù–£–õ–ï–ù–ò–Ø');
  console.log('='.repeat(50));
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  const { count: beforeCount } = await supabase
    .from('clients')
    .select('*', { count: 'exact', head: true })
    .gt('total_spent', 0);
    
  console.log(`\nüìä –ü–ï–†–ï–î –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ï–ô:`);
  console.log(`   –ö–ª–∏–µ–Ω—Ç–æ–≤ —Å –ø–æ–∫—É–ø–∫–∞–º–∏: ${beforeCount}`);
  
  // 2. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ sync-manager (–∫–∞–∫ –±—É–¥–µ—Ç –≤ cron)
  console.log('\nüöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ sync-manager...');
  console.log(`   –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä: syncVisitHistory = ${process.env.SYNC_CLIENT_VISITS === 'true'}`);
  
  const syncManager = getSyncManager();
  const startTime = Date.now();
  
  // –í—ã–∑—ã–≤–∞–µ–º —Ç–∞–∫ –∂–µ –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –∏–∑ cron
  const result = await syncManager.syncClients({ 
    syncVisitHistory: process.env.SYNC_CLIENT_VISITS === 'true' 
  });
  
  const duration = Math.round((Date.now() - startTime) / 1000);
  
  console.log(`\n‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ ${duration} —Å–µ–∫:`);
  console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${result.processed}`);
  console.log(`   –û—à–∏–±–æ–∫: ${result.errors}`);
  
  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const { count: afterCount } = await supabase
    .from('clients')
    .select('*', { count: 'exact', head: true })
    .gt('total_spent', 0);
    
  console.log(`\nüìä –ü–û–°–õ–ï –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò:`);
  console.log(`   –ö–ª–∏–µ–Ω—Ç–æ–≤ —Å –ø–æ–∫—É–ø–∫–∞–º–∏: ${afterCount}`);
  console.log(`   –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: ${afterCount - beforeCount} –∑–∞–ø–∏—Å–µ–π`);
  
  // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ø –∫–ª–∏–µ–Ω—Ç–æ–≤
  const { data: topClients } = await supabase
    .from('clients')
    .select('name, phone, total_spent, visit_count')
    .order('total_spent', { ascending: false })
    .limit(5);
    
  console.log('\nüí∞ –¢–û–ü-5 –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:');
  topClients.forEach((client, i) => {
    console.log(`   ${i+1}. ${client.name}: ${client.total_spent} —Ä—É–± (${client.visit_count} –≤–∏–∑–∏—Ç–æ–≤)`);
  });
  
  console.log('\n' + '='.repeat(50));
  console.log('üìà –ò–¢–û–ì:');
  
  if (afterCount >= 1200) {
    console.log(`   ‚úÖ –£–°–ü–ï–•! –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ${afterCount} –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –ø–æ–∫—É–ø–∫–∞–º–∏`);
    console.log('   –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ sync-manager —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
  } else {
    console.log(`   ‚ö†Ô∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–ª—å–∫–æ ${afterCount} –∫–ª–∏–µ–Ω—Ç–æ–≤`);
    console.log('   –û–∂–∏–¥–∞–ª–æ—Å—å ~1222 –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –ø–æ–∫—É–ø–∫–∞–º–∏');
  }
  
  process.exit(0);
}

testSync().catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  process.exit(1);
});