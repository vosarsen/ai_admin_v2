const axios = require('axios');
const { supabase } = require('./src/database/supabase');
require('dotenv').config();

async function testDmitry() {
  console.log('üîç –¢–ï–°–¢–ò–†–£–ï–ú –ö–õ–ò–ï–ù–¢–ê –î–ú–ò–¢–†–ò–ô (YClients ID: 208471717)');
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
  
  const bearerToken = process.env.YCLIENTS_BEARER_TOKEN;
  const userToken = process.env.YCLIENTS_USER_TOKEN;
  const companyId = 962302;
  const dmitryYclientsId = 208471717;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ –ë–î
  const { data: dmitry } = await supabase
    .from('clients')
    .select('*')
    .eq('yclients_id', dmitryYclientsId)
    .eq('company_id', companyId)
    .single();
  
  if (dmitry) {
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –≤ –ë–î:`);
    console.log(`  ID: ${dmitry.id}`);
    console.log(`  –ò–º—è: ${dmitry.name}`);
    console.log(`  visit_count: ${dmitry.visit_count}`);
    console.log(`  visit_history: ${dmitry.visit_history?.length || 0} –∑–∞–ø–∏—Å–µ–π`);
    console.log(`  last_services: ${dmitry.last_services || '–ø—É—Å—Ç–æ'}\n`);
  } else {
    console.log('‚ùå –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –ë–î\n');
  }
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–∑ API
  console.log('üì° –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–∏–∑–∏—Ç—ã –∏–∑ YClients API...\n');
  
  try {
    const url = `https://api.yclients.com/api/v1/records/${companyId}`;
    
    const response = await axios.get(url, {
      params: {
        client_id: dmitryYclientsId,
        start_date: '2023-01-01',
        end_date: '2025-12-31',
        include_finance_transactions: 1,
        with_deleted: 0
      },
      headers: {
        'Authorization': `Bearer ${bearerToken}, User ${userToken}`,
        'Accept': 'application/vnd.api.v2+json',
        'Content-Type': 'application/json'
      },
      timeout: 15000
    });
    
    const records = response.data?.data || [];
    const dmitryRecords = records.filter(r => 
      String(r.client?.id) === String(dmitryYclientsId)
    );
    
    console.log(`üì• API –≤–µ—Ä–Ω—É–ª ${records.length} –∑–∞–ø–∏—Å–µ–π`);
    console.log(`   –ò–∑ –Ω–∏—Ö –¥–ª—è –î–º–∏—Ç—Ä–∏—è: ${dmitryRecords.length}\n`);
    
    if (dmitryRecords.length > 0) {
      console.log('üìÖ –ü—Ä–∏–º–µ—Ä—ã –≤–∏–∑–∏—Ç–æ–≤:');
      dmitryRecords.slice(0, 5).forEach((r, i) => {
        const services = r.services?.map(s => s.title || s.name).join(', ');
        console.log(`  ${i+1}. ${r.date}: ${services || '–±–µ–∑ —É—Å–ª—É–≥'}`);
        console.log(`     –ú–∞—Å—Ç–µ—Ä: ${r.staff?.name || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`     –°—Ç–æ–∏–º–æ—Å—Ç—å: ${r.cost || 0}‚ÇΩ`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ API:', error.message);
  }
}

testDmitry().catch(console.error);