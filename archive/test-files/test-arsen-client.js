#!/usr/bin/env node

const { supabase } = require('./src/database/supabase');

async function testArsenClient() {
  console.log('\n=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ –ê—Ä—Å–µ–Ω –≤ –±–∞–∑–µ ===');
  
  // –¢–µ—Å—Ç–æ–≤—ã–π –Ω–æ–º–µ—Ä –ê—Ä—Å–µ–Ω–∞
  const phone = '79068831915';
  const companyId = 962302;
  
  console.log('–ò—â–µ–º –∫–ª–∏–µ–Ω—Ç–∞:');
  console.log('- –¢–µ–ª–µ—Ñ–æ–Ω:', phone);
  console.log('- –ö–æ–º–ø–∞–Ω–∏—è:', companyId);
  
  try {
    // –ü–æ–∏—Å–∫ –ø–æ phone
    const { data: clientByPhone, error: error1 } = await supabase
      .from('clients')
      .select('*')
      .eq('phone', phone)
      .eq('company_id', companyId)
      .maybeSingle();
      
    if (clientByPhone) {
      console.log('\n‚úÖ –ö–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω –ø–æ phone:');
      console.log('- ID:', clientByPhone.id);
      console.log('- –ò–º—è:', clientByPhone.name);
      console.log('- –¢–µ–ª–µ—Ñ–æ–Ω (phone):', clientByPhone.phone);
      console.log('- –¢–µ–ª–µ—Ñ–æ–Ω (raw_phone):', clientByPhone.raw_phone);
    } else {
      console.log('\n‚ùå –ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ phone');
      if (error1) console.error('–û—à–∏–±–∫–∞:', error1);
    }
    
    // –ü–æ–∏—Å–∫ –ø–æ raw_phone
    const { data: clientByRawPhone, error: error2 } = await supabase
      .from('clients')
      .select('*')
      .eq('raw_phone', '+' + phone)
      .eq('company_id', companyId)
      .maybeSingle();
      
    if (clientByRawPhone) {
      console.log('\n‚úÖ –ö–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω –ø–æ raw_phone:');
      console.log('- ID:', clientByRawPhone.id);
      console.log('- –ò–º—è:', clientByRawPhone.name);
      console.log('- –¢–µ–ª–µ—Ñ–æ–Ω (phone):', clientByRawPhone.phone);
      console.log('- –¢–µ–ª–µ—Ñ–æ–Ω (raw_phone):', clientByRawPhone.raw_phone);
    } else {
      console.log('\n‚ùå –ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ raw_phone');
      if (error2) console.error('–û—à–∏–±–∫–∞:', error2);
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ –∫–ª–∏–µ–Ω—Ç—ã —Å –ø–æ—Ö–æ–∂–∏–º –Ω–æ–º–µ—Ä–æ–º
    const { data: similarClients, error: error3 } = await supabase
      .from('clients')
      .select('id, name, phone, raw_phone, company_id')
      .ilike('phone', '%831915%')
      .limit(10);
      
    if (similarClients && similarClients.length > 0) {
      console.log('\nüìù –ö–ª–∏–µ–Ω—Ç—ã —Å –ø–æ—Ö–æ–∂–∏–º –Ω–æ–º–µ—Ä–æ–º:');
      similarClients.forEach(client => {
        console.log(`- ${client.name}: phone=${client.phone}, raw_phone=${client.raw_phone}, company=${client.company_id}`);
      });
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å
    if (!clientByPhone && !clientByRawPhone) {
      console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –≤ –±–∞–∑–µ');
      console.log('INSERT INTO clients (phone, raw_phone, name, company_id) VALUES');
      console.log(`('${phone}', '+${phone}', '–ê—Ä—Å–µ–Ω', ${companyId});`);
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testArsenClient();