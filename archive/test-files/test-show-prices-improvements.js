#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–ª—É—á—à–µ–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã SHOW_PRICES
 */

require('dotenv').config();
const commandHandler = require('./src/services/ai-admin-v2/modules/command-handler');

// –¢–µ—Å—Ç–æ–≤—ã–µ —É—Å–ª—É–≥–∏ –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–π –±–∞–∑—ã
const testServices = [
  // –ë—ã—Å—Ç—Ä—ã–µ –∏ –Ω–µ–¥–æ—Ä–æ–≥–∏–µ
  { id: 44, title: '–°–¢–†–ò–ñ–ö–ê –ú–ê–®–ò–ù–ö–û–ô | 1 –ù–ê–°–ê–î–ö–ê', price: 1200, category_title: '–°—Ç—Ä–∏–∂–∫–∏', duration: 30 },
  { id: 45, title: '–°–¢–†–ò–ñ–ö–ê | –°–ß–ê–°–¢–õ–ò–í–´–ï –ß–ê–°–´', price: 1800, category_title: '–°—Ç—Ä–∏–∂–∫–∏', duration: 45 },
  
  // –°—Ç—Ä–∏–∂–∫–∏ –æ–±—ã—á–Ω—ã–µ
  { id: 42, title: '–ú–£–ñ–°–ö–ê–Ø –°–¢–†–ò–ñ–ö–ê', price: 2000, category_title: '–°—Ç—Ä–∏–∂–∫–∏', duration: 60 },
  { id: 46, title: '–°–¢–†–ò–ñ–ö–ê –ù–û–ñ–ù–ò–¶–ê–ú–ò', price: 2800, category_title: '–°—Ç—Ä–∏–∂–∫–∏', duration: 60 },
  
  // –î–µ—Ç—Å–∫–∏–µ
  { id: 73, title: '–î–ï–¢–°–ö–ê–Ø –°–¢–†–ò–ñ–ö–ê', price: 1800, category_title: '–°—Ç—Ä–∏–∂–∫–∏', duration: 60 },
  { id: 49, title: '–û–¢–ï–¶ + –°–´–ù', price: 3500, category_title: '–°—Ç—Ä–∏–∂–∫–∏', duration: 90 },
  
  // –ë–æ—Ä–æ–¥–∞
  { id: 50, title: '–ú–û–î–ï–õ–ò–†–û–í–ê–ù–ò–ï –ë–û–†–û–î–´', price: 2000, category_title: '–ë–æ—Ä–æ–¥–∞', duration: 45 },
  { id: 51, title: '–ë–†–ò–¢–¨–ï', price: 2500, category_title: '–ë–æ—Ä–æ–¥–∞', duration: 45 },
  
  // –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ
  { id: 47, title: '–°–¢–†–ò–ñ–ö–ê + –ú–û–î–ï–õ–ò–†–û–í–ê–ù–ò–ï –ë–û–†–û–î–´', price: 3800, category_title: '–ö–æ–º–ø–ª–µ–∫—Å', duration: 90 },
  { id: 48, title: '–°–¢–†–ò–ñ–ö–ê + –ú–û–î–ï–õ–ò–†–û–í–ê–ù–ò–ï –ë–û–†–û–î–´ + –¢–û–ù–ò–†–û–í–ê–ù–ò–ï', price: 5000, category_title: '–ö–æ–º–ø–ª–µ–∫—Å', duration: 120 },
  
  // –ü—Ä–µ–º–∏—É–º
  { id: 52, title: '–°–¢–†–ò–ñ–ö–ê LUXINA', price: 4500, category_title: '–ü—Ä–µ–º–∏—É–º', duration: 90 },
  { id: 53, title: 'VIP –ö–û–ú–ü–õ–ï–ö–°', price: 7000, category_title: '–ü—Ä–µ–º–∏—É–º', duration: 150 },
  
  // –î—Ä—É–≥–∏–µ
  { id: 54, title: '–ö–ê–ú–£–§–õ–Ø–ñ –°–ï–î–ò–ù–´', price: 1500, category_title: '–û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ', duration: 30 },
  { id: 55, title: '–£–ö–õ–ê–î–ö–ê', price: 800, category_title: '–£–∫–ª–∞–¥–∫–∞', duration: 20 },
];

// –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
const testQueries = [
  { 
    query: '–°–∫–æ–ª—å–∫–æ —Å—Ç–æ—è—Ç —Å—Ç—Ä–∏–∂–∫–∏?',
    params: { service_name: '—Å—Ç—Ä–∏–∂–∫–∞' },
    expected: '–î–æ–ª–∂–Ω—ã –ø–æ–∫–∞–∑–∞—Ç—å—Å—è –í–°–ï –≤–∏–¥—ã —Å—Ç—Ä–∏–∂–µ–∫'
  },
  { 
    query: '–ê –¥–µ—Ç—Å–∫–∞—è —Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?',
    params: { service_name: '–¥–µ—Ç—Å–∫–∞—è' },
    expected: '–î–æ–ª–∂–Ω–∞ –ø–æ–∫–∞–∑–∞—Ç—å—Å—è –¥–µ—Ç—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞ –ø–µ—Ä–≤–æ–π'
  },
  { 
    query: '–ß—Ç–æ –µ—Å—Ç—å –Ω–µ–¥–æ—Ä–æ–≥–æ?',
    params: { service_name: '–Ω–µ–¥–æ—Ä–æ–≥–æ' },
    expected: '–î–æ–ª–∂–Ω—ã –ø–æ–∫–∞–∑–∞—Ç—å—Å—è —É—Å–ª—É–≥–∏ –¥–æ 1500‚ÇΩ'
  },
  { 
    query: '–ü–æ–∫–∞–∂–∏ –≤—Å–µ —É—Å–ª—É–≥–∏',
    params: {},
    expected: '–í—Å–µ —É—Å–ª—É–≥–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ'
  },
  { 
    query: '–ß—Ç–æ –µ—Å—Ç—å –¥–ª—è –±–æ—Ä–æ–¥—ã?',
    params: { service_name: '–±–æ—Ä–æ–¥–∞' },
    expected: '–£—Å–ª—É–≥–∏ –¥–ª—è –±–æ—Ä–æ–¥—ã'
  },
  { 
    query: '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —É—Å–ª—É–≥–∏',
    params: { service_name: '–∫–æ–º–ø–ª–µ–∫—Å' },
    expected: '–£—Å–ª—É–≥–∏ —Å +'
  }
];

async function testShowPrices() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã SHOW_PRICES\n');
  console.log('=' .repeat(80));
  
  for (const test of testQueries) {
    console.log(`\nüìù –ó–∞–ø—Ä–æ—Å: "${test.query}"`);
    console.log(`   –û–∂–∏–¥–∞–µ—Ç—Å—è: ${test.expected}`);
    console.log('   ' + '-'.repeat(60));
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∞
    const context = {
      services: testServices,
      message: test.query,
      client: null
    };
    
    try {
      // –í—ã–∑—ã–≤–∞–µ–º getPrices
      const result = await commandHandler.getPrices(test.params, context);
      
      console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ: ${result.count} —É—Å–ª—É–≥`);
      console.log(`   üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${result.category}`);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —É—Å–ª—É–≥
      console.log(`\n   –¢–æ–ø-5 —É—Å–ª—É–≥:`);
      result.prices.slice(0, 5).forEach((service, i) => {
        const priceStr = service.price_min === service.price_max 
          ? `${service.price_min}‚ÇΩ`
          : `${service.price_min}-${service.price_max}‚ÇΩ`;
        console.log(`     ${i + 1}. ${service.title}: ${priceStr} (${service.duration} –º–∏–Ω)`);
      });
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
      if (result.categorized) {
        console.log(`\n   üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è:`);
        Object.entries(result.categorized).forEach(([category, services]) => {
          console.log(`     ${category}: ${services.length} —É—Å–ª—É–≥`);
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2 —É—Å–ª—É–≥–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
          services.slice(0, 2).forEach(s => {
            const price = s.price || s.price_min || 0;
            console.log(`       ‚Ä¢ ${s.title}: ${price}‚ÇΩ`);
          });
        });
      }
      
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    }
  }
  
  console.log('\n' + '=' .repeat(80));
  console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ\n');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testShowPrices().catch(console.error);