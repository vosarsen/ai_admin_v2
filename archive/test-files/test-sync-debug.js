require('dotenv').config();
const { supabase } = require('./src/database/supabase');
const { getSyncManager } = require('./src/sync/sync-manager');

async function debugSync() {
  console.log('üîç –û–¢–õ–ê–î–ö–ê –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò');
  console.log('='.repeat(50));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  console.log('\nüìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  console.log('  YCLIENTS_BEARER_TOKEN:', process.env.YCLIENTS_BEARER_TOKEN ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.log('  YCLIENTS_USER_TOKEN:', process.env.YCLIENTS_USER_TOKEN ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.log('  YCLIENTS_COMPANY_ID:', process.env.YCLIENTS_COMPANY_ID);
  console.log('  SYNC_CLIENT_VISITS:', process.env.SYNC_CLIENT_VISITS);
  console.log('  NODE_ENV:', process.env.NODE_ENV);
  
  // –û–±–Ω—É–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞
  console.log('\nüîß –û–±–Ω—É–ª—è–µ–º 10 –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞...');
  const { error: resetError } = await supabase
    .from('clients')
    .update({ total_spent: 0, visit_count: 0 })
    .in('name', ['–õ–µ–æ–Ω–∏–¥', '–°–µ—Ä–≥–µ–π', '–ê–ª–µ–∫—Å–µ–π', '–ì–µ–Ω–Ω–∞–¥–∏–π', '–õ–µ–≤–æ–Ω', 
                 '–ï–≤–≥–µ–Ω–∏–π', '–í–ª–∞–¥–∏–º–∏—Ä', '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä', '–ú–∞–∫—Å–∏–º', '–î–º–∏—Ç—Ä–∏–π'])
    .gt('id', 0);
    
  if (resetError) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω—É–ª–µ–Ω–∏—è:', resetError);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–±–Ω—É–ª–∏–ª–æ—Å—å
  const { count: zeroCount } = await supabase
    .from('clients')
    .select('*', { count: 'exact', head: true })
    .in('name', ['–õ–µ–æ–Ω–∏–¥', '–°–µ—Ä–≥–µ–π', '–ê–ª–µ–∫—Å–µ–π'])
    .eq('total_spent', 0);
    
  console.log(`  –û–±–Ω—É–ª–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: ${zeroCount}`);
  
  // –¢–ï–°–¢ 1: –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ sync-manager (–∫–∞–∫ –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ)
  console.log('\nüìå –¢–ï–°–¢ 1: –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ —á–µ—Ä–µ–∑ sync-manager');
  console.log('='.repeat(30));
  
  const syncManager1 = getSyncManager();
  
  // –ù–ï –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º, —á—Ç–æ–±—ã –Ω–µ –∑–∞–ø—É—Å–∫–∞—Ç—å cron
  console.log('–í—ã–∑—ã–≤–∞–µ–º: syncManager.syncClients({ syncVisitHistory: false })');
  
  const result1 = await syncManager1.syncClients({ 
    syncVisitHistory: false 
  });
  
  console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', {
    processed: result1.processed,
    errors: result1.errors
  });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –õ–µ–æ–Ω–∏–¥–∞
  const { data: leonid1 } = await supabase
    .from('clients')
    .select('name, total_spent, visit_count')
    .eq('name', '–õ–µ–æ–Ω–∏–¥')
    .eq('phone', '79035059524')
    .single();
    
  console.log('–õ–µ–æ–Ω–∏–¥ –ø–æ—Å–ª–µ sync-manager:', leonid1);
  
  // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
  await new Promise(resolve => setTimeout(resolve, 2000));
  
  // –¢–ï–°–¢ 2: –û–±–Ω—É–ª—è–µ–º —Å–Ω–æ–≤–∞ –∏ –ø—Ä–æ–±—É–µ–º –∫–∞–∫ –≤ manual-sync
  console.log('\nüìå –¢–ï–°–¢ 2: –í—ã–∑–æ–≤ –∫–∞–∫ –≤ manual-sync.js');
  console.log('='.repeat(30));
  
  // –û–±–Ω—É–ª—è–µ–º –õ–µ–æ–Ω–∏–¥–∞ —Å–Ω–æ–≤–∞
  await supabase
    .from('clients')
    .update({ total_spent: 0, visit_count: 0 })
    .eq('name', '–õ–µ–æ–Ω–∏–¥')
    .eq('phone', '79035059524');
  
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä sync-manager
  const syncManager2 = getSyncManager();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∫ –≤ manual-sync
  if (!syncManager2.isInitialized) {
    await syncManager2.initialize();
  }
  
  console.log('–í—ã–∑—ã–≤–∞–µ–º: syncManager.syncClients({ syncVisitHistory: process.env.SYNC_CLIENT_VISITS === "true" })');
  console.log('process.env.SYNC_CLIENT_VISITS === "true":', process.env.SYNC_CLIENT_VISITS === 'true');
  
  const result2 = await syncManager2.syncClients({ 
    syncVisitHistory: process.env.SYNC_CLIENT_VISITS === 'true'
  });
  
  console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', {
    processed: result2.processed,
    errors: result2.errors
  });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –õ–µ–æ–Ω–∏–¥–∞
  const { data: leonid2 } = await supabase
    .from('clients')
    .select('name, total_spent, visit_count')
    .eq('name', '–õ–µ–æ–Ω–∏–¥')
    .eq('phone', '79035059524')
    .single();
    
  console.log('–õ–µ–æ–Ω–∏–¥ –ø–æ—Å–ª–µ manual-sync —Å–ø–æ—Å–æ–±–∞:', leonid2);
  
  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º sync-manager
  await syncManager2.shutdown();
  
  console.log('\n' + '='.repeat(50));
  console.log('üìä –°–†–ê–í–ù–ï–ù–ò–ï:');
  console.log('–¢–µ—Å—Ç 1 (sync-manager):', leonid1?.total_spent || 0);
  console.log('–¢–µ—Å—Ç 2 (manual-sync):', leonid2?.total_spent || 0);
  
  if (leonid1?.total_spent === leonid2?.total_spent && leonid2?.total_spent > 0) {
    console.log('‚úÖ –û–±–∞ –º–µ—Ç–æ–¥–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ!');
  } else {
    console.log('‚ùå –ú–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ-—Ä–∞–∑–Ω–æ–º—É!');
    console.log('–ù—É–∂–Ω–æ –∏—Å–∫–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É –≥–ª—É–±–∂–µ...');
  }
  
  process.exit(0);
}

debugSync().catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  process.exit(1);
});