// –¢–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–º–µ–Ω–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –ë–î
require('dotenv').config();

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º two-stage
process.env.USE_TWO_STAGE = 'true';
process.env.AI_PROMPT_VERSION = 'two-stage';

const aiAdmin = require('./src/services/ai-admin-v2');
const contextServiceV2 = require('./src/services/context/context-service-v2');

const TEST_PHONE = '+79686484488'; // –í–∞—à —Ç–µ—Å—Ç–æ–≤—ã–π –Ω–æ–º–µ—Ä (–ê—Ä—Å–µ–Ω)
const COMPANY_ID = 962302;

async function testClientName() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–º–µ–Ω–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –ë–î');
  console.log('=========================================\n');
  
  try {
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
    console.log('1Ô∏è‚É£ –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç...');
    await contextServiceV2.clearDialogContext(TEST_PHONE, COMPANY_ID);
    await contextServiceV2.invalidateFullContextCache(TEST_PHONE, COMPANY_ID);
    console.log('‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—á–∏—â–µ–Ω\n');
    
    // –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    console.log('2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ...');
    const greeting = await aiAdmin.processMessage(
      '–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É',
      TEST_PHONE,
      COMPANY_ID
    );
    
    console.log('üì± –ö–ª–∏–µ–Ω—Ç: "–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É"');
    console.log('ü§ñ –ë–æ—Ç:', greeting.response);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ª–∏ AI –∏–º—è –∏–∑ –ë–î
    const hasName = greeting.response.toLowerCase().includes('–∞—Ä—Å–µ–Ω');
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log(`- –ò–º—è "–ê—Ä—Å–µ–Ω" ${hasName ? '‚úÖ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–û' : '‚ùå –ù–ï –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ'}`);
    console.log(`- –¢–∏–ø –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: ${process.env.USE_TWO_STAGE === 'true' ? 'Two-Stage' : 'ReAct'}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç...');
    const context = await contextServiceV2.getFullContext(TEST_PHONE, COMPANY_ID);
    console.log('üìã –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ:');
    console.log(`- –ò–º—è: ${context.client?.name || '–ù–ï –ó–ê–ì–†–£–ñ–ï–ù–û'}`);
    console.log(`- ID: ${context.client?.id || '–ù–ï –ó–ê–ì–†–£–ñ–ï–ù–û'}`);
    console.log(`- –í–∏–∑–∏—Ç—ã: ${context.client?.visits_count || 0}`);
    
    // –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞...');
    const continuation = await aiAdmin.processMessage(
      '–ï—Å—Ç—å –≤—Ä–µ–º—è –∑–∞–≤—Ç—Ä–∞ –≤ 15:00?',
      TEST_PHONE,
      COMPANY_ID
    );
    
    console.log('üì± –ö–ª–∏–µ–Ω—Ç: "–ï—Å—Ç—å –≤—Ä–µ–º—è –∑–∞–≤—Ç—Ä–∞ –≤ 15:00?"');
    console.log('ü§ñ –ë–æ—Ç:', continuation.response);
    
    const hasNameInContinuation = continuation.response.toLowerCase().includes('–∞—Ä—Å–µ–Ω');
    console.log(`\n- –ò–º—è –≤ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏: ${hasNameInContinuation ? '‚úÖ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è' : '‚ö†Ô∏è –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è (–Ω–æ—Ä–º–∞–ª—å–Ω–æ)'}`);
    
    console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
    console.error('Stack:', error.stack);
  }
  
  process.exit(0);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testClientName();