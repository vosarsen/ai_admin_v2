require('dotenv').config();
const { getSyncManager } = require('./src/sync/sync-manager');
const { supabase } = require('./src/database/supabase');

async function simpleTest() {
  console.log('üîÑ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò');
  console.log('='.repeat(50));
  
  // –û–±–Ω—É–ª—è–µ–º –æ–¥–Ω–æ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
  console.log('\n1. –û–±–Ω—É–ª—è–µ–º –õ–µ–æ–Ω–∏–¥–∞ (phone: 79035059524)...');
  
  await supabase
    .from('clients')
    .update({ 
      total_spent: 0, 
      visit_count: 0,
      loyalty_level: 'New'
    })
    .eq('phone', '79035059524');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º
  const { data: before } = await supabase
    .from('clients')
    .select('name, total_spent, visit_count')
    .eq('phone', '79035059524')
    .single();
    
  console.log('   –î–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', before);
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –¢–û–õ–¨–ö–û —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∫–ª–∏–µ–Ω—Ç–æ–≤ (–±–µ–∑ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
  console.log('\n2. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –ë–ï–ó –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ sync-manager...');
  
  const syncManager = getSyncManager();
  
  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —ç—Ç–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
  // –ò–ª–∏ –≤—Å–µ—Ö, –Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –æ–¥–Ω–æ–≥–æ
  const result = await syncManager.syncClients({
    syncVisitHistory: false
  });
  
  console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç:', result.success ? '–£—Å–ø–µ—Ö' : '–û—à–∏–±–∫–∞');
  console.log('   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ:', result.processed);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const { data: after } = await supabase
    .from('clients')
    .select('name, total_spent, visit_count')
    .eq('phone', '79035059524')
    .single();
    
  console.log('\n3. –ü–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', after);
  
  console.log('\n' + '='.repeat(50));
  if (after.total_spent > 0) {
    console.log('‚úÖ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –†–ê–ë–û–¢–ê–ï–¢!');
    console.log(`   –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: ${after.total_spent} —Ä—É–±`);
  } else {
    console.log('‚ùå –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ù–ï –†–ê–ë–û–¢–ê–ï–¢');
    console.log('   total_spent –æ—Å—Ç–∞–ª—Å—è 0');
  }
  
  process.exit(0);
}

simpleTest().catch(console.error);