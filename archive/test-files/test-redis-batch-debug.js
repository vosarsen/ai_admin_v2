#!/usr/bin/env node

require('dotenv').config();
const { createRedisClient } = require('./src/utils/redis-factory');

async function debugRedisBatch() {
  console.log('üîç Testing Redis Batch Connection...\n');
  
  try {
    // –°–æ–∑–¥–∞–µ–º –¥–≤–∞ –∫–ª–∏–µ–Ω—Ç–∞ - –∫–∞–∫ –≤ API –∏ –∫–∞–∫ –≤ batch processor
    const apiClient = createRedisClient('api');
    const batchClient = createRedisClient('batch-service');
    
    await apiClient.ping();
    await batchClient.ping();
    console.log('‚úÖ Both Redis clients connected\n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–ª—é—á–∏
    console.log('üìã Checking rapid-fire keys:');
    const keys1 = await apiClient.keys('rapid-fire:*');
    console.log(`API client sees: ${keys1.length} keys`);
    if (keys1.length > 0) {
      console.log('Keys:', keys1);
    }
    
    const keys2 = await batchClient.keys('rapid-fire:*');
    console.log(`Batch client sees: ${keys2.length} keys`);
    if (keys2.length > 0) {
      console.log('Keys:', keys2);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
    const testKey = 'rapid-fire:79686484488';
    console.log(`\nüîç Checking specific key: ${testKey}`);
    
    const exists1 = await apiClient.exists(testKey);
    const exists2 = await batchClient.exists(testKey);
    console.log(`API client: exists = ${exists1}`);
    console.log(`Batch client: exists = ${exists2}`);
    
    if (exists1) {
      const len = await apiClient.llen(testKey);
      const ttl = await apiClient.ttl(testKey);
      console.log(`List length: ${len}, TTL: ${ttl}s`);
      
      const items = await apiClient.lrange(testKey, 0, -1);
      console.log(`\nMessages in batch:`);
      items.forEach((item, i) => {
        const msg = JSON.parse(item);
        console.log(`${i+1}. ${msg.message} (${new Date(msg.timestamp).toLocaleTimeString()})`);
      });
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —á—Ç–µ–Ω–∏–µ
    console.log('\nüß™ Testing add and read:');
    const testBatchKey = 'rapid-fire:test-debug';
    
    // API –¥–æ–±–∞–≤–ª—è–µ—Ç
    await apiClient.rpush(testBatchKey, JSON.stringify({
      message: 'Test from API',
      timestamp: Date.now()
    }));
    console.log('‚úÖ API client added message');
    
    // Batch —á–∏—Ç–∞–µ—Ç
    const testExists = await batchClient.exists(testBatchKey);
    const testLen = await batchClient.llen(testBatchKey);
    console.log(`‚úÖ Batch client sees: exists=${testExists}, length=${testLen}`);
    
    // –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç
    await apiClient.del(testBatchKey);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Redis
    console.log('\nüìä Redis configuration:');
    const apiInfo = await apiClient.info('server');
    const batchInfo = await batchClient.info('server');
    
    const getVersion = (info) => {
      const match = info.match(/redis_version:(.+)/);
      return match ? match[1].trim() : 'unknown';
    };
    
    console.log(`API client: Redis ${getVersion(apiInfo)}`);
    console.log(`Batch client: Redis ${getVersion(batchInfo)}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    const apiDb = await apiClient.client('list');
    const batchDb = await batchClient.client('list');
    
    console.log('\nüóÑÔ∏è  Database selection:');
    const getDb = (clientList) => {
      const match = clientList.match(/db=(\d+)/);
      return match ? match[1] : '0';
    };
    
    console.log(`API client: db=${getDb(apiDb)}`);
    console.log(`Batch client: db=${getDb(batchDb)}`);
    
    await apiClient.quit();
    await batchClient.quit();
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
    console.error(error.stack);
    process.exit(1);
  }
}

debugRedisBatch();