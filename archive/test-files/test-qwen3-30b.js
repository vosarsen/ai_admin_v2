#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Qwen3-30B-A3B –¥–ª—è AI Admin v2
 * –ú–æ–¥–µ–ª—å —Å 30B –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –Ω–æ —Ç–æ–ª—å–∫–æ 3.3B –∞–∫—Ç–∏–≤–Ω—ã—Ö - –∏–¥–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å!
 */

const axios = require('axios');

// API –∫–ª—é—á –¥–ª—è Qwen
const QWEN_API_KEY = 'sk-5903551cd419422cbf47ac6f9c6fa4ac';

// –ü—Ä–æ–º–ø—Ç –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ AI Admin v2
const AI_ADMIN_PROMPT = `–¢—ã - AI –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–∞—Ä–±–µ—Ä—à–æ–ø–∞ "–°—Ç–∏–ª—å".

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ê–õ–û–ù–ï:
–ù–∞–∑–≤–∞–Ω–∏–µ: –ë–∞—Ä–±–µ—Ä—à–æ–ø "–°—Ç–∏–ª—å"
–ê–¥—Ä–µ—Å: —É–ª. –õ–µ–Ω–∏–Ω–∞ 1, –ú–æ—Å–∫–≤–∞
–¢–µ–ª–µ—Ñ–æ–Ω: +7 (495) 123-45-67
–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: –ü–Ω-–ü—Ç 10:00-20:00, –°–±-–í—Å 10:00-18:00

–î–û–°–¢–£–ü–ù–´–ï –£–°–õ–£–ì–ò:
- –°—Ç—Ä–∏–∂–∫–∞ –º—É–∂—Å–∫–∞—è (id: 45) - 1500 —Ä—É–±., 30 –º–∏–Ω
- –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –±–æ—Ä–æ–¥—ã (id: 46) - 800 —Ä—É–±., 20 –º–∏–Ω
- –ö–æ–º–ø–ª–µ–∫—Å —Å—Ç—Ä–∏–∂–∫–∞+–±–æ—Ä–æ–¥–∞ (id: 47) - 2000 —Ä—É–±., 45 –º–∏–Ω
- –£–∫–ª–∞–¥–∫–∞ (id: 48) - 500 —Ä—É–±., 15 –º–∏–Ω
- –ö–∞–º—É—Ñ–ª—è–∂ —Å–µ–¥–∏–Ω—ã (id: 49) - 1200 —Ä—É–±., 30 –º–∏–Ω

–ú–ê–°–¢–ï–†–ê –°–ï–ì–û–î–ù–Ø (${new Date().toLocaleDateString('ru-RU')}):
- –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ (id: 101) - —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 10:00 –¥–æ 20:00, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∏–∂–∫–∏
- –ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤ (id: 102) - —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 12:00 –¥–æ 18:00, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∏–∂–∫–∏
- –ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤ (id: 103) - —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 14:00 –¥–æ 20:00, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: –±–æ—Ä–æ–¥–∞ –∏ —É—Å—ã

–í–ê–ñ–ù–´–ï –ü–†–ê–í–ò–õ–ê:
1. –í–°–ï–ì–î–ê –≤—Å—Ç—Ä–∞–∏–≤–∞–π –∫–æ–º–∞–Ω–¥—ã –≤ —Å–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ [–ö–û–ú–ê–ù–î–ê –ø–∞—Ä–∞–º–µ—Ç—Ä—ã]
2. –û—Ç–≤–µ—á–∞–π –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, –Ω–æ –∫—Ä–∞—Ç–∫–æ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
3. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ —É–º–µ—Ä–µ–Ω–Ω–æ
4. –ù–ï –ø—Ä–∏–¥—É–º—ã–≤–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é - –∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –¥–∞–Ω–æ –≤—ã—à–µ

–î–û–°–¢–£–ü–ù–´–ï –ö–û–ú–ê–ù–î–´:
- [SEARCH_SLOTS date:"YYYY-MM-DD" service_ids:[45]] - –ø–æ–∏—Å–∫ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
- [CREATE_BOOKING date:"YYYY-MM-DD" time:"HH:MM" service_id:45 staff_id:101 client_name:"–ò–º—è"] - —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏
- [SHOW_PRICES] - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ü–µ–Ω—ã
- [SHOW_PORTFOLIO staff_id:101] - –ø–æ–∫–∞–∑–∞—Ç—å —Ä–∞–±–æ—Ç—ã –º–∞—Å—Ç–µ—Ä–∞
- [CANCEL_BOOKING] - –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏
- [CHECK_STAFF_SCHEDULE staff_name:"–ò–≤–∞–Ω" date:"YYYY-MM-DD"] - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
- –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Ö–æ—á–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –ë–ï–ó —É–∫–∞–∑–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ - –∏—Å–ø–æ–ª—å–∑—É–π [SEARCH_SLOTS]
- –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —É–∫–∞–∑–∞–ª –ö–û–ù–ö–†–ï–¢–ù–û–ï –≤—Ä–µ–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä "–≤ 15:00") - –∏—Å–ø–æ–ª—å–∑—É–π [CREATE_BOOKING]
- –í–°–ï–ì–î–ê —É–∫–∞–∑—ã–≤–∞–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ id —É—Å–ª—É–≥ –∏ –º–∞—Å—Ç–µ—Ä–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ
- –î–∞—Ç–∞ "–∑–∞–≤—Ç—Ä–∞" = ${new Date(Date.now() + 86400000).toISOString().split('T')[0]}
- –î–∞—Ç–∞ "–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞" = ${new Date(Date.now() + 172800000).toISOString().split('T')[0]}`;

// –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
const TEST_SCENARIOS = [
  {
    name: '–ü—Ä–æ—Å—Ç–∞—è –∑–∞–ø–∏—Å—å',
    message: '–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É –∑–∞–≤—Ç—Ä–∞'
  },
  {
    name: '–ó–∞–ø–∏—Å—å —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º',
    message: '–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –ò–≤–∞–Ω—É –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É –∑–∞–≤—Ç—Ä–∞ –≤ 15:00'
  },
  {
    name: '–ó–∞–ø—Ä–æ—Å —Ü–µ–Ω',
    message: '–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç —Å—Ç—Ä–∏–∂–∫–∞ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –±–æ—Ä–æ–¥—ã?'
  },
  {
    name: '–í—ã–±–æ—Ä –º–∞—Å—Ç–µ—Ä–∞',
    message: '–ö—Ç–æ –∏–∑ –º–∞—Å—Ç–µ—Ä–æ–≤ –ª—É—á—à–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –±–æ—Ä–æ–¥–æ–π?'
  },
  {
    name: '–û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏',
    message: '–ú–Ω–µ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –º–æ—é –∑–∞–ø–∏—Å—å –Ω–∞ –∑–∞–≤—Ç—Ä–∞'
  },
  {
    name: '–°–ª–æ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å',
    message: '–Ø —Ö–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–º–ø–ª–µ–∫—Å —Å—Ç—Ä–∏–∂–∫–∞+–±–æ—Ä–æ–¥–∞, –Ω–æ –Ω–µ –∑–Ω–∞—é –∫ –∫–æ–º—É –ª—É—á—à–µ. –ö—Ç–æ —Å–≤–æ–±–æ–¥–µ–Ω –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞ –ø–æ—Å–ª–µ –æ–±–µ–¥–∞?'
  },
  {
    name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞',
    message: '–ê —á—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ –∫–æ–º–ø–ª–µ–∫—Å? –ò –º–æ–∂–Ω–æ –ª–∏ –¥–æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —É–∫–ª–∞–¥–∫—É?'
  },
  {
    name: '–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å',
    message: '—á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å?'
  }
];

// –§—É–Ω–∫—Ü–∏—è –≤—ã–∑–æ–≤–∞ Qwen API
async function callQwen(message) {
  // –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
  const providers = [
    {
      name: 'OpenRouter',
      url: 'https://openrouter.ai/api/v1/chat/completions',
      model: 'qwen/qwen3-30b-a3b:free',
      headers: {
        'Authorization': `Bearer ${QWEN_API_KEY}`,
        'Content-Type': 'application/json',
        'HTTP-Referer': 'https://ai-admin.com',
        'X-Title': 'AI Admin v2'
      }
    },
    {
      name: 'Together AI',
      url: 'https://api.together.xyz/v1/chat/completions',
      model: 'Qwen/Qwen3-30B-A3B-Instruct',
      headers: {
        'Authorization': `Bearer ${QWEN_API_KEY}`,
        'Content-Type': 'application/json'
      }
    },
    {
      name: 'DeepInfra',
      url: 'https://api.deepinfra.com/v1/openai/chat/completions', 
      model: 'Qwen/Qwen3-30B-A3B-Instruct',
      headers: {
        'Authorization': `Bearer ${QWEN_API_KEY}`,
        'Content-Type': 'application/json'
      }
    }
  ];
  
  for (const provider of providers) {
    try {
      console.log(`\n–ü—Ä–æ–±—É–µ–º ${provider.name}...`);
      
      const start = Date.now();
      const response = await axios.post(provider.url, {
        model: provider.model,
        messages: [
          { role: 'system', content: AI_ADMIN_PROMPT },
          { role: 'user', content: message }
        ],
        temperature: 0.7,
        top_p: 0.8,
        max_tokens: 1000
      }, {
        headers: provider.headers,
        timeout: 30000
      });
      
      const time = Date.now() - start;
      const text = response.data.choices[0].message.content;
      
      console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —á–µ—Ä–µ–∑ ${provider.name}!`);
      return { text, time, provider: provider.name };
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.response?.data?.error?.message || error.message}`);
      continue;
    }
  }
  
  return null;
}

// –§—É–Ω–∫—Ü–∏—è –≤—ã–∑–æ–≤–∞ DeepSeek –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
async function callDeepSeek(message) {
  const DEEPSEEK_API_KEY = 'sk-cb40ab0d0272423abb726a9bebbba9a8'; // –∏–∑ –≤–∞—à–µ–≥–æ .env
  const url = 'https://api.deepseek.com/v1/chat/completions';
  
  try {
    const start = Date.now();
    const response = await axios.post(url, {
      model: 'deepseek-chat',
      messages: [
        { role: 'system', content: AI_ADMIN_PROMPT },
        { role: 'user', content: message }
      ],
      temperature: 0.3,
      max_tokens: 1000
    }, {
      headers: {
        'Authorization': `Bearer ${DEEPSEEK_API_KEY}`,
        'Content-Type': 'application/json'
      }
    });
    
    const time = Date.now() - start;
    const text = response.data.choices[0].message.content;
    
    return { text, time, provider: 'deepseek' };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ DeepSeek:', error.response?.data || error.message);
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
function extractCommands(text) {
  const regex = /\[([A-Z_]+)(?:\s+([^\]]+))?\]/g;
  const commands = [];
  let match;
  
  while ((match = regex.exec(text)) !== null) {
    commands.push({
      command: match[1],
      params: match[2] || '',
      full: match[0]
    });
  }
  
  return commands;
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç–≤–µ—Ç–∞
function evaluateResponse(response, scenario) {
  const commands = extractCommands(response.text);
  const hasCommands = commands.length > 0;
  const responseLength = response.text.length;
  const hasEmoji = /[\u{1F300}-\u{1F9FF}]/u.test(response.text);
  
  let score = 0;
  let notes = [];
  
  // –û—Ü–µ–Ω–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–º–∞–Ω–¥
  if (scenario.name.includes('–∑–∞–ø–∏—Å—å') || scenario.name.includes('–æ—Ç–º–µ–Ω–∞')) {
    if (hasCommands) {
      score += 3;
      notes.push('‚úÖ –ï—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã');
    } else {
      notes.push('‚ùå –ù–µ—Ç –∫–æ–º–∞–Ω–¥');
    }
  }
  
  // –û—Ü–µ–Ω–∫–∞ –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
  if (responseLength < 300) {
    score += 2;
    notes.push('‚úÖ –ö—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç');
  } else if (responseLength < 500) {
    score += 1;
    notes.push('‚ö†Ô∏è –ù–µ–º–Ω–æ–≥–æ –¥–ª–∏–Ω–Ω—ã–π');
  } else {
    notes.push('‚ùå –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π');
  }
  
  // –û—Ü–µ–Ω–∫–∞ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ—Å—Ç–∏
  if (hasEmoji) {
    score += 1;
    notes.push('‚úÖ –ï—Å—Ç—å —ç–º–æ–¥–∑–∏');
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥
  commands.forEach(cmd => {
    if (cmd.command === 'SEARCH_SLOTS' && cmd.params.includes('date:')) {
      score += 1;
      notes.push('‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞');
    }
    if (cmd.command === 'CREATE_BOOKING' && cmd.params.includes('time:')) {
      score += 2;
      notes.push('‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø–∏—Å–∏');
    }
  });
  
  return { score, notes, commands };
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function runTests() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º Qwen3-30B-A3B –¥–ª—è AI Admin v2\n');
  console.log('–ú–æ–¥–µ–ª—å: 30B –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, 3.3B –∞–∫—Ç–∏–≤–Ω—ã—Ö, –∫–æ–Ω—Ç–µ–∫—Å—Ç 262K —Ç–æ–∫–µ–Ω–æ–≤');
  console.log('=' .repeat(80));
  
  const results = {
    qwen: [],
    deepseek: []
  };
  
  for (const scenario of TEST_SCENARIOS) {
    console.log(`\nüìã –°—Ü–µ–Ω–∞—Ä–∏–π: ${scenario.name}`);
    console.log(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: "${scenario.message}"`);
    console.log('-'.repeat(80));
    
    // –¢–µ—Å—Ç Qwen3-30B-A3B
    const qwenResult = await callQwen(scenario.message);
    if (qwenResult) {
      const evaluation = evaluateResponse(qwenResult, scenario);
      
      console.log('\nüü¢ Qwen3-30B-A3B:');
      console.log(`–û—Ç–≤–µ—Ç: ${qwenResult.text}`);
      console.log(`–í—Ä–µ–º—è: ${qwenResult.time}ms (—á–µ—Ä–µ–∑ ${qwenResult.provider})`);
      console.log(`–ö–æ–º–∞–Ω–¥—ã: ${evaluation.commands.map(c => c.full).join(', ') || '–Ω–µ—Ç'}`);
      console.log(`–û—Ü–µ–Ω–∫–∞: ${evaluation.score}/10 - ${evaluation.notes.join(', ')}`);
      
      results.qwen.push({
        scenario: scenario.name,
        time: qwenResult.time,
        score: evaluation.score,
        commands: evaluation.commands.length,
        response: qwenResult.text
      });
    }
    
    // –¢–µ—Å—Ç DeepSeek –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    const deepseekResult = await callDeepSeek(scenario.message);
    if (deepseekResult) {
      const evaluation = evaluateResponse(deepseekResult, scenario);
      
      console.log('\n‚ö´ DeepSeek (—Ç–µ–∫—É—â–µ–µ —Ä–µ—à–µ–Ω–∏–µ):');
      console.log(`–û—Ç–≤–µ—Ç: ${deepseekResult.text}`);
      console.log(`–í—Ä–µ–º—è: ${deepseekResult.time}ms`);
      console.log(`–ö–æ–º–∞–Ω–¥—ã: ${evaluation.commands.map(c => c.full).join(', ') || '–Ω–µ—Ç'}`);
      console.log(`–û—Ü–µ–Ω–∫–∞: ${evaluation.score}/10 - ${evaluation.notes.join(', ')}`);
      
      results.deepseek.push({
        scenario: scenario.name,
        time: deepseekResult.time,
        score: evaluation.score,
        commands: evaluation.commands.length,
        response: deepseekResult.text
      });
    }
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 2000));
  }
  
  // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log('\n\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
  console.log('='.repeat(80));
  
  // Qwen3-30B-A3B
  if (results.qwen.length > 0) {
    const avgTime = results.qwen.reduce((sum, r) => sum + r.time, 0) / results.qwen.length;
    const avgScore = results.qwen.reduce((sum, r) => sum + r.score, 0) / results.qwen.length;
    const commandSuccess = results.qwen.filter(r => r.commands > 0).length;
    
    console.log('\nüü¢ Qwen3-30B-A3B:');
    console.log(`- –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${Math.round(avgTime)}ms`);
    console.log(`- –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: ${avgScore.toFixed(1)}/10`);
    console.log(`- –û—Ç–≤–µ—Ç–æ–≤ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏: ${commandSuccess}/${results.qwen.length}`);
    console.log(`- –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: MoE (30B total, 3.3B active)`);
    console.log(`- –ö–æ–Ω—Ç–µ–∫—Å—Ç: 262K —Ç–æ–∫–µ–Ω–æ–≤`);
  }
  
  // DeepSeek
  if (results.deepseek.length > 0) {
    const avgTime = results.deepseek.reduce((sum, r) => sum + r.time, 0) / results.deepseek.length;
    const avgScore = results.deepseek.reduce((sum, r) => sum + r.score, 0) / results.deepseek.length;
    const commandSuccess = results.deepseek.filter(r => r.commands > 0).length;
    
    console.log('\n‚ö´ DeepSeek:');
    console.log(`- –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${Math.round(avgTime)}ms`);
    console.log(`- –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: ${avgScore.toFixed(1)}/10`);
    console.log(`- –û—Ç–≤–µ—Ç–æ–≤ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏: ${commandSuccess}/${results.deepseek.length}`);
    console.log(`- –ö–æ–Ω—Ç–µ–∫—Å—Ç: 128K —Ç–æ–∫–µ–Ω–æ–≤`);
  }
  
  // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
  if (results.qwen.length > 0 && results.deepseek.length > 0) {
    const qwenAvgTime = results.qwen.reduce((sum, r) => sum + r.time, 0) / results.qwen.length;
    const deepseekAvgTime = results.deepseek.reduce((sum, r) => sum + r.time, 0) / results.deepseek.length;
    const qwenAvgScore = results.qwen.reduce((sum, r) => sum + r.score, 0) / results.qwen.length;
    const deepseekAvgScore = results.deepseek.reduce((sum, r) => sum + r.score, 0) / results.deepseek.length;
    
    console.log('\nüèÜ –°–†–ê–í–ù–ï–ù–ò–ï:');
    console.log(`- –°–∫–æ—Ä–æ—Å—Ç—å: ${qwenAvgTime < deepseekAvgTime ? 'Qwen –±—ã—Å—Ç—Ä–µ–µ' : 'DeepSeek –±—ã—Å—Ç—Ä–µ–µ'} –Ω–∞ ${Math.abs(Math.round(qwenAvgTime - deepseekAvgTime))}ms`);
    console.log(`- –ö–∞—á–µ—Å—Ç–≤–æ: ${qwenAvgScore > deepseekAvgScore ? 'Qwen –ª—É—á—à–µ' : 'DeepSeek –ª—É—á—à–µ'} (${qwenAvgScore.toFixed(1)} vs ${deepseekAvgScore.toFixed(1)})`);
    console.log(`- –ö–æ–Ω—Ç–µ–∫—Å—Ç: Qwen 262K vs DeepSeek 128K (Qwen –≤ 2 —Ä–∞–∑–∞ –±–æ–ª—å—à–µ)`);
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  const fs = require('fs').promises;
  const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
  const resultsPath = `qwen3-30b-test-results-${timestamp}.json`;
  await fs.writeFile(resultsPath, JSON.stringify(results, null, 2));
  
  console.log(`\n‚úÖ –ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${resultsPath}`);
  
  // –§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
  console.log('1. Qwen3-30B-A3B –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ AI Admin');
  console.log('2. MoE –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –º–∞–ª–æ–π –º–æ–¥–µ–ª–∏ —Å –∫–∞—á–µ—Å—Ç–≤–æ–º –±–æ–ª—å—à–æ–π');
  console.log('3. –ö–æ–Ω—Ç–µ–∫—Å—Ç 262K —Ç–æ–∫–µ–Ω–æ–≤ –∏–¥–µ–∞–ª–µ–Ω –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤');
  console.log('4. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–Ω–µ–¥—Ä–∏—Ç—å –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω—É—é –º–æ–¥–µ–ª—å –≤–º–µ—Å—Ç–æ DeepSeek');
}

// –ó–∞–ø—É—Å–∫
console.log('üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º API –∫–ª—é—á –¥–ª—è Qwen3-30B-A3B\n');
runTests().catch(console.error);