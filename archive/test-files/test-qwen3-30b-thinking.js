#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Qwen3-30B-A3B —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º enable_thinking
 */

const axios = require('axios');

// API –∫–ª—é—á –¥–ª—è DashScope
const DASHSCOPE_API_KEY = 'sk-5903551cd419422cbf47ac6f9c6fa4ac';

// –ü—Ä–æ–º–ø—Ç –∏–∑ AI Admin v2
const AI_ADMIN_PROMPT = `–¢—ã - AI –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–∞—Ä–±–µ—Ä—à–æ–ø–∞ "–°—Ç–∏–ª—å".

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ê–õ–û–ù–ï:
–ù–∞–∑–≤–∞–Ω–∏–µ: –ë–∞—Ä–±–µ—Ä—à–æ–ø "–°—Ç–∏–ª—å"
–ê–¥—Ä–µ—Å: —É–ª. –õ–µ–Ω–∏–Ω–∞ 1, –ú–æ—Å–∫–≤–∞
–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: 10:00-20:00

–î–û–°–¢–£–ü–ù–´–ï –£–°–õ–£–ì–ò:
- –°—Ç—Ä–∏–∂–∫–∞ –º—É–∂—Å–∫–∞—è (id: 45) - 1500 —Ä—É–±., 30 –º–∏–Ω
- –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –±–æ—Ä–æ–¥—ã (id: 46) - 800 —Ä—É–±., 20 –º–∏–Ω
- –ö–æ–º–ø–ª–µ–∫—Å —Å—Ç—Ä–∏–∂–∫–∞+–±–æ—Ä–æ–¥–∞ (id: 47) - 2000 —Ä—É–±., 45 –º–∏–Ω

–ú–ê–°–¢–ï–†–ê –°–ï–ì–û–î–ù–Ø:
- –ò–≤–∞–Ω (id: 101) - —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 10:00 –¥–æ 20:00
- –ü–µ—Ç—Ä (id: 102) - —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 12:00 –¥–æ 18:00
- –ê–ª–µ–∫—Å–µ–π (id: 103) - —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 14:00 –¥–æ 20:00, —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –±–æ—Ä–æ–¥–µ

–í–ê–ñ–ù–û: –í—Å—Ç—Ä–∞–∏–≤–∞–π –∫–æ–º–∞–Ω–¥—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ [–ö–û–ú–ê–ù–î–ê –ø–∞—Ä–∞–º–µ—Ç—Ä—ã]:
- [SEARCH_SLOTS date:"2025-08-03" service_ids:[45]] - –ø–æ–∏—Å–∫ —Å–ª–æ—Ç–æ–≤
- [CREATE_BOOKING date:"2025-08-03" time:"15:00" service_id:45 staff_id:101] - —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏
- [SHOW_PRICES] - –ø–æ–∫–∞–∑–∞—Ç—å —Ü–µ–Ω—ã
- [CANCEL_BOOKING] - –æ—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏

–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ —É–º–µ—Ä–µ–Ω–Ω–æ.`;

// –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
const TEST_SCENARIOS = [
  {
    name: '–ü—Ä–æ—Å—Ç–∞—è –∑–∞–ø–∏—Å—å',
    message: '–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É –∑–∞–≤—Ç—Ä–∞'
  },
  {
    name: '–ó–∞–ø–∏—Å—å —Å –≤—Ä–µ–º–µ–Ω–µ–º',
    message: '–•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –ò–≤–∞–Ω—É –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É –∑–∞–≤—Ç—Ä–∞ –≤ 15:00'
  },
  {
    name: '–°–ª–æ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å',
    message: '–Ø —Ö–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–º–ø–ª–µ–∫—Å —Å—Ç—Ä–∏–∂–∫–∞+–±–æ—Ä–æ–¥–∞, –Ω–æ –Ω–µ –∑–Ω–∞—é –∫ –∫–æ–º—É –ª—É—á—à–µ. –ö—Ç–æ –∏–∑ –º–∞—Å—Ç–µ—Ä–æ–≤ –ª—É—á—à–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –±–æ—Ä–æ–¥–æ–π?'
  },
  {
    name: '–ó–∞–ø—Ä–æ—Å —Ü–µ–Ω',
    message: '–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç —Å—Ç—Ä–∏–∂–∫–∞ –∏ –±–æ—Ä–æ–¥–∞?'
  }
];

// –§—É–Ω–∫—Ü–∏—è –≤—ã–∑–æ–≤–∞ Qwen3-30B-A3B —Å thinking
async function callQwen30B(message, enableThinking = false) {
  const url = 'https://dashscope-intl.aliyuncs.com/compatible-mode/v1/chat/completions';
  
  try {
    const start = Date.now();
    
    // –ë–∞–∑–æ–≤–æ–µ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
    const requestBody = {
      model: 'qwen3-30b-a3b',
      messages: [
        {
          role: 'system',
          content: AI_ADMIN_PROMPT
        },
        {
          role: 'user',
          content: message
        }
      ],
      temperature: 0.7,
      top_p: 0.8,
      max_tokens: 1000
    };
    
    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–µ—Ä–µ–¥–∞—á–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
    if (enableThinking !== null) {
      // –°–ø–æ—Å–æ–± 1: –Ω–∞–ø—Ä—è–º—É—é –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞
      requestBody.enable_thinking = enableThinking;
      
      // –°–ø–æ—Å–æ–± 2: –≤ parameters
      requestBody.parameters = {
        enable_thinking: enableThinking
      };
      
      // –°–ø–æ—Å–æ–± 3: –≤ extra_body (–∫–∞–∫ –±—ã–ª–æ)
      requestBody.extra_body = {
        enable_thinking: enableThinking
      };
    }
    
    const response = await axios.post(url, requestBody, {
      headers: {
        'Authorization': `Bearer ${DASHSCOPE_API_KEY}`,
        'Content-Type': 'application/json'
      },
      timeout: 30000
    });
    
    const time = Date.now() - start;
    const text = response.data.choices[0].message.content;
    const usage = response.data.usage;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ thinking –≤ –æ—Ç–≤–µ—Ç–µ
    const hasThinking = response.data.choices[0].message.thinking_content || 
                       text.includes('<thinking>') || 
                       response.data.choices[0].thinking;
    
    return { 
      success: true,
      text, 
      time, 
      usage,
      hasThinking,
      thinking: response.data.choices[0].message.thinking_content || response.data.choices[0].thinking
    };
    
  } catch (error) {
    return {
      success: false,
      error: error.response?.data?.error?.message || error.message,
      code: error.response?.data?.error?.code
    };
  }
}

// –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
function extractCommands(text) {
  const regex = /\[([A-Z_]+)(?:\s+([^\]]+))?\]/g;
  const commands = [];
  let match;
  
  while ((match = regex.exec(text)) !== null) {
    commands.push(match[0]);
  }
  
  return commands;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function runTests() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º Qwen3-30B-A3B (MoE: 30B total, 3.3B active)\n');
  console.log('–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–∏:');
  console.log('- Mixture of Experts –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞');
  console.log('- 30.5B –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤—Å–µ–≥–æ, –Ω–æ —Ç–æ–ª—å–∫–æ 3.3B –∞–∫—Ç–∏–≤–Ω—ã');
  console.log('- –ö–æ–Ω—Ç–µ–∫—Å—Ç: 262K —Ç–æ–∫–µ–Ω–æ–≤');
  console.log('- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ "thinking" —Ä–µ–∂–∏–º–∞ –¥–ª—è —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏–π');
  console.log('=' .repeat(80));
  
  // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  console.log('\nüîß –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...\n');
  
  const configs = [
    { name: '–° enable_thinking: false', enableThinking: false },
    { name: '–° enable_thinking: true', enableThinking: true },
    { name: '–ë–µ–∑ extra_body', enableThinking: null }
  ];
  
  let workingConfig = null;
  
  for (const config of configs) {
    console.log(`–ü—Ä–æ–±—É–µ–º ${config.name}...`);
    const result = await callQwen30B('–ü—Ä–∏–≤–µ—Ç!', config.enableThinking);
    
    if (result.success) {
      console.log(`‚úÖ –£—Å–ø–µ—Ö! –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç`);
      workingConfig = config;
      break;
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${result.error}`);
    }
  }
  
  if (!workingConfig) {
    console.log('\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—á—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è Qwen3-30B-A3B');
    return;
  }
  
  // –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö
  console.log(`\n\nüéØ –¢–µ—Å—Ç 2: –†–µ–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π "${workingConfig.name}"\n`);
  console.log('=' .repeat(80));
  
  const results = [];
  
  for (const scenario of TEST_SCENARIOS) {
    console.log(`\nüìã –°—Ü–µ–Ω–∞—Ä–∏–π: ${scenario.name}`);
    console.log(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: "${scenario.message}"`);
    console.log('-'.repeat(80));
    
    const result = await callQwen30B(scenario.message, workingConfig.enableThinking);
    
    if (result.success) {
      const commands = extractCommands(result.text);
      
      console.log(`\n‚úÖ –û—Ç–≤–µ—Ç: ${result.text}`);
      console.log(`‚è±Ô∏è  –í—Ä–µ–º—è: ${result.time}ms`);
      console.log(`üéØ –ö–æ–º–∞–Ω–¥—ã: ${commands.join(', ') || '–Ω–µ—Ç'}`);
      console.log(`üìä –¢–æ–∫–µ–Ω—ã: ${result.usage?.total_tokens || '–Ω/–¥'}`);
      
      if (result.hasThinking && result.thinking) {
        console.log(`üí≠ –†–∞–∑–º—ã—à–ª–µ–Ω–∏—è: ${result.thinking.substring(0, 200)}...`);
      }
      
      results.push({
        scenario: scenario.name,
        time: result.time,
        commands: commands.length,
        tokens: result.usage?.total_tokens || 0,
        hasThinking: result.hasThinking
      });
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${result.error}`);
    }
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 2000));
  }
  
  // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  if (results.length > 0) {
    console.log('\n\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    console.log('='.repeat(80));
    
    const avgTime = results.reduce((sum, r) => sum + r.time, 0) / results.length;
    const commandSuccess = results.filter(r => r.commands > 0).length;
    const avgTokens = results.reduce((sum, r) => sum + r.tokens, 0) / results.length;
    const withThinking = results.filter(r => r.hasThinking).length;
    
    console.log('\nüü¢ Qwen3-30B-A3B (MoE):');
    console.log(`- –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${Math.round(avgTime)}ms`);
    console.log(`- –û—Ç–≤–µ—Ç–æ–≤ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏: ${commandSuccess}/${results.length}`);
    console.log(`- –°—Ä–µ–¥–Ω–∏–µ —Ç–æ–∫–µ–Ω—ã: ${Math.round(avgTokens)}`);
    console.log(`- –û—Ç–≤–µ—Ç–æ–≤ —Å —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è–º–∏: ${withThinking}/${results.length}`);
    console.log(`- –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: MoE (30.5B total, 3.3B active)`);
    console.log(`- –ö–æ–Ω—Ç–µ–∫—Å—Ç: 262K —Ç–æ–∫–µ–Ω–æ–≤`);
    
    console.log('\nüÜö –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ –º–æ–¥–µ–ª—è–º–∏:');
    console.log('- Qwen2.5-32B: 1378ms (–æ–±—ã—á–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞)');
    console.log('- Qwen-Turbo: 1499ms (—Å–∞–º–∞—è –¥–µ—à–µ–≤–∞—è)');
    console.log('- DeepSeek: ~7500ms (—Ç–µ–∫—É—â–µ–µ —Ä–µ—à–µ–Ω–∏–µ)');
    
    console.log('\nüí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê Qwen3-30B-A3B:');
    console.log('1. MoE –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ - —Å–∫–æ—Ä–æ—Å—Ç—å –º–∞–ª–µ–Ω—å–∫–æ–π –º–æ–¥–µ–ª–∏ (3.3B) —Å –∫–∞—á–µ—Å—Ç–≤–æ–º –±–æ–ª—å—à–æ–π (30B)');
    console.log('2. –û–≥—Ä–æ–º–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç 262K —Ç–æ–∫–µ–Ω–æ–≤ (–≤ 2 —Ä–∞–∑–∞ –±–æ–ª—å—à–µ DeepSeek)');
    console.log('3. –†–µ–∂–∏–º —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á');
    console.log('4. –û–ø—Ç–∏–º–∞–ª—å–Ω–∞ –¥–ª—è —á–∞—Ç-–±–æ—Ç–æ–≤ —Å –¥–ª–∏–Ω–Ω—ã–º–∏ –¥–∏–∞–ª–æ–≥–∞–º–∏');
  }
}

// –ó–∞–ø—É—Å–∫
console.log('üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º DashScope API (Alibaba Cloud)\n');
runTests().catch(console.error);