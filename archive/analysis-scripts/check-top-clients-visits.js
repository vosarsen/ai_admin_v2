const { supabase } = require('./src/database/supabase');

async function checkTopClientsVisits() {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê –í–ò–ó–ò–¢–û–í –¢–û–ü –ö–õ–ò–ï–ù–¢–û–í');
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
  
  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø –∫–ª–∏–µ–Ω—Ç–æ–≤
  const { data: topClients } = await supabase
    .from('clients')
    .select('id, name, yclients_id, visit_count')
    .eq('company_id', 962302)
    .order('visit_count', { ascending: false })
    .limit(5);
  
  for (const client of topClients || []) {
    console.log(`\nüìå ${client.name} (ID: ${client.id}, YClients: ${client.yclients_id})`);
    console.log(`   visit_count: ${client.visit_count}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–∑–∏—Ç—ã
    const { data: visits, count } = await supabase
      .from('visits')
      .select('*', { count: 'exact' })
      .eq('client_id', client.id)
      .limit(3);
    
    console.log(`   –í–∏–∑–∏—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ visits: ${count || 0}`);
    
    if (visits && visits.length > 0) {
      console.log('   –ü—Ä–∏–º–µ—Ä—ã –≤–∏–∑–∏—Ç–æ–≤:');
      visits.forEach(v => {
        console.log(`     ‚Ä¢ ${v.visit_date}: ${v.service_names?.join(', ') || '–±–µ–∑ —É—Å–ª—É–≥'}`);
      });
    } else {
      console.log('   ‚ùå –í–∏–∑–∏—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü–µ visits');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∏–∑–∏—Ç—ã –µ—Å—Ç—å –Ω–æ –Ω–µ —Å–≤—è–∑–∞–Ω—ã
      const { data: unlinkedVisits } = await supabase
        .from('visits')
        .select('id, client_yclients_id, client_name, visit_date')
        .eq('client_yclients_id', client.yclients_id)
        .limit(3);
      
      if (unlinkedVisits && unlinkedVisits.length > 0) {
        console.log(`   ‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –Ω–µ—Å–≤—è–∑–∞–Ω–Ω—ã–µ –≤–∏–∑–∏—Ç—ã –ø–æ yclients_id:`);
        unlinkedVisits.forEach(v => {
          console.log(`     ‚Ä¢ ${v.visit_date}: client_name=${v.client_name}`);
        });
      }
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –≤–∏–∑–∏—Ç–æ–≤ –Ω–µ —Å–≤—è–∑–∞–Ω–æ
  const { count: unlinkedCount } = await supabase
    .from('visits')
    .select('*', { count: 'exact', head: true })
    .is('client_id', null);
  
  console.log(`\n\n‚ö†Ô∏è –í—Å–µ–≥–æ –Ω–µ—Å–≤—è–∑–∞–Ω–Ω—ã—Ö –≤–∏–∑–∏—Ç–æ–≤ (client_id = null): ${unlinkedCount || 0}`);
}

checkTopClientsVisits().catch(console.error);