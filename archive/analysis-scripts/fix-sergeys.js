const { supabase } = require('./src/database/supabase');

async function fixSergeys() {
  console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–ê–ù–ù–´–• –î–õ–Ø –ö–õ–ò–ï–ù–¢–û–í –°–ï–†–ì–ï–ô');
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
  
  // ID –∫–ª–∏–µ–Ω—Ç–æ–≤ –°–µ—Ä–≥–µ–π –∏–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏
  const sergeyIds = [60970, 60986, 60988];
  
  for (const clientId of sergeyIds) {
    // –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
    const { data: client } = await supabase
      .from('clients')
      .select('*')
      .eq('id', clientId)
      .single();
    
    console.log(`\n${client.name} (ID: ${clientId}):`);
    console.log(`  YClients ID: ${client.yclients_id}`);
    console.log(`  visit_count: ${client.visit_count}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –µ–≥–æ –≤–∏–∑–∏—Ç—ã
    const { data: visits } = await supabase
      .from('visits')
      .select('*')
      .eq('client_id', clientId)
      .order('visit_date', { ascending: false });
    
    console.log(`  –ù–∞–π–¥–µ–Ω–æ –≤–∏–∑–∏—Ç–æ–≤: ${visits?.length || 0}`);
    
    if (visits && visits.length > 0) {
      // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
      const visitHistory = visits.slice(0, 50).map(v => ({
        date: v.visit_date,
        time: v.visit_time,
        services: v.service_names || []
      }));
      
      const lastServices = visits[0]?.service_names || [];
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞
      const { error } = await supabase
        .from('clients')
        .update({
          visit_history: visitHistory,
          last_services: lastServices
        })
        .eq('id', clientId);
      
      if (error) {
        console.log(`  ‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      } else {
        console.log(`  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ!`);
        console.log(`     –ò—Å—Ç–æ—Ä–∏—è: ${visitHistory.length} –∑–∞–ø–∏—Å–µ–π`);
        console.log(`     –ü–æ—Å–ª–µ–¥–Ω–∏–µ —É—Å–ª—É–≥–∏: ${lastServices.join(', ')}`);
      }
    }
  }
  
  console.log('\n\n–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç:');
  
  const { data: updatedClients } = await supabase
    .from('clients')
    .select('name, visit_history, last_services')
    .in('id', sergeyIds);
  
  for (const client of updatedClients || []) {
    console.log(`\n${client.name}:`);
    console.log(`  ‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è: ${client.visit_history?.length || 0} –∑–∞–ø–∏—Å–µ–π`);
    console.log(`  ‚Ä¢ –£—Å–ª—É–≥–∏: ${client.last_services?.join(', ') || '–ø—É—Å—Ç–æ'}`);
  }
}

fixSergeys().catch(console.error);