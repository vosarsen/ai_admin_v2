const axios = require('axios');
const config = require('./src/config');
const { supabase } = require('./src/database/supabase');

async function getTop40Clients() {
  try {
    console.log('üîç –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-40 –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-40 –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≤–∏–∑–∏—Ç–æ–≤
    const { data: topClients, error } = await supabase
      .from('clients')
      .select('*')
      .eq('company_id', 962302)
      .order('visit_count', { ascending: false })
      .limit(40);

    if (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤:', error);
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: ${topClients.length}\n`);

    // –¢–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∏–º –∏—Å—Ç–æ—Ä–∏—é –∏—Ö –∑–∞–ø–∏—Å–µ–π —á–µ—Ä–µ–∑ YClients API
    const headers = {
      'Accept': 'application/vnd.yclients.v2+json',
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${config.yclients.apiKey}, User ${config.yclients.userToken}`
    };

    console.log('üìä –ê–ù–ê–õ–ò–ó –¢–û–ü-40 –ö–õ–ò–ï–ù–¢–û–í KULTURA BARBERSHOP\n');
    console.log('=' .repeat(80));

    const clientsWithHistory = [];

    for (let i = 0; i < Math.min(topClients.length, 40); i++) {
      const client = topClients[i];
      
      try {
        // –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤
        const response = await axios.get(
          `https://api.yclients.com/api/v1/records/962302`,
          {
            headers,
            params: {
              client_id: client.yclients_id,
              start_date: '2025-02-01',
              end_date: '2025-08-08',
              count: 50
            }
          }
        );

        const records = response.data.data || [];
        
        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–ø–∏—Å–∏
        const services = {};
        const masters = {};
        const visitDates = [];
        let totalSpent = 0;
        let canceledCount = 0;
        let completedCount = 0;
        const visitTimes = [];

        records.forEach(record => {
          const visitDate = new Date(record.date);
          visitDates.push(visitDate);
          
          // –°–æ–±–∏—Ä–∞–µ–º –≤—Ä–µ–º—è –≤–∏–∑–∏—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
          const hour = visitDate.getHours();
          visitTimes.push(hour);

          // –£—á–∏—Ç—ã–≤–∞–µ–º —É—Å–ª—É–≥–∏
          if (record.services) {
            record.services.forEach(service => {
              services[service.title] = (services[service.title] || 0) + 1;
              if (record.attendance === 1) {
                totalSpent += service.cost || 0;
              }
            });
          }

          // –£—á–∏—Ç—ã–≤–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤
          if (record.staff?.name) {
            masters[record.staff.name] = (masters[record.staff.name] || 0) + 1;
          }

          // –°—Ç–∞—Ç—É—Å –≤–∏–∑–∏—Ç–∞
          if (record.attendance === 1) completedCount++;
          else if (record.attendance === -1) canceledCount++;
        });

        // –í—ã—á–∏—Å–ª—è–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã
        visitDates.sort((a, b) => a - b);
        const intervals = [];
        for (let j = 1; j < visitDates.length; j++) {
          const days = Math.floor((visitDates[j] - visitDates[j-1]) / (1000 * 60 * 60 * 24));
          if (days > 0 && days < 365) intervals.push(days);
        }
        
        const avgInterval = intervals.length > 0 
          ? Math.round(intervals.reduce((a, b) => a + b, 0) / intervals.length)
          : 0;

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ª—é–±–∏–º–æ–µ –≤—Ä–µ–º—è
        const avgHour = visitTimes.length > 0
          ? Math.round(visitTimes.reduce((a, b) => a + b, 0) / visitTimes.length)
          : 0;
        
        const timePreference = avgHour < 14 ? '—É—Ç—Ä–æ' : (avgHour < 18 ? '–¥–µ–Ω—å' : '–≤–µ—á–µ—Ä');

        // –°–æ—Ä—Ç–∏—Ä—É–µ–º —É—Å–ª—É–≥–∏ –∏ –º–∞—Å—Ç–µ—Ä–æ–≤ –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏
        const topServices = Object.entries(services).sort((a, b) => b[1] - a[1]);
        const topMasters = Object.entries(masters).sort((a, b) => b[1] - a[1]);

        clientsWithHistory.push({
          rank: i + 1,
          id: client.id,
          yclients_id: client.yclients_id,
          name: client.name || '–ë–µ–∑ –∏–º–µ–Ω–∏',
          phone: client.phone,
          email: client.email,
          visitCount: client.visit_count || records.length,
          totalSpent: totalSpent,
          avgCheck: completedCount > 0 ? Math.round(totalSpent / completedCount) : 0,
          lastVisit: client.last_visit_date,
          daysSinceLastVisit: client.last_visit_date 
            ? Math.floor((new Date() - new Date(client.last_visit_date)) / (1000 * 60 * 60 * 24))
            : 999,
          avgDaysBetweenVisits: avgInterval,
          favoriteService: topServices[0] ? topServices[0][0] : null,
          favoriteServiceCount: topServices[0] ? topServices[0][1] : 0,
          allServices: topServices.map(s => s[0]),
          favoriteMaster: topMasters[0] ? topMasters[0][0] : null,
          favoriteMasterCount: topMasters[0] ? topMasters[0][1] : 0,
          timePreference: timePreference,
          cancelRate: Math.round((canceledCount / records.length) * 100) || 0,
          discount: client.discount || 0,
          notes: client.comment || ''
        });

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        if ((i + 1) % 10 === 0) {
          console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${i + 1} –∏–∑ ${topClients.length} –∫–ª–∏–µ–Ω—Ç–æ–≤...`);
        }

      } catch (err) {
        console.error(`–û—à–∏–±–∫–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ ${client.name}:`, err.message);
        clientsWithHistory.push({
          rank: i + 1,
          id: client.id,
          name: client.name || '–ë–µ–∑ –∏–º–µ–Ω–∏',
          phone: client.phone,
          visitCount: client.visit_count,
          error: true
        });
      }

      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å API
      await new Promise(resolve => setTimeout(resolve, 200));
    }

    console.log('\n' + '=' .repeat(80));
    console.log('üìã –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ï GRAND SLAM OFFERS –î–õ–Ø –¢–û–ü-40 –ö–õ–ò–ï–ù–¢–û–í');
    console.log('=' .repeat(80) + '\n');

    // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä—ã
    clientsWithHistory.forEach(client => {
      if (client.error) {
        console.log(`‚ùå ${client.rank}. ${client.name} - –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã\n`);
        return;
      }

      console.log(`üéØ ${client.rank}. ${client.name} (${client.phone})`);
      console.log(`   üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${client.visitCount} –≤–∏–∑–∏—Ç–æ–≤ | ${client.totalSpent}‚ÇΩ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ | –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: ${client.avgCheck}‚ÇΩ`);
      console.log(`   ‚è∞ –ß–∞—Å—Ç–æ—Ç–∞: –∫–∞–∂–¥—ã–µ ${client.avgDaysBetweenVisits} –¥–Ω–µ–π | –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç: ${client.daysSinceLastVisit} –¥–Ω–µ–π –Ω–∞–∑–∞–¥`);
      console.log(`   ‚≠ê –õ—é–±–∏–º–∞—è —É—Å–ª—É–≥–∞: ${client.favoriteService} (${client.favoriteServiceCount} —Ä–∞–∑)`);
      console.log(`   üë® –õ—é–±–∏–º—ã–π –º–∞—Å—Ç–µ—Ä: ${client.favoriteMaster} (${client.favoriteMasterCount} —Ä–∞–∑)`);
      console.log(`   üïê –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç: ${client.timePreference}`);
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ñ—Ñ–µ—Ä
      console.log('\n   üíé –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ô GRAND SLAM OFFER:');
      
      // –õ–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
      if (client.daysSinceLastVisit > 30) {
        // –í–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π –æ—Ñ—Ñ–µ—Ä
        console.log(`   üì± "–í–û–ó–í–†–ê–©–ï–ù–ò–ï –ß–ï–ú–ü–ò–û–ù–ê"`);
        console.log(`   ‚úÖ –°–∫–∏–¥–∫–∞ 50% –Ω–∞ ${client.favoriteService}`);
        console.log(`   ‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —É ${client.favoriteMaster}`);
        console.log(`   ‚úÖ –ü–æ–¥–∞—Ä–æ–∫: –ø—Ä–µ–º–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ—Ü–µ–¥—É—Ä–∞`);
        console.log(`   üí∞ –¶–µ–Ω–∞: ${Math.round(client.avgCheck * 0.5)}‚ÇΩ (–≤–º–µ—Å—Ç–æ ${client.avgCheck}‚ÇΩ)`);
        console.log(`   ‚è≥ –î–µ–π—Å—Ç–≤—É–µ—Ç 7 –¥–Ω–µ–π!`);
        
      } else if (client.visitCount >= 8) {
        // VIP –±–µ–∑–ª–∏–º–∏—Ç
        console.log(`   üëë "VIP –ë–ï–ó–õ–ò–ú–ò–¢"`);
        console.log(`   ‚úÖ –ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –≤—Å–µ —É—Å–ª—É–≥–∏ –Ω–∞ –º–µ—Å—è—Ü`);
        console.log(`   ‚úÖ –õ–∏—á–Ω—ã–π WhatsApp ${client.favoriteMaster}`);
        console.log(`   ‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –≤ ${client.timePreference}`);
        console.log(`   üí∞ –¶–µ–Ω–∞: ${Math.round(client.avgCheck * 2.5)}‚ÇΩ/–º–µ—Å`);
        console.log(`   üéÅ –≠–∫–æ–Ω–æ–º–∏—è: –¥–æ ${Math.round(client.avgCheck * client.avgDaysBetweenVisits / 30 * 4 - client.avgCheck * 2.5)}‚ÇΩ`);
        
      } else if (client.avgDaysBetweenVisits <= 20) {
        // –ü–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è —á–∞—Å—Ç—ã—Ö
        console.log(`   üîÑ "–ü–û–î–ü–ò–°–ö–ê CHAMPION"`);
        console.log(`   ‚úÖ 2 –≤–∏–∑–∏—Ç–∞ –≤ –º–µ—Å—è—Ü –ø–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ü–µ–Ω–µ`);
        console.log(`   ‚úÖ ${client.favoriteService} + –±–æ–Ω—É—Å–Ω–∞—è —É—Å–ª—É–≥–∞`);
        console.log(`   ‚úÖ –í—Å–µ–≥–¥–∞ –≤ ${client.timePreference} —É ${client.favoriteMaster}`);
        console.log(`   üí∞ –¶–µ–Ω–∞: ${Math.round(client.avgCheck * 1.5)}‚ÇΩ/–º–µ—Å`);
        console.log(`   üéÅ –≠–∫–æ–Ω–æ–º–∏—è: ${Math.round(client.avgCheck * 2 - client.avgCheck * 1.5)}‚ÇΩ`);
        
      } else if (client.allServices.length >= 3) {
        // –ü–∞–∫–µ—Ç —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
        console.log(`   üé® "–ú–ê–°–¢–ï–† –°–¢–ò–õ–Ø"`);
        console.log(`   ‚úÖ 3 —Ä–∞–∑–Ω—ã–µ —É—Å–ª—É–≥–∏ —Å–æ —Å–∫–∏–¥–∫–æ–π 30%`);
        console.log(`   ‚úÖ –ú–æ–∂–Ω–æ –ø—Ä–æ–±–æ–≤–∞—Ç—å: ${client.allServices.slice(0, 3).join(', ')}`);
        console.log(`   ‚úÖ –î–µ–π—Å—Ç–≤—É–µ—Ç 2 –º–µ—Å—è—Ü–∞`);
        console.log(`   üí∞ –ü–∞–∫–µ—Ç: ${Math.round(client.avgCheck * 3 * 0.7)}‚ÇΩ`);
        
      } else {
        // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–≥–æ–¥–Ω—ã–π –ø–∞–∫–µ—Ç
        console.log(`   üíº "–°–ú–ê–†–¢ –ü–ê–ö–ï–¢"`);
        console.log(`   ‚úÖ 3 ${client.favoriteService} = —Ü–µ–Ω–∞ 2—Ö`);
        console.log(`   ‚úÖ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞ –Ω–∞ 3 –º–µ—Å—è—Ü–∞`);
        console.log(`   ‚úÖ –ú–æ–∂–Ω–æ –¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–æ–º`);
        console.log(`   üí∞ –ü–∞–∫–µ—Ç: ${Math.round(client.avgCheck * 2)}‚ÇΩ –∑–∞ 3 –≤–∏–∑–∏—Ç–∞`);
      }

      // –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã —Å—Ä–æ—á–Ω–æ—Å—Ç–∏
      if (client.cancelRate > 20) {
        console.log(`   ‚ö° –ë–û–ù–£–° –∑–∞ –ø—É–Ω–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å: -10% –µ—Å–ª–∏ –Ω–µ –æ—Ç–º–µ–Ω—è–µ—Ç–µ`);
      }
      if (client.discount > 0) {
        console.log(`   üéÅ –í–∞—à–∞ —Å–∫–∏–¥–∫–∞ ${client.discount}% —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è!`);
      }

      console.log('\n' + '-'.repeat(80) + '\n');
    });

    // –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('=' .repeat(80));
    console.log('üìä –°–í–û–î–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –¢–û–ü-40:');
    console.log('=' .repeat(80));
    
    const stats = {
      totalRevenue: clientsWithHistory.reduce((sum, c) => sum + (c.totalSpent || 0), 0),
      avgVisits: Math.round(clientsWithHistory.reduce((sum, c) => sum + (c.visitCount || 0), 0) / 40),
      avgCheck: Math.round(clientsWithHistory.reduce((sum, c) => sum + (c.avgCheck || 0), 0) / 40),
      needReturn: clientsWithHistory.filter(c => c.daysSinceLastVisit > 30).length,
      vipClients: clientsWithHistory.filter(c => c.visitCount >= 8).length,
      regularClients: clientsWithHistory.filter(c => c.visitCount >= 3 && c.visitCount < 8).length
    };

    console.log(`üí∞ –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞ —Å —Ç–æ–ø-40: ${stats.totalRevenue}‚ÇΩ`);
    console.log(`üìà –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–∑–∏—Ç–æ–≤: ${stats.avgVisits}`);
    console.log(`üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: ${stats.avgCheck}‚ÇΩ`);
    console.log(`üîÑ –ù—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å: ${stats.needReturn} –∫–ª–∏–µ–Ω—Ç–æ–≤`);
    console.log(`üëë VIP –∫–ª–∏–µ–Ω—Ç–æ–≤ (8+ –≤–∏–∑–∏—Ç–æ–≤): ${stats.vipClients}`);
    console.log(`‚≠ê –ü–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö (3-7 –≤–∏–∑–∏—Ç–æ–≤): ${stats.regularClients}`);

    console.log('\nüéØ –ü–û–¢–ï–ù–¶–ò–ê–õ –û–§–§–ï–†–û–í:');
    console.log(`–ï—Å–ª–∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º 50% –æ—Ñ—Ñ–µ—Ä–æ–≤:`);
    console.log(`- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤—ã—Ä—É—á–∫–∞: ~${Math.round(stats.avgCheck * stats.avgVisits * 20)}‚ÇΩ/–º–µ—Å`);
    console.log(`- –ü–æ–≤—ã—à–µ–Ω–∏–µ LTV: x2-3`);
    console.log(`- –°–Ω–∏–∂–µ–Ω–∏–µ –æ—Ç—Ç–æ–∫–∞: -50%`);

  } catch (error) {
    console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

getTop40Clients();