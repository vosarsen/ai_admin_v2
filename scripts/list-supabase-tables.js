require('dotenv').config({ path: require('path').join(__dirname, '..', '.env') });
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç SUPABASE_URL –∏–ª–∏ SUPABASE_KEY –≤ .env —Ñ–∞–π–ª–µ');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function listTables() {
  try {
    console.log('üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–∞–±–ª–∏—Ü –∏–∑ Supabase...\n');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü —á–µ—Ä–µ–∑ SQL –∑–∞–ø—Ä–æ—Å
    const { data, error } = await supabase
      .rpc('get_tables_info', {}, {
        get: true,
        head: false
      })
      .single();

    if (error) {
      // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥
      console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü...\n');
      
      // –°–ø–∏—Å–æ–∫ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü –∏–∑ CLAUDE.md
      const knownTables = [
        'companies',
        'bookings', 
        'clients',
        'messages',
        'actions',
        'staff_schedules',
        'services',
        'staff',
        'dialog_contexts',
        'booking_slots'
      ];
      
      console.log('üìã –ò–∑–≤–µ—Å—Ç–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n');
      
      for (const table of knownTables) {
        try {
          const { count, error } = await supabase
            .from(table)
            .select('*', { count: 'exact', head: true });
          
          if (!error) {
            console.log(`‚úÖ ${table.padEnd(20)} - ${count || 0} –∑–∞–ø–∏—Å–µ–π`);
          } else {
            console.log(`‚ùì ${table.padEnd(20)} - –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞`);
          }
        } catch (e) {
          console.log(`‚ùå ${table.padEnd(20)} - –æ—à–∏–±–∫–∞`);
        }
      }
    } else {
      // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      console.log('üìã –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n');
      console.log(data);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

listTables();