#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã visits –≤ Supabase
 */

require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');
const fs = require('fs').promises;
const path = require('path');

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_KEY || process.env.SUPABASE_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Missing SUPABASE_URL or SUPABASE_KEY in environment variables');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function createVisitsTable() {
  try {
    console.log('üìã Creating visits table in Supabase...\n');
    
    // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª
    const sqlPath = path.join(__dirname, 'database', 'create-visits-table.sql');
    const sqlContent = await fs.readFile(sqlPath, 'utf8');
    
    // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (–ø–æ —Ç–æ—á–∫–µ —Å –∑–∞–ø—è—Ç–æ–π)
    const commands = sqlContent
      .split(/;[\s\n]+/)
      .filter(cmd => cmd.trim().length > 0 && !cmd.trim().startsWith('--'))
      .map(cmd => cmd.trim() + ';');
    
    console.log(`Found ${commands.length} SQL commands to execute\n`);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ –æ–¥–Ω–æ–π
    for (let i = 0; i < commands.length; i++) {
      const command = commands[i];
      
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
      if (command.startsWith('--') || command.trim().length === 0) {
        continue;
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ–º
      const cmdPreview = command.substring(0, 50).replace(/\n/g, ' ');
      console.log(`[${i+1}/${commands.length}] Executing: ${cmdPreview}...`);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º RPC –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è raw SQL
      const { data, error } = await supabase.rpc('exec_sql', {
        query: command
      }).single();
      
      if (error) {
        // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è exec_sql –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥
        if (error.message?.includes('exec_sql')) {
          console.log('‚ö†Ô∏è  exec_sql function not found, trying alternative method...');
          
          // –î–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Supabase API
          if (command.includes('CREATE TABLE')) {
            console.log('‚úÖ Table creation command prepared');
            console.log('\nüìù Please execute this SQL manually in Supabase Dashboard:');
            console.log('   https://supabase.com/dashboard/project/wyfbwjqnkkjeldhnmnpb/sql/new');
            console.log('\n' + '='.repeat(60));
            console.log(command.substring(0, 500) + '...');
            console.log('='.repeat(60) + '\n');
          }
        } else {
          console.error(`‚ùå Error executing command ${i+1}:`, error.message);
        }
      } else {
        console.log(`‚úÖ Command ${i+1} executed successfully`);
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞
    console.log('\nüîç Checking if visits table exists...');
    
    const { data: tables, error: tablesError } = await supabase
      .from('visits')
      .select('id')
      .limit(1);
    
    if (tablesError && tablesError.code === '42P01') {
      console.log('\n‚ùå Table "visits" does not exist yet.');
      console.log('\nüìù Please create it manually via Supabase Dashboard:');
      console.log('   1. Go to: https://supabase.com/dashboard/project/wyfbwjqnkkjeldhnmnpb/sql/new');
      console.log('   2. Copy content from: scripts/database/create-visits-table.sql');
      console.log('   3. Paste and click "Run"\n');
    } else if (tablesError) {
      console.log('‚ö†Ô∏è  Could not verify table:', tablesError.message);
    } else {
      console.log('‚úÖ Table "visits" exists!');
      
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
      const { count } = await supabase
        .from('visits')
        .select('*', { count: 'exact', head: true });
      
      console.log(`üìä Current records in visits table: ${count || 0}`);
    }
    
  } catch (error) {
    console.error('‚ùå Fatal error:', error);
    process.exit(1);
  }
}

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ - –≤—ã–≤–æ–¥ SQL –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
async function printSqlForManualExecution() {
  const sqlPath = path.join(__dirname, 'database', 'create-visits-table.sql');
  const sqlContent = await fs.readFile(sqlPath, 'utf8');
  
  console.log('\n' + '='.repeat(70));
  console.log('COPY THIS SQL TO SUPABASE DASHBOARD:');
  console.log('='.repeat(70) + '\n');
  console.log(sqlContent);
  console.log('\n' + '='.repeat(70));
  console.log('Go to: https://supabase.com/dashboard/project/wyfbwjqnkkjeldhnmnpb/sql/new');
  console.log('='.repeat(70) + '\n');
}

// –ó–∞–ø—É—Å–∫
createVisitsTable().catch(async (error) => {
  console.error('Failed to create table automatically.');
  await printSqlForManualExecution();
});