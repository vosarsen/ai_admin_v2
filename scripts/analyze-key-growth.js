#!/usr/bin/env node

// Analyze key creation rate and predict future growth

require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;

async function analyzeGrowth() {
  const supabase = createClient(supabaseUrl, supabaseKey);

  console.log('üìä –ê–Ω–∞–ª–∏–∑ —Ä–æ—Å—Ç–∞ –∫–ª—é—á–µ–π...\n');

  // Total keys
  const { count: total } = await supabase
    .from('whatsapp_keys')
    .select('*', { count: 'exact', head: true });

  // Keys created in last 24 hours
  const yesterday = new Date();
  yesterday.setHours(yesterday.getHours() - 24);

  const { count: last24h } = await supabase
    .from('whatsapp_keys')
    .select('*', { count: 'exact', head: true })
    .gte('created_at', yesterday.toISOString());

  // Keys created in last 7 days
  const lastWeek = new Date();
  lastWeek.setDate(lastWeek.getDate() - 7);

  const { count: last7days } = await supabase
    .from('whatsapp_keys')
    .select('*', { count: 'exact', head: true })
    .gte('created_at', lastWeek.toISOString());

  // Oldest key
  const { data: oldest } = await supabase
    .from('whatsapp_keys')
    .select('created_at')
    .order('created_at', { ascending: true })
    .limit(1);

  const daysOld = oldest && oldest[0]
    ? Math.floor((Date.now() - new Date(oldest[0].created_at).getTime()) / 1000 / 60 / 60 / 24)
    : 0;

  console.log('üìà –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:');
  console.log(`   –í—Å–µ–≥–æ –∫–ª—é—á–µ–π: ${total}`);
  console.log(`   –°–∞–º—ã–π —Å—Ç–∞—Ä—ã–π –∫–ª—é—á: ${daysOld} –¥–Ω–µ–π –Ω–∞–∑–∞–¥\n`);

  console.log('üîÑ –°–∫–æ—Ä–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è:');
  console.log(`   –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: ${last24h || 0} –∫–ª—é—á–µ–π`);
  console.log(`   –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π: ${last7days || 0} –∫–ª—é—á–µ–π`);

  const dailyRate = last7days ? Math.round(last7days / 7) : 0;
  console.log(`   –°—Ä–µ–¥–Ω–µ–µ –≤ –¥–µ–Ω—å: ~${dailyRate} –∫–ª—é—á–µ–π/–¥–µ–Ω—å\n`);

  console.log('üí° –ü—Ä–æ–≥–Ω–æ–∑ —Å TTL:');

  // Scenario 1: TTL = 7 days
  const equilibrium7d = dailyRate * 7;
  console.log(`\n1Ô∏è‚É£  –° TTL = 7 –¥–Ω–µ–π:`);
  console.log(`   –†–∞–≤–Ω–æ–≤–µ—Å–∏–µ: ~${equilibrium7d} –∫–ª—é—á–µ–π`);
  console.log(`   –ò–∑–º–µ–Ω–µ–Ω–∏–µ: ${total} ‚Üí ${equilibrium7d} (${equilibrium7d - total >= 0 ? '+' : ''}${equilibrium7d - total})`);

  if (equilibrium7d < total) {
    const reduction = Math.round((1 - equilibrium7d / total) * 100);
    console.log(`   ‚úÖ –£–º–µ–Ω—å—à–µ–Ω–∏–µ –Ω–∞ ${reduction}%`);
  } else {
    console.log(`   ‚ö†Ô∏è  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫–∏–º –∂–µ`);
  }

  // Scenario 2: TTL = 14 days
  const equilibrium14d = dailyRate * 14;
  console.log(`\n2Ô∏è‚É£  –° TTL = 14 –¥–Ω–µ–π:`);
  console.log(`   –†–∞–≤–Ω–æ–≤–µ—Å–∏–µ: ~${equilibrium14d} –∫–ª—é—á–µ–π`);
  console.log(`   –ò–∑–º–µ–Ω–µ–Ω–∏–µ: ${total} ‚Üí ${equilibrium14d} (${equilibrium14d - total >= 0 ? '+' : ''}${equilibrium14d - total})`);

  console.log('\nüìä –í—ã–≤–æ–¥:');

  if (dailyRate === 0) {
    console.log('‚ö†Ô∏è  –ù–µ—Ç –Ω–æ–≤—ã—Ö –∫–ª—é—á–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π!');
    console.log('   –í—Å–µ 665 –∫–ª—é—á–µ–π - —Å—Ç–∞—Ä—ã–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ.');
    console.log('   ‚úÖ Cleanup —É–¥–∞–ª–∏—Ç –í–°–ï —Å—Ç–∞—Ä—ã–µ –∫–ª—é—á–∏ —á–µ—Ä–µ–∑ 7-14 –¥–Ω–µ–π');
    console.log(`   –û—Å—Ç–∞–Ω–µ—Ç—Å—è: 0-50 –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª—é—á–µ–π`);
  } else if (equilibrium7d < total * 0.5) {
    console.log('‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π –ó–ù–ê–ß–ò–¢–ï–õ–¨–ù–û –£–ú–ï–ù–¨–®–ò–¢–°–Ø');
  } else if (equilibrium7d < total) {
    console.log('‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π —É–º–µ–Ω—å—à–∏—Ç—Å—è');
  } else if (equilibrium7d <= total * 1.1) {
    console.log('‚ö†Ô∏è  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫–∏–º –∂–µ');
  } else {
    console.log('üî¥ –í–ù–ò–ú–ê–ù–ò–ï: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–¥–µ—Ç —Ä–∞—Å—Ç–∏!');
    console.log('   –ù—É–∂–Ω–æ —É–º–µ–Ω—å—à–∏—Ç—å TTL –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—á–µ–º—É —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ç–∞–∫ –º–Ω–æ–≥–æ –∫–ª—é—á–µ–π');
  }
}

analyzeGrowth().catch(console.error);
