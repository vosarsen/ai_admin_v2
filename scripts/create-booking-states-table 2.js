#!/usr/bin/env node

const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Missing SUPABASE_URL or SUPABASE_KEY environment variables');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function createBookingStatesTable() {
  console.log('üìã Creating booking_states table...');

  // SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
  const sql = `
    -- –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –∑–∞–ø–∏—Å–µ–π
    CREATE TABLE IF NOT EXISTS booking_states (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        yclients_record_id TEXT NOT NULL UNIQUE,
        company_id INTEGER NOT NULL,
        
        -- –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–ø–∏—Å–∏
        attendance INTEGER DEFAULT 0, -- 2=–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, 1=–ø—Ä–∏—à–µ–ª, 0=–æ–∂–∏–¥–∞–Ω–∏–µ, -1=–Ω–µ –ø—Ä–∏—à–µ–ª
        datetime TIMESTAMP NOT NULL,
        
        -- –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        services JSONB,
        staff_id INTEGER,
        staff_name TEXT,
        client_phone TEXT,
        client_name TEXT,
        price DECIMAL(10,2),
        
        -- –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        last_attendance INTEGER, -- –ü—Ä–µ–¥—ã–¥—É—â–∏–π —Å—Ç–∞—Ç—É—Å attendance
        last_datetime TIMESTAMP, -- –ü—Ä–µ–¥—ã–¥—É—â–µ–µ –≤—Ä–µ–º—è
        last_services JSONB, -- –ü—Ä–µ–¥—ã–¥—É—â–∏–µ —É—Å–ª—É–≥–∏
        last_staff_id INTEGER, -- –ü—Ä–µ–¥—ã–¥—É—â–∏–π –º–∞—Å—Ç–µ—Ä
        
        -- –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        created_at TIMESTAMP DEFAULT NOW(),
        updated_at TIMESTAMP DEFAULT NOW(),
        last_checked_at TIMESTAMP DEFAULT NOW()
    );

    -- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
    CREATE INDEX IF NOT EXISTS idx_booking_states_record_id ON booking_states(yclients_record_id);
    CREATE INDEX IF NOT EXISTS idx_booking_states_company ON booking_states(company_id);
    CREATE INDEX IF NOT EXISTS idx_booking_states_datetime ON booking_states(datetime);
    CREATE INDEX IF NOT EXISTS idx_booking_states_attendance ON booking_states(attendance);

    -- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    COMMENT ON TABLE booking_states IS '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π';
    COMMENT ON COLUMN booking_states.attendance IS '2=–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, 1=–ø—Ä–∏—à–µ–ª, 0=–æ–∂–∏–¥–∞–Ω–∏–µ, -1=–Ω–µ –ø—Ä–∏—à–µ–ª';
    COMMENT ON COLUMN booking_states.last_attendance IS '–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π';
  `;

  try {
    // –í—ã–ø–æ–ª–Ω—è–µ–º SQL —á–µ—Ä–µ–∑ RPC —Ñ—É–Ω–∫—Ü–∏—é (–µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å) –∏–ª–∏ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π SQL
    const { data, error } = await supabase.rpc('exec_sql', { sql_query: sql }).single();
    
    if (error) {
      // –ï—Å–ª–∏ RPC —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—ã—Ç–∞–µ–º—Å—è –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º
      console.log('‚ö†Ô∏è RPC function not available, trying alternative method...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞
      const { data: tables, error: checkError } = await supabase
        .from('booking_states')
        .select('id')
        .limit(1);
      
      if (checkError && checkError.code === 'PGRST116') {
        console.error('‚ùå Table does not exist and cannot be created via API');
        console.log('üìù Please execute the following SQL in Supabase SQL Editor:');
        console.log(sql);
        return;
      } else if (!checkError) {
        console.log('‚úÖ Table booking_states already exists');
        return;
      }
    }

    console.log('‚úÖ Table booking_states created successfully');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞
    const { count, error: countError } = await supabase
      .from('booking_states')
      .select('*', { count: 'exact', head: true });
    
    if (!countError) {
      console.log(`‚úÖ Table booking_states exists with ${count || 0} rows`);
    }

  } catch (err) {
    console.error('‚ùå Error creating table:', err);
    console.log('\nüìù Please execute the following SQL in Supabase SQL Editor:');
    console.log(sql);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
createBookingStatesTable();