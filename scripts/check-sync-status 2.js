#!/usr/bin/env node
/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
 */

require('dotenv').config();
const { getSyncManager } = require('../src/sync/sync-manager');

async function checkSyncStatus() {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò');
  console.log('='.repeat(50));
  
  const syncManager = getSyncManager();
  const status = await syncManager.getStatus();
  
  console.log('\nüìä –°—Ç–∞—Ç—É—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞:');
  console.log('  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', status.initialized ? '‚úÖ' : '‚ùå');
  console.log('  –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–µ–π—á–∞—Å:', status.running ? 'üîÑ' : '‚è∏Ô∏è');
  console.log('  –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á:', status.scheduledJobs);
  
  console.log('\n‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (Moscow time):');
  Object.entries(status.schedule).forEach(([entity, cron]) => {
    const description = getScheduleDescription(entity, cron);
    console.log(`  ${entity}: ${description}`);
  });
  
  console.log('\nüí° –ü–æ–¥—Å–∫–∞–∑–∫–∏:');
  console.log('  - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞');
  console.log('  - –î–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞: node scripts/manual-sync.js [entity]');
  console.log('  - –õ–æ–≥–∏: pm2 logs ai-admin-api');
  
  process.exit(0);
}

function getScheduleDescription(entity, cron) {
  const descriptions = {
    'services': '01:00 –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
    'staff': '02:00 –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
    'clients': '03:00 –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
    'schedules': '–ö–∞–∂–¥—ã–µ 4 —á–∞—Å–∞',
    'company': '00:00 –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è–º'
  };
  return `${cron} (${descriptions[entity] || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'})`;
}

checkSyncStatus().catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  process.exit(1);
});