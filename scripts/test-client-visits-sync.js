#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –≤–∏–∑–∏—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/test-client-visits-sync.js [phone]
 */

require('dotenv').config();
const { ClientVisitsSync } = require('../src/sync/client-visits-sync');

async function testSync(phone) {
  console.log('üîÑ Testing client visits sync...');
  console.log('=' .repeat(60));
  
  const sync = new ClientVisitsSync();
  
  try {
    if (phone) {
      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
      console.log(`üì± Syncing visits for phone: ${phone}`);
      const result = await sync.syncClientVisitsByPhone(phone);
      
      console.log('\n‚úÖ Sync completed:');
      console.log(`Client: ${result.client}`);
      console.log(`Total visits: ${result.visitsCount}`);
      
      if (result.visits && result.visits.length > 0) {
        console.log('\nüìÖ Visit history:');
        result.visits.forEach((visit, index) => {
          console.log(`\n${index + 1}. ${visit.date || visit.datetime}`);
          if (visit.services && visit.services.length > 0) {
            console.log(`   Services: ${visit.services.map(s => s.title || s.name).join(', ')}`);
          }
          if (visit.staff) {
            console.log(`   Staff: ${visit.staff.name || 'Not specified'}`);
          }
          console.log(`   Cost: ${visit.cost || 0} —Ä—É–±.`);
          console.log(`   Status: ${visit.status || 'unknown'}`);
        });
      }
    } else {
      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–ª—è –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
      console.log('üåê Syncing visits for ALL clients...');
      console.log('‚ö†Ô∏è  This may take a while and use many API requests!');
      console.log('Press Ctrl+C to cancel\n');
      
      // –î–∞–µ–º –≤—Ä–µ–º—è –æ—Ç–º–µ–Ω–∏—Ç—å
      await new Promise(resolve => setTimeout(resolve, 3000));
      
      const result = await sync.syncAllClientsVisits();
      
      console.log('\n‚úÖ Full sync completed:');
      console.log(`Processed clients: ${result.processed}`);
      console.log(`Total visits synced: ${result.totalVisits}`);
      console.log(`Errors: ${result.errors}`);
      console.log(`Duration: ${result.duration} seconds`);
    }
    
  } catch (error) {
    console.error('\n‚ùå Sync failed:', error.message);
    if (error.response) {
      console.error('API Response:', error.response.data);
    }
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
const phone = process.argv[2];

if (process.argv.includes('--help') || process.argv.includes('-h')) {
  console.log('Usage: node scripts/test-client-visits-sync.js [phone]');
  console.log('\nExamples:');
  console.log('  node scripts/test-client-visits-sync.js +79686484488  # Sync specific client');
  console.log('  node scripts/test-client-visits-sync.js               # Sync ALL clients (careful!)');
  process.exit(0);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!process.env.YCLIENTS_BEARER_TOKEN || !process.env.YCLIENTS_USER_TOKEN) {
  console.error('‚ùå Missing required environment variables:');
  console.error('   YCLIENTS_BEARER_TOKEN');
  console.error('   YCLIENTS_USER_TOKEN');
  console.error('\nPlease check your .env file');
  process.exit(1);
}

testSync(phone).catch(console.error);