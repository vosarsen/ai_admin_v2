#!/usr/bin/env node
/**
 * –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/create-test-context.js
 */

const contextService = require('../src/services/context');
const dataLoader = require('../src/services/ai-admin-v2/modules/data-loader');
const logger = require('../src/utils/logger').child({ module: 'create-test-context' });

async function createTestContexts() {
  const companyId = 962302;
  
  logger.info('üé≠ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤...\n');
  
  try {
    // 1. –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç —Å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏
    logger.info('1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –ú–∞—Ä–∏—é...');
    const mariaPhone = '79002222222';
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
    await contextService.savePreferences(mariaPhone, companyId, {
      favoriteService: '–ú–∞–Ω–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º',
      favoriteStaff: '–ê–Ω–Ω–∞',
      preferredTime: 'morning',
      lastBookingDate: '2025-07-20',
      notes: '–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Ü–≤–µ—Ç–∞'
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
    await contextService.updateContext(mariaPhone, companyId, {
      lastMessage: { role: 'user', content: '–•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–∞–Ω–∏–∫—é—Ä' },
      clientInfo: { name: '–ú–∞—Ä–∏—è' }
    });
    
    await contextService.updateContext(mariaPhone, companyId, {
      lastMessage: { role: 'assistant', content: '–ú–∞—Ä–∏—è, –∑–∞–ø–∏—Å–∞–ª–∞ –≤–∞—Å –Ω–∞ –º–∞–Ω–∏–∫—é—Ä –∫ –ê–Ω–Ω–µ!' }
    });
    
    logger.info('‚úÖ –ú–∞—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞ —Å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏\n');
    
    // 2. –ö–ª–∏–µ–Ω—Ç —Å –Ω–µ–¥–∞–≤–Ω–∏–º –¥–∏–∞–ª–æ–≥–æ–º
    logger.info('2Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –ù–∏–∫–æ–ª–∞—è —Å –∞–∫—Ç–∏–≤–Ω—ã–º –¥–∏–∞–ª–æ–≥–æ–º...');
    const nikolayPhone = '79003333333';
    
    await contextService.setContext(nikolayPhone, companyId, {
      state: 'active',
      data: { clientName: '–ù–∏–∫–æ–ª–∞–π' }
    });
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥ 2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
    const twoHoursAgo = new Date(Date.now() - 2 * 60 * 60 * 1000);
    await contextService.updateContext(nikolayPhone, companyId, {
      lastMessage: { 
        role: 'user', 
        content: '–ü—Ä–∏–≤–µ—Ç, —Ö–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É',
        timestamp: twoHoursAgo.toISOString()
      },
      clientInfo: { name: '–ù–∏–∫–æ–ª–∞–π' }
    });
    
    await contextService.updateContext(nikolayPhone, companyId, {
      lastMessage: { 
        role: 'assistant', 
        content: '–ù–∏–∫–æ–ª–∞–π, –Ω–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –≤–∞—Å –∑–∞–ø–∏—Å–∞—Ç—å?',
        timestamp: new Date(twoHoursAgo.getTime() + 60000).toISOString()
      }
    });
    
    logger.info('‚úÖ –ù–∏–∫–æ–ª–∞–π —Å–æ–∑–¥–∞–Ω —Å –ø—Ä–µ—Ä–≤–∞–Ω–Ω—ã–º –¥–∏–∞–ª–æ–≥–æ–º\n');
    
    // 3. –°—Ç–∞—Ä—ã–π –∫–ª–∏–µ–Ω—Ç (–¥–ª—è —Ç–µ—Å—Ç–∞ –æ—á–∏—Å—Ç–∫–∏)
    logger.info('3Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ä–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –ü–µ—Ç—Ä–∞...');
    const petrPhone = '79004444444';
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –≤—Ä—É—á–Ω—É—é —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—É—é –¥–∞—Ç—É
    const redis = contextService.redis;
    const oldContextKey = `${companyId}:${petrPhone}`;
    
    await redis.hset(oldContextKey, {
      'phone': petrPhone,
      'companyId': companyId,
      'lastActivity': new Date(Date.now() - 35 * 24 * 60 * 60 * 1000).toISOString(), // 35 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
      'state': 'old',
      'data': JSON.stringify({ clientName: '–ü–µ—Ç—Ä' })
    });
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π TTL –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    await redis.expire(oldContextKey, 60 * 60); // 1 —á–∞—Å
    
    logger.info('‚úÖ –ü–µ—Ç—Ä —Å–æ–∑–¥–∞–Ω —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º (35 –¥–Ω–µ–π)\n');
    
    // 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ Supabase
    logger.info('4Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Supabase...');
    
    await dataLoader.saveContext(mariaPhone + '@c.us', companyId, {
      client: { name: '–ú–∞—Ä–∏—è', phone: mariaPhone },
      conversation: []
    }, {
      response: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ',
      executedCommands: []
    });
    
    logger.info('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Supabase\n');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('üìä –°–û–ó–î–ê–ù–ù–´–ï –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï:\n');
    console.log(`1. –ú–∞—Ä–∏—è (${mariaPhone})`);
    console.log('   - –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç —Å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏');
    console.log('   - –õ—é–±–∏—Ç –º–∞–Ω–∏–∫—é—Ä —Å –ê–Ω–Ω–æ–π –ø–æ —É—Ç—Ä–∞–º');
    console.log('');
    console.log(`2. –ù–∏–∫–æ–ª–∞–π (${nikolayPhone})`);
    console.log('   - –ê–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ 2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥');
    console.log('   - –ù–µ –∑–∞–≤–µ—Ä—à–∏–ª –∑–∞–ø–∏—Å—å –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É');
    console.log('');
    console.log(`3. –ü–µ—Ç—Ä (${petrPhone})`);
    console.log('   - –°—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (35 –¥–Ω–µ–π)');
    console.log('   - –î–ª—è —Ç–µ—Å—Ç–∞ –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∏');
    console.log('');
    
    console.log('üß™ –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ü–†–û–í–ï–†–ö–ò:\n');
    console.log('# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –ú–∞—Ä–∏–∏:');
    console.log(`node check-context-status.js ${mariaPhone}\n`);
    
    console.log('# –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ú–∞—Ä–∏–∏:');
    console.log(`node test-webhook.js "${mariaPhone}" "–ü—Ä–∏–≤–µ—Ç"\n`);
    
    console.log('# –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∏–∞–ª–æ–≥ –ù–∏–∫–æ–ª–∞—è:');
    console.log(`node test-webhook.js "${nikolayPhone}" "–î–∞–≤–∞–π –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –≤ 15:00"\n`);
    
    console.log('# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—á–∏—Å—Ç–∫—É (dry run):');
    console.log('node scripts/cleanup-old-contexts.js --days=30 --dry-run\n');
    
    logger.info('‚úÖ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã —Å–æ–∑–¥–∞–Ω—ã!');
    
  } catch (error) {
    logger.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
  }
  
  process.exit(0);
}

// –ó–∞–ø—É—Å–∫
createTestContexts();