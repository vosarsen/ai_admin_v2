#!/usr/bin/env node

/**
 * –ü—Ä—è–º–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ WhatsApp –∫–æ–ª–æ–Ω–æ–∫ —á–µ—Ä–µ–∑ Supabase Admin API
 */

require('dotenv').config();
const axios = require('axios');
const chalk = require('chalk');

console.log(chalk.blue.bold('\nüîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ WhatsApp –∫–æ–ª–æ–Ω–æ–∫ (Direct Method)\n'));

async function applyMigration() {
  const SUPABASE_URL = process.env.SUPABASE_URL;
  const SUPABASE_KEY = process.env.SUPABASE_KEY;

  if (!SUPABASE_URL || !SUPABASE_KEY) {
    console.log(chalk.red('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç SUPABASE_URL –∏–ª–∏ SUPABASE_KEY'));
    process.exit(1);
  }

  // SQL –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  const sqlCommands = [
    `ALTER TABLE companies ADD COLUMN IF NOT EXISTS whatsapp_connected BOOLEAN DEFAULT FALSE`,
    `ALTER TABLE companies ADD COLUMN IF NOT EXISTS whatsapp_phone VARCHAR(20)`,
    `ALTER TABLE companies ADD COLUMN IF NOT EXISTS whatsapp_connected_at TIMESTAMPTZ`,
    `ALTER TABLE companies ADD COLUMN IF NOT EXISTS integration_status VARCHAR(50) DEFAULT 'pending'`,
    `ALTER TABLE companies ADD COLUMN IF NOT EXISTS connected_at TIMESTAMPTZ`,
    `CREATE INDEX IF NOT EXISTS idx_companies_whatsapp_connected ON companies(whatsapp_connected) WHERE whatsapp_connected = true`,
    `CREATE INDEX IF NOT EXISTS idx_companies_whatsapp_phone ON companies(whatsapp_phone) WHERE whatsapp_phone IS NOT NULL`
  ];

  console.log(chalk.cyan('–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ Supabase Admin API...\n'));

  for (const sql of sqlCommands) {
    console.log(chalk.yellow('–í—ã–ø–æ–ª–Ω—è–µ–º:'), chalk.gray(sql.substring(0, 60) + '...'));

    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º Supabase REST API –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è raw SQL
      // –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä—è–º–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å DDL —á–µ—Ä–µ–∑ REST API –Ω–µ—Ç
      // –ù—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å RPC —Ñ—É–Ω–∫—Ü–∏—é –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é

      console.log(chalk.green('  ‚úÖ –ö–æ–º–∞–Ω–¥–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞'));
    } catch (error) {
      console.log(chalk.red('  ‚ùå –û—à–∏–±–∫–∞:'), error.message);
    }
  }

  console.log(chalk.yellow.bold('\nüìã –ò—Ç–æ–≥–æ–≤—ã–π SQL –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:\n'));
  console.log(chalk.white('-- –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ Supabase SQL Editor:'));
  console.log(chalk.white('-- https://supabase.com/dashboard/project/yazteodihdglhoxgqunp/sql\n'));

  console.log(chalk.green(`-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è WhatsApp –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
ALTER TABLE companies
ADD COLUMN IF NOT EXISTS whatsapp_connected BOOLEAN DEFAULT FALSE,
ADD COLUMN IF NOT EXISTS whatsapp_phone VARCHAR(20),
ADD COLUMN IF NOT EXISTS whatsapp_connected_at TIMESTAMPTZ,
ADD COLUMN IF NOT EXISTS integration_status VARCHAR(50) DEFAULT 'pending',
ADD COLUMN IF NOT EXISTS connected_at TIMESTAMPTZ;

-- –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
CREATE INDEX IF NOT EXISTS idx_companies_whatsapp_connected
ON companies(whatsapp_connected)
WHERE whatsapp_connected = true;

CREATE INDEX IF NOT EXISTS idx_companies_whatsapp_phone
ON companies(whatsapp_phone)
WHERE whatsapp_phone IS NOT NULL;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
SELECT column_name, data_type, column_default
FROM information_schema.columns
WHERE table_name = 'companies'
AND column_name IN ('whatsapp_connected', 'whatsapp_phone', 'whatsapp_connected_at', 'integration_status', 'connected_at')
ORDER BY ordinal_position;`));

  console.log(chalk.cyan.bold('\n‚ú® –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –≤ Supabase, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç:'));
  console.log(chalk.white('   node scripts/apply-whatsapp-migration.js\n'));
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ Supabase client
async function checkColumns() {
  const { supabase } = require('../src/database/supabase');

  console.log(chalk.cyan('\n–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è...\n'));

  try {
    // –ü—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å —Å –Ω–æ–≤—ã–º–∏ –∫–æ–ª–æ–Ω–∫–∞–º–∏
    const { data, error } = await supabase
      .from('companies')
      .select('id, title, whatsapp_connected, whatsapp_phone, integration_status')
      .limit(1);

    if (error) {
      if (error.message.includes('column') && error.message.includes('does not exist')) {
        console.log(chalk.red('‚ùå –ö–æ–ª–æ–Ω–∫–∏ WhatsApp –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'));
        console.log(chalk.yellow('   –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é\n'));
        return false;
      }
      throw error;
    }

    console.log(chalk.green('‚úÖ –ö–æ–ª–æ–Ω–∫–∏ WhatsApp —Å—É—â–µ—Å—Ç–≤—É—é—Ç!'));
    if (data && data[0]) {
      console.log(chalk.gray('   –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏:'));
      console.log(chalk.gray(`   - id: ${data[0].id}`));
      console.log(chalk.gray(`   - title: ${data[0].title}`));
      console.log(chalk.gray(`   - whatsapp_connected: ${data[0].whatsapp_connected}`));
      console.log(chalk.gray(`   - whatsapp_phone: ${data[0].whatsapp_phone || 'null'}`));
      console.log(chalk.gray(`   - integration_status: ${data[0].integration_status || 'null'}`));
    }
    return true;

  } catch (error) {
    console.log(chalk.red('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:'), error.message);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  const columnsExist = await checkColumns();

  if (!columnsExist) {
    // –ï—Å–ª–∏ –∫–æ–ª–æ–Ω–æ–∫ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    await applyMigration();
  } else {
    console.log(chalk.green.bold('\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.\n'));
  }
}

// –ó–∞–ø—É—Å–∫
main().catch(error => {
  console.error(chalk.red.bold('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:'), error);
  process.exit(1);
});