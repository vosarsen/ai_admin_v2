#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è total_spent —É –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
 * –ü—Ä–æ–±–ª–µ–º–∞: YClients API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç sold_amount, –∞ –Ω–µ spent
 * –†–µ—à–µ–Ω–∏–µ: –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å sold_amount
 */

require('dotenv').config();
const axios = require('axios');
const { supabase } = require('../src/database/supabase');

const CONFIG = {
  COMPANY_ID: 962302,
  BASE_URL: 'https://api.yclients.com/api/v1',
  BEARER_TOKEN: process.env.YCLIENTS_BEARER_TOKEN,
  USER_TOKEN: process.env.YCLIENTS_USER_TOKEN,
};

async function fetchAllClients() {
  console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –í–°–ï–• –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ YClients...');
  
  const headers = {
    'Authorization': `Bearer ${CONFIG.BEARER_TOKEN}, User ${CONFIG.USER_TOKEN}`,
    'Accept': 'application/vnd.api.v2+json',
    'Content-Type': 'application/json'
  };

  let allClients = [];
  let page = 1;
  let hasMore = true;

  while (hasMore) {
    try {
      console.log(`üìÑ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É ${page}...`);
      
      const response = await axios.post(
        `${CONFIG.BASE_URL}/company/${CONFIG.COMPANY_ID}/clients/search`,
        {
          page: page,
          page_size: 200,
          fields: [
            "id", "name", "phone", "email", "discount",
            "first_visit_date", "last_visit_date",
            "sold_amount", "spent", "visits_count"
          ],
          order_by: "name",
          order_by_direction: "ASC"
        },
        { headers }
      );

      const clients = response.data?.data || [];
      console.log(`   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${clients.length} –∫–ª–∏–µ–Ω—Ç–æ–≤`);
      
      // –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (page === 1 && clients.length > 0) {
        console.log('\nüìä –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞:');
        const sample = clients.find(c => c.sold_amount > 0) || clients[0];
        console.log(`   –ò–º—è: ${sample.name}`);
        console.log(`   –¢–µ–ª–µ—Ñ–æ–Ω: ${sample.phone}`);
        console.log(`   sold_amount: ${sample.sold_amount}`);
        console.log(`   spent: ${sample.spent}`);
        console.log(`   visits_count: ${sample.visits_count}`);
      }

      allClients = allClients.concat(clients);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –µ—â–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      const totalCount = response.data?.meta?.total_count || 0;
      hasMore = allClients.length < totalCount && clients.length === 200;
      page++;

      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è rate limits
      await new Promise(resolve => setTimeout(resolve, 250));

    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${page}:`, error.message);
      hasMore = false;
    }
  }

  console.log(`\n‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –≤—Å–µ–≥–æ: ${allClients.length} –∫–ª–∏–µ–Ω—Ç–æ–≤`);
  return allClients;
}

function normalizePhone(phone) {
  if (!phone) return null;
  return phone.toString().replace(/\D/g, '').replace(/^8/, '7');
}

function calculateLoyaltyLevel(visits, totalSpent) {
  if (visits >= 20 && totalSpent >= 50000) return 'VIP';
  if (visits >= 10 && totalSpent >= 20000) return 'Gold';
  if (visits >= 5 && totalSpent >= 8000) return 'Silver';
  if (visits >= 2) return 'Bronze';
  return 'New';
}

async function updateClientInSupabase(client) {
  // –í–ê–ñ–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º sold_amount –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö —Å—É–º–º–∞—Ö
  const totalSpent = client.sold_amount || client.spent || 0;
  const visits = client.visits_count || 0;
  
  const clientData = {
    yclients_id: client.id,
    company_id: CONFIG.COMPANY_ID,
    name: client.name || '–ë–µ–∑ –∏–º–µ–Ω–∏',
    phone: normalizePhone(client.phone),
    raw_phone: client.phone,
    email: client.email || null,
    discount: client.discount || 0,
    visit_count: visits,
    total_spent: totalSpent,  // –ö–õ–Æ–ß–ï–í–û–ï –ü–û–õ–ï!
    first_visit_date: client.first_visit_date || null,
    last_visit_date: client.last_visit_date || null,
    loyalty_level: calculateLoyaltyLevel(visits, totalSpent),
    average_bill: visits > 0 ? Math.round(totalSpent / visits) : 0,
    last_sync_at: new Date().toISOString()
  };

  const { error } = await supabase
    .from('clients')
    .upsert(clientData, { 
      onConflict: 'yclients_id,company_id',
      ignoreDuplicates: false  // –í–ê–ñ–ù–û: —Ñ–æ—Ä—Å–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    });

  if (error) {
    throw error;
  }

  return { totalSpent, visits };
}

async function main() {
  console.log('üöÄ –ó–ê–ü–£–°–ö –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø total_spent –î–õ–Ø –í–°–ï–• –ö–õ–ò–ï–ù–¢–û–í');
  console.log('=' .repeat(60));
  
  try {
    // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ YClients
    const clients = await fetchAllClients();
    
    // 2. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º
    const withSpent = clients.filter(c => (c.sold_amount || c.spent) > 0);
    console.log(`\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:`);
    console.log(`   –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: ${clients.length}`);
    console.log(`   –° —Å—É–º–º–∞–º–∏ > 0: ${withSpent.length}`);
    
    // –¢–æ–ø-5 –ø–æ —Å—É–º–º–∞–º
    const topSpenders = [...withSpent]
      .sort((a, b) => (b.sold_amount || 0) - (a.sold_amount || 0))
      .slice(0, 5);
    
    console.log(`\nüí∞ –¢–û–ü-5 –ø–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã–º —Å—É–º–º–∞–º:`);
    topSpenders.forEach((c, i) => {
      console.log(`   ${i+1}. ${c.name} (${c.phone}): ${c.sold_amount || c.spent} —Ä—É–±`);
    });

    // 3. –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ Supabase
    console.log(`\nüîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ Supabase...`);
    
    let processed = 0;
    let errors = 0;
    let totalUpdatedSpent = 0;
    let clientsWithSpent = 0;

    for (const client of clients) {
      try {
        const result = await updateClientInSupabase(client);
        processed++;
        
        if (result.totalSpent > 0) {
          totalUpdatedSpent += result.totalSpent;
          clientsWithSpent++;
        }

        // –ü—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 100 –∫–ª–∏–µ–Ω—Ç–æ–≤
        if (processed % 100 === 0) {
          console.log(`   üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${processed}/${clients.length}`);
        }

      } catch (error) {
        errors++;
        if (errors <= 5) {
          console.error(`   ‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${client.name}: ${error.message}`);
        }
      }
    }

    // 4. –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log(`\n‚úÖ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!`);
    console.log('=' .repeat(60));
    console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${processed} –∫–ª–∏–µ–Ω—Ç–æ–≤`);
    console.log(`   –û—à–∏–±–∫–∏: ${errors}`);
    console.log(`   –ö–ª–∏–µ–Ω—Ç–æ–≤ —Å —Å—É–º–º–∞–º–∏: ${clientsWithSpent}`);
    console.log(`   –û–±—â–∞—è —Å—É–º–º–∞: ${totalUpdatedSpent.toLocaleString('ru-RU')} —Ä—É–±`);

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –õ–µ–æ–Ω–∏–¥–∞
    console.log(`\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤:`);
    
    const { data: leonid } = await supabase
      .from('clients')
      .select('name, phone, visit_count, total_spent, loyalty_level')
      .eq('phone', '79035059524')
      .single();
    
    if (leonid) {
      console.log(`   –õ–µ–æ–Ω–∏–¥: ${leonid.total_spent.toLocaleString('ru-RU')} —Ä—É–± (${leonid.loyalty_level})`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ø-5 –≤ –±–∞–∑–µ
    const { data: topInDb } = await supabase
      .from('clients')
      .select('name, phone, total_spent')
      .order('total_spent', { ascending: false })
      .limit(5);

    console.log(`\nüíé –¢–û–ü-5 –≤ –±–∞–∑–µ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:`);
    topInDb.forEach((c, i) => {
      console.log(`   ${i+1}. ${c.name}: ${c.total_spent.toLocaleString('ru-RU')} —Ä—É–±`);
    });

  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
  main().catch(console.error);
}

module.exports = { fetchAllClients, updateClientInSupabase };