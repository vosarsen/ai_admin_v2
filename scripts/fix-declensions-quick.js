#!/usr/bin/env node

/**
 * –ë—ã—Å—Ç—Ä–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–π –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —É—Å–ª—É–≥
 */

require('dotenv').config();
const { supabase } = require('../src/database/supabase');
const logger = require('../src/utils/logger').child({ module: 'fix-declensions' });

// –ü—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–∫–ª–æ–Ω–µ–Ω–∏—è –¥–ª—è —Å–∞–º—ã—Ö —á–∞—Å—Ç—ã—Ö —É—Å–ª—É–≥
const predefinedDeclensions = {
  "–ú–£–ñ–°–ö–ê–Ø –°–¢–†–ò–ñ–ö–ê": {
    original: "–ú–£–ñ–°–ö–ê–Ø –°–¢–†–ò–ñ–ö–ê",
    nominative: "–º—É–∂—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞",
    genitive: "–º—É–∂—Å–∫–æ–π —Å—Ç—Ä–∏–∂–∫–∏",
    dative: "–º—É–∂—Å–∫–æ–π —Å—Ç—Ä–∏–∂–∫–µ",
    accusative: "–º—É–∂—Å–∫—É—é —Å—Ç—Ä–∏–∂–∫—É",
    instrumental: "–º—É–∂—Å–∫–æ–π —Å—Ç—Ä–∏–∂–∫–æ–π",
    prepositional: "–º—É–∂—Å–∫–æ–π —Å—Ç—Ä–∏–∂–∫–µ",
    prepositional_na: "–º—É–∂—Å–∫–æ–π —Å—Ç—Ä–∏–∂–∫–µ"
  },
  "–î–ï–¢–°–ö–ê–Ø –°–¢–†–ò–ñ–ö–ê": {
    original: "–î–ï–¢–°–ö–ê–Ø –°–¢–†–ò–ñ–ö–ê",
    nominative: "–¥–µ—Ç—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞",
    genitive: "–¥–µ—Ç—Å–∫–æ–π —Å—Ç—Ä–∏–∂–∫–∏",
    dative: "–¥–µ—Ç—Å–∫–æ–π —Å—Ç—Ä–∏–∂–∫–µ",
    accusative: "–¥–µ—Ç—Å–∫—É—é —Å—Ç—Ä–∏–∂–∫—É",
    instrumental: "–¥–µ—Ç—Å–∫–æ–π —Å—Ç—Ä–∏–∂–∫–æ–π",
    prepositional: "–¥–µ—Ç—Å–∫–æ–π —Å—Ç—Ä–∏–∂–∫–µ",
    prepositional_na: "–¥–µ—Ç—Å–∫–æ–π —Å—Ç—Ä–∏–∂–∫–µ"
  },
  "–°–¢–†–ò–ñ–ö–ê –ë–û–†–û–î–´ –ò –£–°–û–í (–î–û 6–ú–ú)": {
    original: "–°–¢–†–ò–ñ–ö–ê –ë–û–†–û–î–´ –ò –£–°–û–í (–î–û 6–ú–ú)",
    nominative: "—Å—Ç—Ä–∏–∂–∫–∞ –±–æ—Ä–æ–¥—ã –∏ —É—Å–æ–≤",
    genitive: "—Å—Ç—Ä–∏–∂–∫–∏ –±–æ—Ä–æ–¥—ã –∏ —É—Å–æ–≤",
    dative: "—Å—Ç—Ä–∏–∂–∫–µ –±–æ—Ä–æ–¥—ã –∏ —É—Å–æ–≤",
    accusative: "—Å—Ç—Ä–∏–∂–∫—É –±–æ—Ä–æ–¥—ã –∏ —É—Å–æ–≤",
    instrumental: "—Å—Ç—Ä–∏–∂–∫–æ–π –±–æ—Ä–æ–¥—ã –∏ —É—Å–æ–≤",
    prepositional: "—Å—Ç—Ä–∏–∂–∫–µ –±–æ—Ä–æ–¥—ã –∏ —É—Å–æ–≤",
    prepositional_na: "—Å—Ç—Ä–∏–∂–∫–µ –±–æ—Ä–æ–¥—ã –∏ —É—Å–æ–≤"
  },
  "–ú–û–î–ï–õ–ò–†–û–í–ê–ù–ò–ï –ë–û–†–û–î–´": {
    original: "–ú–û–î–ï–õ–ò–†–û–í–ê–ù–ò–ï –ë–û–†–û–î–´",
    nominative: "–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ä–æ–¥—ã",
    genitive: "–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ä–æ–¥—ã",
    dative: "–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—é –±–æ—Ä–æ–¥—ã",
    accusative: "–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ä–æ–¥—ã",
    instrumental: "–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º –±–æ—Ä–æ–¥—ã",
    prepositional: "–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–æ—Ä–æ–¥—ã",
    prepositional_na: "–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–æ—Ä–æ–¥—ã"
  },
  "–°–¢–†–ò–ñ–ö–ê + –ú–û–î–ï–õ–ò–†–û–í–ê–ù–ò–ï –ë–û–†–û–î–´": {
    original: "–°–¢–†–ò–ñ–ö–ê + –ú–û–î–ï–õ–ò–†–û–í–ê–ù–ò–ï –ë–û–†–û–î–´",
    nominative: "—Å—Ç—Ä–∏–∂–∫–∞ –∏ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ä–æ–¥—ã",
    genitive: "—Å—Ç—Ä–∏–∂–∫–∏ –∏ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ä–æ–¥—ã",
    dative: "—Å—Ç—Ä–∏–∂–∫–µ –∏ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—é –±–æ—Ä–æ–¥—ã",
    accusative: "—Å—Ç—Ä–∏–∂–∫—É –∏ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ä–æ–¥—ã",
    instrumental: "—Å—Ç—Ä–∏–∂–∫–æ–π –∏ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º –±–æ—Ä–æ–¥—ã",
    prepositional: "—Å—Ç—Ä–∏–∂–∫–µ –∏ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–æ—Ä–æ–¥—ã",
    prepositional_na: "—Å—Ç—Ä–∏–∂–∫–µ –∏ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–æ—Ä–æ–¥—ã"
  },
  "–°–¢–†–ò–ñ–ö–ê –ú–ê–®–ò–ù–ö–û–ô | 1 –ù–ê–°–ê–î–ö–ê": {
    original: "–°–¢–†–ò–ñ–ö–ê –ú–ê–®–ò–ù–ö–û–ô | 1 –ù–ê–°–ê–î–ö–ê",
    nominative: "—Å—Ç—Ä–∏–∂–∫–∞ –º–∞—à–∏–Ω–∫–æ–π",
    genitive: "—Å—Ç—Ä–∏–∂–∫–∏ –º–∞—à–∏–Ω–∫–æ–π",
    dative: "—Å—Ç—Ä–∏–∂–∫–µ –º–∞—à–∏–Ω–∫–æ–π",
    accusative: "—Å—Ç—Ä–∏–∂–∫—É –º–∞—à–∏–Ω–∫–æ–π",
    instrumental: "—Å—Ç—Ä–∏–∂–∫–æ–π –º–∞—à–∏–Ω–∫–æ–π",
    prepositional: "—Å—Ç—Ä–∏–∂–∫–µ –º–∞—à–∏–Ω–∫–æ–π",
    prepositional_na: "—Å—Ç—Ä–∏–∂–∫–µ –º–∞—à–∏–Ω–∫–æ–π"
  },
  "–°–¢–†–ò–ñ–ö–ê –ù–û–ñ–ù–ò–¶–ê–ú–ò": {
    original: "–°–¢–†–ò–ñ–ö–ê –ù–û–ñ–ù–ò–¶–ê–ú–ò",
    nominative: "—Å—Ç—Ä–∏–∂–∫–∞ –Ω–æ–∂–Ω–∏—Ü–∞–º–∏",
    genitive: "—Å—Ç—Ä–∏–∂–∫–∏ –Ω–æ–∂–Ω–∏—Ü–∞–º–∏",
    dative: "—Å—Ç—Ä–∏–∂–∫–µ –Ω–æ–∂–Ω–∏—Ü–∞–º–∏",
    accusative: "—Å—Ç—Ä–∏–∂–∫—É –Ω–æ–∂–Ω–∏—Ü–∞–º–∏",
    instrumental: "—Å—Ç—Ä–∏–∂–∫–æ–π –Ω–æ–∂–Ω–∏—Ü–∞–º–∏",
    prepositional: "—Å—Ç—Ä–∏–∂–∫–µ –Ω–æ–∂–Ω–∏—Ü–∞–º–∏",
    prepositional_na: "—Å—Ç—Ä–∏–∂–∫–µ –Ω–æ–∂–Ω–∏—Ü–∞–º–∏"
  },
  "–ë–†–ò–¢–¨–Å –ì–û–õ–û–í–´": {
    original: "–ë–†–ò–¢–¨–Å –ì–û–õ–û–í–´",
    nominative: "–±—Ä–∏—Ç—å—ë –≥–æ–ª–æ–≤—ã",
    genitive: "–±—Ä–∏—Ç—å—è –≥–æ–ª–æ–≤—ã",
    dative: "–±—Ä–∏—Ç—å—é –≥–æ–ª–æ–≤—ã",
    accusative: "–±—Ä–∏—Ç—å—ë –≥–æ–ª–æ–≤—ã",
    instrumental: "–±—Ä–∏—Ç—å—ë–º –≥–æ–ª–æ–≤—ã",
    prepositional: "–±—Ä–∏—Ç—å–µ –≥–æ–ª–æ–≤—ã",
    prepositional_na: "–±—Ä–∏—Ç—å–µ –≥–æ–ª–æ–≤—ã"
  },
  "–ö–£–õ–¨–¢–£–†–ù–û–ï –ë–†–ò–¢–¨–Å": {
    original: "–ö–£–õ–¨–¢–£–†–ù–û–ï –ë–†–ò–¢–¨–Å",
    nominative: "–∫—É–ª—å—Ç—É—Ä–Ω–æ–µ –±—Ä–∏—Ç—å—ë",
    genitive: "–∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –±—Ä–∏—Ç—å—è",
    dative: "–∫—É–ª—å—Ç—É—Ä–Ω–æ–º—É –±—Ä–∏—Ç—å—é",
    accusative: "–∫—É–ª—å—Ç—É—Ä–Ω–æ–µ –±—Ä–∏—Ç—å—ë",
    instrumental: "–∫—É–ª—å—Ç—É—Ä–Ω—ã–º –±—Ä–∏—Ç—å—ë–º",
    prepositional: "–∫—É–ª—å—Ç—É—Ä–Ω–æ–º –±—Ä–∏—Ç—å–µ",
    prepositional_na: "–∫—É–ª—å—Ç—É—Ä–Ω–æ–º –±—Ä–∏—Ç—å–µ"
  },
  "–í–û–°–ö": {
    original: "–í–û–°–ö",
    nominative: "–≤–æ—Å–∫",
    genitive: "–≤–æ—Å–∫–∞",
    dative: "–≤–æ—Å–∫—É",
    accusative: "–≤–æ—Å–∫",
    instrumental: "–≤–æ—Å–∫–æ–º",
    prepositional: "–≤–æ—Å–∫–µ",
    prepositional_na: "–≤–æ—Å–∫–µ"
  },
  "–í–û–°–ö –ö–û–ú–ü–õ–ï–ö–°": {
    original: "–í–û–°–ö –ö–û–ú–ü–õ–ï–ö–°",
    nominative: "–≤–æ—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å",
    genitive: "–≤–æ—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–∞",
    dative: "–≤–æ—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å—É",
    accusative: "–≤–æ—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å",
    instrumental: "–≤–æ—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–æ–º",
    prepositional: "–≤–æ—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–µ",
    prepositional_na: "–≤–æ—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–µ"
  },
  "–£–ö–õ–ê–î–ö–ê": {
    original: "–£–ö–õ–ê–î–ö–ê",
    nominative: "—É–∫–ª–∞–¥–∫–∞",
    genitive: "—É–∫–ª–∞–¥–∫–∏",
    dative: "—É–∫–ª–∞–¥–∫–µ",
    accusative: "—É–∫–ª–∞–¥–∫—É",
    instrumental: "—É–∫–ª–∞–¥–∫–æ–π",
    prepositional: "—É–∫–ª–∞–¥–∫–µ",
    prepositional_na: "—É–∫–ª–∞–¥–∫–µ"
  },
  "–û–ö–ê–ù–¢–û–í–ö–ê –ì–û–õ–û–í–´ | –ë–û–†–û–î–´": {
    original: "–û–ö–ê–ù–¢–û–í–ö–ê –ì–û–õ–û–í–´ | –ë–û–†–û–î–´",
    nominative: "–æ–∫–∞–Ω—Ç–æ–≤–∫–∞ –≥–æ–ª–æ–≤—ã –∏–ª–∏ –±–æ—Ä–æ–¥—ã",
    genitive: "–æ–∫–∞–Ω—Ç–æ–≤–∫–∏ –≥–æ–ª–æ–≤—ã –∏–ª–∏ –±–æ—Ä–æ–¥—ã",
    dative: "–æ–∫–∞–Ω—Ç–æ–≤–∫–µ –≥–æ–ª–æ–≤—ã –∏–ª–∏ –±–æ—Ä–æ–¥—ã",
    accusative: "–æ–∫–∞–Ω—Ç–æ–≤–∫—É –≥–æ–ª–æ–≤—ã –∏–ª–∏ –±–æ—Ä–æ–¥—ã",
    instrumental: "–æ–∫–∞–Ω—Ç–æ–≤–∫–æ–π –≥–æ–ª–æ–≤—ã –∏–ª–∏ –±–æ—Ä–æ–¥—ã",
    prepositional: "–æ–∫–∞–Ω—Ç–æ–≤–∫–µ –≥–æ–ª–æ–≤—ã –∏–ª–∏ –±–æ—Ä–æ–¥—ã",
    prepositional_na: "–æ–∫–∞–Ω—Ç–æ–≤–∫–µ –≥–æ–ª–æ–≤—ã –∏–ª–∏ –±–æ—Ä–æ–¥—ã"
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç—ã—Ö —Å–∫–ª–æ–Ω–µ–Ω–∏–π –ø–æ —à–∞–±–ª–æ–Ω—É
function generateSimpleDeclensions(title) {
  const lowerTitle = title.toLowerCase();
  
  // –î–ª—è —É—Å–ª—É–≥ —Å–æ —Å–ª–æ–≤–æ–º "—Å—Ç—Ä–∏–∂–∫–∞"
  if (lowerTitle.includes('—Å—Ç—Ä–∏–∂–∫–∞')) {
    const prefix = lowerTitle.replace(/—Å—Ç—Ä–∏–∂–∫–∞.*/, '').trim();
    return {
      original: title,
      nominative: lowerTitle,
      genitive: lowerTitle.replace(/—Å—Ç—Ä–∏–∂–∫–∞/, '—Å—Ç—Ä–∏–∂–∫–∏'),
      dative: lowerTitle.replace(/—Å—Ç—Ä–∏–∂–∫–∞/, '—Å—Ç—Ä–∏–∂–∫–µ'),
      accusative: lowerTitle.replace(/—Å—Ç—Ä–∏–∂–∫–∞/, '—Å—Ç—Ä–∏–∂–∫—É').replace(/–∞—è/, '—É—é').replace(/—è—è/, '—é—é'),
      instrumental: lowerTitle.replace(/—Å—Ç—Ä–∏–∂–∫–∞/, '—Å—Ç—Ä–∏–∂–∫–æ–π'),
      prepositional: lowerTitle.replace(/—Å—Ç—Ä–∏–∂–∫–∞/, '—Å—Ç—Ä–∏–∂–∫–µ'),
      prepositional_na: lowerTitle.replace(/—Å—Ç—Ä–∏–∂–∫–∞/, '—Å—Ç—Ä–∏–∂–∫–µ')
    };
  }
  
  // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å
  return {
    original: title,
    nominative: lowerTitle,
    genitive: lowerTitle,
    dative: lowerTitle,
    accusative: lowerTitle,
    instrumental: lowerTitle,
    prepositional: lowerTitle,
    prepositional_na: lowerTitle
  };
}

async function main() {
  try {
    logger.info('üöÄ Starting quick declensions fix...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Å–ª—É–≥–∏
    const { data: services, error } = await supabase
      .from('services')
      .select('id, yclients_id, title')
      .eq('company_id', 962302);
    
    if (error) {
      throw error;
    }
    
    if (!services || services.length === 0) {
      logger.info('No services found');
      return;
    }
    
    logger.info(`üìã Found ${services.length} services`);
    
    let updated = 0;
    let errors = 0;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫–ª–æ–Ω–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π —É—Å–ª—É–≥–∏
    for (const service of services) {
      if (!service.title) continue;
      
      try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–∫–ª–æ–Ω–µ–Ω–∏—è –∏–ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç—ã–µ
        const declensions = predefinedDeclensions[service.title] || generateSimpleDeclensions(service.title);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
        const { error: updateError } = await supabase
          .from('services')
          .update({ declensions })
          .eq('id', service.id);
        
        if (updateError) {
          logger.error(`Failed to update service ${service.id}:`, updateError);
          errors++;
        } else {
          updated++;
          logger.info(`‚úÖ Updated: "${service.title}"`);
          if (declensions.accusative !== service.title.toLowerCase()) {
            console.log(`  –í–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π: ${declensions.accusative}`);
            console.log(`  –ü—Ä–µ–¥–ª–æ–∂–Ω—ã–π —Å –ù–ê: ${declensions.prepositional_na}`);
          }
        }
        
      } catch (error) {
        logger.error(`Error processing service ${service.id}:`, error);
        errors++;
      }
    }
    
    logger.info(`‚úÖ Completed: ${updated} updated, ${errors} errors`);
    
  } catch (error) {
    logger.error('‚ùå Failed:', error);
    process.exit(1);
  }
}

main();