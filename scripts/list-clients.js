#!/usr/bin/env node

const axios = require('axios');
const config = require('../src/config');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏
 */

async function getClients(page = 1) {
  try {
    const response = await axios.get(
      `${config.yclients.apiUrl}/company/${config.yclients.companyId}/clients`,
      {
        headers: {
          'Authorization': `Bearer ${config.yclients.bearerToken}, User ${config.yclients.userToken}`,
          'Accept': 'application/vnd.yclients.v2+json',
          'Content-Type': 'application/json'
        },
        params: {
          page,
          count: 20
        }
      }
    );

    return response.data;
  } catch (error) {
    console.error('Error getting clients:', error.response?.data || error.message);
    return null;
  }
}

async function main() {
  console.log('üìã –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤...\n');
  
  const result = await getClients();
  
  if (!result || !result.success) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤');
    return;
  }
  
  console.log(`–ù–∞–π–¥–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: ${result.meta?.total_count || result.data.length}`);
  console.log('–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1:\n');
  
  result.data.forEach((client, index) => {
    console.log(`${index + 1}. ${client.name || '–ë–µ–∑ –∏–º–µ–Ω–∏'}`);
    console.log(`   üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${client.phone}`);
    console.log(`   üìß Email: ${client.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
    console.log(`   üéÇ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${client.birth_date || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`);
    console.log(`   üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${client.created_at || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`);
    console.log(`   üí≥ ID: ${client.id}`);
    console.log('---');
  });
  
  if (result.meta && result.meta.total_count > 20) {
    console.log(`\n‚ö†Ô∏è  –ü–æ–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 20 –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ ${result.meta.total_count}`);
  }
}

main().catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  process.exit(1);
});