#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
 */

require('dotenv').config();
const messageQueue = require('./src/queue/message-queue');
const logger = require('./src/utils/logger');

async function testReminder() {
  try {
    // –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å
    const testBooking = {
      record_id: 'TEST123',
      datetime: new Date(Date.now() + 25 * 60 * 60 * 1000).toISOString(), // –ó–∞–≤—Ç—Ä–∞ –≤ —ç—Ç–æ –∂–µ –≤—Ä–µ–º—è
      service_name: '–ú—É–∂—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞',
      staff_name: '–°–µ—Ä–≥–µ–π'
    };
    
    const testPhone = '79001234567@c.us';
    
    console.log('üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π...');
    console.log('–ó–∞–ø–∏—Å—å –Ω–∞:', new Date(testBooking.datetime).toLocaleString('ru-RU'));
    
    // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É (–¥–ª—è —Ç–µ—Å—Ç–∞)
    const testTime1 = new Date(Date.now() + 60 * 1000);
    await messageQueue.addReminder({
      type: 'day_before',
      booking: testBooking,
      phone: testPhone
    }, testTime1);
    console.log('‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ –¥–µ–Ω—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞:', testTime1.toLocaleString('ru-RU'));
    
    // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã (–¥–ª—è —Ç–µ—Å—Ç–∞)
    const testTime2 = new Date(Date.now() + 120 * 1000);
    await messageQueue.addReminder({
      type: 'hours_before',
      booking: testBooking,
      phone: testPhone,
      hours: 2
    }, testTime2);
    console.log('‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 2 —á–∞—Å–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞:', testTime2.toLocaleString('ru-RU'));
    
    console.log('\n‚è≥ –û–∂–∏–¥–∞–π—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —á–µ—Ä–µ–∑ 1 –∏ 2 –º–∏–Ω—É—Ç—ã...');
    console.log('üì± –ù–∞ –Ω–æ–º–µ—Ä:', testPhone.replace('@c.us', ''));
    
    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å—Ç–∞—Ç—É—Å –æ—á–µ—Ä–µ–¥–∏
    setTimeout(() => {
      console.log('\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã!');
      console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ reminder worker –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏.');
      process.exit(0);
    }, 3000);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testReminder();