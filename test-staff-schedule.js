const axios = require('axios');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const API_URL = 'http://46.149.70.219:3000/webhook/whatsapp/batched';
const SECRET_KEY = '0Jzt70K6QdCQv9s3xOBWRXN6lqCyNnI+X5r5K2Kq8qUoJJ8lHdHekE4L2z+v3bfE=';
const PHONE = '79001234567';

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HMAC –ø–æ–¥–ø–∏—Å–∏
function generateSignature(data) {
  const crypto = require('crypto');
  const payload = JSON.stringify(data);
  return crypto.createHmac('sha256', SECRET_KEY).update(payload).digest('hex');
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
async function sendMessage(text) {
  const data = {
    from: PHONE,
    body: text,
    timestamp: Date.now(),
    type: 'text'
  };

  const signature = generateSignature(data);

  try {
    const response = await axios.post(API_URL, data, {
      headers: {
        'Content-Type': 'application/json',
        'X-Hub-Signature-256': `sha256=${signature}`
      }
    });
    console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', text);
    console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.data);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

// –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
async function test() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CHECK_STAFF_SCHEDULE');
  console.log('=====================================\n');
  
  // –¢–µ—Å—Ç 1: –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞
  console.log('–¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞');
  await sendMessage('–ö–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –°–µ—Ä–≥–µ–π?');
  
  // –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ç–µ—Å—Ç–æ–º
  await new Promise(resolve => setTimeout(resolve, 3000));
  
  // –¢–µ—Å—Ç 2: –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ –º–∞—Å—Ç–µ—Ä–∞ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å
  console.log('\n–¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Å—Ç–µ—Ä–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É');
  await sendMessage('–†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –ë–∞—Ä–∏ –∑–∞–≤—Ç—Ä–∞?');
  
  // –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã
  await new Promise(resolve => setTimeout(resolve, 3000));
  
  // –¢–µ—Å—Ç 3: –û–±—â–∏–π –≤–æ–ø—Ä–æ—Å –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏
  console.log('\n–¢–µ—Å—Ç 3: –û–±—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è');
  await sendMessage('–ö—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–µ–≥–æ–¥–Ω—è?');
  
  console.log('\n‚úÖ –¢–µ—Å—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
test().catch(console.error);