// test-redis-batch.js
require('dotenv').config();
const batchService = require('./src/services/redis-batch-service');

async function test() {
  console.log('Testing Redis batch service...');
  console.log('REDIS_URL:', process.env.REDIS_URL);
  console.log('REDIS_PASSWORD:', process.env.REDIS_PASSWORD ? 'SET' : 'NOT SET');
  
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
    await batchService.initialize();
    console.log('‚úÖ Batch service initialized');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const testPhone = '79001234567';
    await batchService.addMessage(testPhone, 'Test message 1', 962302);
    console.log('‚úÖ Added message 1');
    
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    await batchService.addMessage(testPhone, 'Test message 2', 962302);
    console.log('‚úÖ Added message 2');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = await batchService.getStats();
    console.log('üìä Stats:', JSON.stringify(stats, null, 2));
    
    // –ñ–¥–µ–º timeout
    console.log('‚è≥ Waiting for batch timeout (10 seconds)...');
    await new Promise(resolve => setTimeout(resolve, 11000));
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –±–∞—Ç—á–∏
    console.log('üîÑ Processing batches...');
    const result = await batchService.processPendingBatches();
    console.log('‚úÖ Processing result:', result);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    const statsAfter = await batchService.getStats();
    console.log('üìä Stats after processing:', JSON.stringify(statsAfter, null, 2));
    
    await batchService.close();
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Test failed:', error);
    process.exit(1);
  }
}

test();