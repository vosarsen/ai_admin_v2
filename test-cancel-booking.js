const axios = require('axios');

const API_URL = 'http://46.149.70.219:3002';
const SECRET_KEY = '5jZ8kR3p9$vQ@mN7';

// –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã
const testPhones = {
  client1: '79001234567',  // –ö–ª–∏–µ–Ω—Ç —Å –∑–∞–ø–∏—Å—è–º–∏
  client2: '79001234568',  // –ö–ª–∏–µ–Ω—Ç –±–µ–∑ –∑–∞–ø–∏—Å–µ–π
};

const headers = {
  'Content-Type': 'application/json',
  'X-Secret-Key': SECRET_KEY
};

async function sendMessage(phone, message) {
  try {
    console.log(`\nüì± ${phone}: "${message}"`);
    
    const response = await axios.post(`${API_URL}/webhook`, {
      messages: [{
        phone: phone + '@c.us',
        body: message,
        fromMe: false,
        type: 'message'
      }]
    }, { headers });

    console.log('‚úÖ Sent successfully');
    
    // –ñ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ—Ç–≤–µ—Ç–∞
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    return response.data;
  } catch (error) {
    console.error('‚ùå Error:', error.response?.data || error.message);
  }
}

async function testCancelBookingFlow() {
  console.log('üß™ Testing Cancel Booking Flow');
  console.log('================================\n');

  // –¢–µ—Å—Ç 1: –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø–∏—Å—å
  console.log('1Ô∏è‚É£ –¢–ï–°–¢: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—Ç–º–µ–Ω—ã');
  console.log('-------------------------------------------');
  
  await sendMessage(testPhones.client1, '–•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É –∑–∞–≤—Ç—Ä–∞');
  await new Promise(resolve => setTimeout(resolve, 3000));
  
  // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –±–æ—Ç –ø–æ–∫–∞–∑–∞–ª —Å–ª–æ—Ç—ã –∏ –∫–ª–∏–µ–Ω—Ç –≤—ã–±—Ä–∞–ª –≤—Ä–µ–º—è
  await sendMessage(testPhones.client1, '–ó–∞–ø–∏—à–∏—Ç–µ –Ω–∞ 14:00');
  await new Promise(resolve => setTimeout(resolve, 5000));
  
  // –¢–µ—Å—Ç 2: –û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏ - –∫–ª–∏–µ–Ω—Ç —Å –∑–∞–ø–∏—Å—è–º–∏
  console.log('\n2Ô∏è‚É£ –¢–ï–°–¢: –û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏ - –∫–ª–∏–µ–Ω—Ç —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏');
  console.log('-------------------------------------------');
  
  await sendMessage(testPhones.client1, '–•–æ—á—É –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å');
  await new Promise(resolve => setTimeout(resolve, 5000));
  
  // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, –±–æ—Ç –ø–æ–∫–∞–∑–∞–ª —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π –∏ –∫–ª–∏–µ–Ω—Ç –≤—ã–±–∏—Ä–∞–µ—Ç
  await sendMessage(testPhones.client1, '1');
  await new Promise(resolve => setTimeout(resolve, 5000));

  // –¢–µ—Å—Ç 3: –û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏ - –∫–ª–∏–µ–Ω—Ç –±–µ–∑ –∑–∞–ø–∏—Å–µ–π
  console.log('\n3Ô∏è‚É£ –¢–ï–°–¢: –û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏ - –∫–ª–∏–µ–Ω—Ç –±–µ–∑ –∑–∞–ø–∏—Å–µ–π');
  console.log('-------------------------------------------');
  
  await sendMessage(testPhones.client2, '–û—Ç–º–µ–Ω–∏—Ç—å –≤–∏–∑–∏—Ç');
  await new Promise(resolve => setTimeout(resolve, 5000));
  
  // –¢–µ—Å—Ç 4: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ
  console.log('\n4Ô∏è‚É£ –¢–ï–°–¢: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –æ—Ç–º–µ–Ω—ã');
  console.log('-------------------------------------------');
  
  await sendMessage(testPhones.client1, '–û—Ç–º–µ–Ω–∏—Ç–µ –º–æ—é –∑–∞–ø–∏—Å—å');
  await new Promise(resolve => setTimeout(resolve, 5000));
  
  // –í–≤–æ–¥–∏–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä
  await sendMessage(testPhones.client1, '–ø—Ä–∏–≤–µ—Ç');
  await new Promise(resolve => setTimeout(resolve, 3000));
  
  // –ë–æ—Ç –¥–æ–ª–∂–µ–Ω —Å–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  
  console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
  console.log('\nüìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –±–æ—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:');
  console.log('ssh root@46.149.70.219 "pm2 logs ai-admin-worker-v2 --lines 100 | grep -E \\"CANCEL|–æ—Ç–º–µ–Ω|–∑–∞–ø–∏—Å—å\\""');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testCancelBookingFlow().catch(console.error);