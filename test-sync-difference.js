require('dotenv').config();
const { getSyncManager } = require('./src/sync/sync-manager');
const { supabase } = require('./src/database/supabase');

async function testDifference() {
  console.log('üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–ó–ù–ò–¶–´ –í –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò');
  console.log('='.repeat(50));
  
  // –ü—Ä–æ–≤–µ—Ä–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –î–û —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  const { count: beforeCount } = await supabase
    .from('clients')
    .select('*', { count: 'exact', head: true })
    .gt('total_spent', 0);
  
  console.log(`\nüìä –î–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${beforeCount} –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å total_spent > 0`);
  
  const syncManager = getSyncManager();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  if (!syncManager.isInitialized) {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è sync manager...');
    // –ù–ï –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º, —á—Ç–æ–±—ã –Ω–µ –∑–∞–ø—É—Å–∫–∞—Ç—å cron –∑–∞–¥–∞—á–∏
    // await syncManager.initialize();
  }
  
  console.log('\n1. –í—ã–∑–æ–≤ –∫–∞–∫ –≤ sync-manager (–±–µ–∑ –æ–ø—Ü–∏–π):');
  console.log('   await syncManager.syncClients()');
  const result1 = await syncManager.syncClients();
  console.log('   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ:', result1.processed, '–û—à–∏–±–æ–∫:', result1.errors);
  
  // –ü—Ä–æ–≤–µ—Ä–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  const { count: afterCount1 } = await supabase
    .from('clients')
    .select('*', { count: 'exact', head: true })
    .gt('total_spent', 0);
  console.log(`   –ü–æ—Å–ª–µ: ${afterCount1} –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å total_spent > 0`);
  
  // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
  await new Promise(resolve => setTimeout(resolve, 2000));
  
  console.log('\n2. –í—ã–∑–æ–≤ –∫–∞–∫ –≤ manual-sync (—Å –æ–ø—Ü–∏—è–º–∏):');
  console.log('   await syncManager.syncClients({ syncVisitHistory: false })');
  const result2 = await syncManager.syncClients({ 
    syncVisitHistory: false // –Ø–≤–Ω–æ false –¥–ª—è —Ç–µ—Å—Ç–∞
  });
  console.log('   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ:', result2.processed, '–û—à–∏–±–æ–∫:', result2.errors);
  
  // –ü—Ä–æ–≤–µ—Ä–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  const { count: afterCount2 } = await supabase
    .from('clients')
    .select('*', { count: 'exact', head: true })
    .gt('total_spent', 0);
  console.log(`   –ü–æ—Å–ª–µ: ${afterCount2} –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å total_spent > 0`);
  
  console.log('\nüìà –ò–¢–û–ì–ò:');
  console.log('   –ë—ã–ª–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –ø–æ–∫—É–ø–∫–∞–º–∏:', beforeCount);
  console.log('   –ü–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ –±–µ–∑ –æ–ø—Ü–∏–π:', afterCount1);
  console.log('   –ü–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ —Å –æ–ø—Ü–∏—è–º–∏:', afterCount2);
  
  // –ù–ï –≤—ã–∑—ã–≤–∞–µ–º shutdown —á—Ç–æ–±—ã –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å cron –∑–∞–¥–∞—á–∏ –µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏
  process.exit(0);
}

testDifference().catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  process.exit(1);
});