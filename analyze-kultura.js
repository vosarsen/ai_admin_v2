const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_KEY
);

async function analyzeKultura() {
  console.log('=== –ê–ù–ê–õ–ò–ó –ë–ê–†–ë–ï–†–®–û–ü–ê KULTURA ===\n');

  // 1. –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤
  const { data: staff, error: staffError } = await supabase
    .from('staff')
    .select('*')
    .eq('company_id', 962302);

  if (staffError) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–æ–≤:', staffError);
  } else {
    console.log('üìä –ú–ê–°–¢–ï–†–ê:');
    const activeStaff = staff.filter(m => !m.is_fired && !m.hidden);
    console.log(`–í—Å–µ–≥–æ –≤ –±–∞–∑–µ: ${staff.length}, –∞–∫—Ç–∏–≤–Ω—ã—Ö: ${activeStaff.length}\n`);
    activeStaff.forEach(master => {
      console.log(`- ${master.name} (ID: ${master.id})`);
      console.log(`  –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: ${master.specialization || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
      console.log(`  –†–µ–π—Ç–∏–Ω–≥: ${master.rating || 0} (${master.comments_count || 0} –æ—Ç–∑—ã–≤–æ–≤)`);
    });
  }

  // 2. –ê–Ω–∞–ª–∏–∑ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –±–∞–∑—ã
  const { data: clients, error: clientsError } = await supabase
    .from('clients')
    .select('*')
    .eq('company_id', 962302);

  if (clientsError) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤:', clientsError);
  } else {
    console.log('\nüìä –ö–õ–ò–ï–ù–¢–°–ö–ê–Ø –ë–ê–ó–ê:');
    console.log(`–í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: ${clients.length}`);

    const activeClients = clients.filter(c => c.visits_count > 0);
    const regularClients = clients.filter(c => c.visits_count >= 3);
    const vipClients = clients.filter(c => c.visits_count >= 10);
    const sleepingClients = clients.filter(c => {
      if (!c.last_change_date || c.visits_count === 0) return false;
      const lastVisit = new Date(c.last_change_date);
      const monthsAgo = new Date();
      monthsAgo.setMonth(monthsAgo.getMonth() - 2);
      return lastVisit < monthsAgo;
    });

    console.log(`–ê–∫—Ç–∏–≤–Ω—ã—Ö (—Ö–æ—Ç—è –±—ã 1 –≤–∏–∑–∏—Ç): ${activeClients.length}`);
    console.log(`–ü–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö (3+ –≤–∏–∑–∏—Ç–∞): ${regularClients.length}`);
    console.log(`VIP (10+ –≤–∏–∑–∏—Ç–æ–≤): ${vipClients.length}`);
    console.log(`–°–ø—è—â–∏—Ö (–Ω–µ –±—ã–ª–æ 2+ –º–µ—Å—è—Ü–∞): ${sleepingClients.length}`);

    // –°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
    const avgVisits = activeClients.reduce((acc, c) => acc + c.visits_count, 0) / activeClients.length;
    const avgSpent = activeClients.reduce((acc, c) => acc + (c.spent || 0), 0) / activeClients.length;

    console.log(`\n–°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤:`);
    console.log(`- –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª-–≤–æ –≤–∏–∑–∏—Ç–æ–≤: ${avgVisits.toFixed(1)}`);
    console.log(`- –°—Ä–µ–¥–Ω—è—è —Å—É–º–º–∞ —Ç—Ä–∞—Ç: ${Math.round(avgSpent)} —Ä—É–±`);

    // –¢–æ–ø –∫–ª–∏–µ–Ω—Ç—ã
    const topClients = clients
      .filter(c => c.visits_count > 0)
      .sort((a, b) => b.visits_count - a.visits_count)
      .slice(0, 10);

    console.log('\nüèÜ –¢–û–ü-10 –ö–õ–ò–ï–ù–¢–û–í:');
    topClients.forEach((client, i) => {
      console.log(`${i+1}. ${client.name || '–ë–µ–∑ –∏–º–µ–Ω–∏'} - ${client.visits_count} –≤–∏–∑–∏—Ç–æ–≤, –ø–æ—Ç—Ä–∞—Ç–∏–ª ${client.spent || 0} —Ä—É–±`);
    });
  }

  // 3. –ê–Ω–∞–ª–∏–∑ —É—Å–ª—É–≥
  const { data: services, error: servicesError } = await supabase
    .from('services')
    .select('*')
    .eq('company_id', 962302)
    .eq('is_active', true);

  if (servicesError) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É—Å–ª—É–≥:', servicesError);
  } else {
    console.log('\nüìä –£–°–õ–£–ì–ò:');
    console.log(`–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Å–ª—É–≥: ${services.length}`);

    // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const categories = {};
    services.forEach(service => {
      const cat = service.category_title || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏';
      if (!categories[cat]) categories[cat] = [];
      categories[cat].push(service);
    });

    console.log('\n–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:');
    Object.entries(categories).forEach(([cat, servs]) => {
      const avgPrice = servs.reduce((acc, s) => acc + s.price_min, 0) / servs.length;
      console.log(`- ${cat}: ${servs.length} —É—Å–ª—É–≥, —Å—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ ${Math.round(avgPrice)} —Ä—É–±`);
    });

    // –¢–æ–ø —É—Å–ª—É–≥–∏ –ø–æ —Ü–µ–Ω–µ
    const topServices = services
      .sort((a, b) => b.price_min - a.price_min)
      .slice(0, 5);

    console.log('\nüí∞ –¢–û–ü-5 –î–û–†–û–ì–ò–• –£–°–õ–£–ì:');
    topServices.forEach((service, i) => {
      console.log(`${i+1}. ${service.title} - ${service.price_min} —Ä—É–±`);
    });

    // –°—Ä–µ–¥–Ω–∏–π —á–µ–∫
    const avgPrice = services.reduce((acc, s) => acc + s.price_min, 0) / services.length;
    console.log(`\nüíµ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ —É—Å–ª—É–≥–∏: ${Math.round(avgPrice)} —Ä—É–±`);
  }

  // 4. –ê–Ω–∞–ª–∏–∑ –∑–∞–ø–∏—Å–µ–π (–µ—Å–ª–∏ –µ—Å—Ç—å)
  const { data: bookings, error: bookingsError } = await supabase
    .from('bookings')
    .select('*')
    .eq('company_id', 962302)
    .gte('datetime', new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString());

  if (!bookingsError && bookings && bookings.length > 0) {
    console.log('\nüìä –ó–ê–ü–ò–°–ò –ó–ê –ü–û–°–õ–ï–î–ù–ò–ô –ú–ï–°–Ø–¶:');
    console.log(`–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${bookings.length}`);

    const confirmedBookings = bookings.filter(b => b.attendance === 1);
    const cancelledBookings = bookings.filter(b => b.attendance === -1);

    console.log(`–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö: ${confirmedBookings.length}`);
    console.log(`–û—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö: ${cancelledBookings.length}`);
  }

  console.log('\n=== –ö–û–ù–ï–¶ –ê–ù–ê–õ–ò–ó–ê ===');
}

analyzeKultura().catch(console.error);