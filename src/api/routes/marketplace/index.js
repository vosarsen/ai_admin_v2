// src/api/routes/marketplace/index.js
// –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–º YClients

const express = require('express');
const router = express.Router();
const jwt = require('jsonwebtoken');
const { v4: uuidv4 } = require('uuid');
const MarketplaceService = require('../../../services/marketplace/marketplace-service');
const logger = require('../../../utils/logger');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
const marketplaceService = new MarketplaceService();

/**
 * GET /marketplace/register
 * –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –∏–∑ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ YClients
 * YClients —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç —Å—é–¥–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º salon_id
 */
router.get('/register', async (req, res) => {
  const { salon_id } = req.query;
  
  logger.info(`üìç –ù–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–∑ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ YClients`, { salon_id });
  
  if (!salon_id) {
    logger.error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç salon_id –≤ –∑–∞–ø—Ä–æ—Å–µ');
    return res.status(400).render('error', {
      message: '–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–∞–ª–æ–Ω–∞'
    });
  }
  
  try {
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –∫–æ–º–ø–∞–Ω–∏—é
    const company = await marketplaceService.createOrGetCompany(salon_id);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è WhatsApp –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    const whatsappToken = jwt.sign(
      { 
        company_id: company.id, 
        salon_id,
        type: 'whatsapp_auth'
      },
      process.env.JWT_SECRET || 'default-secret-key',
      { expiresIn: '24h' }
    );
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ –∫–µ—à–µ
    await marketplaceService.saveToken(whatsappToken, company.id);
    
    logger.info(`‚úÖ –ö–æ–º–ø–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞/–Ω–∞–π–¥–µ–Ω–∞`, {
      company_id: company.id,
      name: company.name
    });
    
    // –†–µ–Ω–¥–µ—Ä–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å QR-–∫–æ–¥–æ–º
    res.render('marketplace/connect', {
      company,
      salon_id,
      whatsapp_token: whatsappToken,
      application_id: process.env.YCLIENTS_APPLICATION_ID || 'test-app-id',
      ws_url: process.env.WS_URL || 'ws://localhost:3000'
    });
    
  } catch (error) {
    logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–∑ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞:', error);
    res.status(500).render('error', {
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
    });
  }
});

/**
 * GET /marketplace/qr/:token
 * API endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è QR-–∫–æ–¥–∞
 */
router.get('/qr/:token', async (req, res) => {
  const { token } = req.params;
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    const decoded = jwt.verify(token, process.env.JWT_SECRET || 'default-secret-key');
    const companyId = decoded.company_id;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –µ—â–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –≤ –∫–µ—à–µ
    const isValid = await marketplaceService.validateToken(token, companyId);
    if (!isValid) {
      return res.status(401).json({ error: '–¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –∏—Å—Ç–µ–∫' });
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥ —á–µ—Ä–µ–∑ Baileys
    const qrData = await marketplaceService.generateQR(companyId);
    
    res.json({
      success: true,
      qr: qrData,
      expires_in: 20,
      company_id: companyId
    });
    
  } catch (error) {
    logger.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞:', error);
    
    if (error.name === 'JsonWebTokenError') {
      return res.status(401).json({ error: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω' });
    }
    
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞' });
  }
});

/**
 * POST /marketplace/callback
 * Callback –¥–ª—è YClients –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
 */
router.post('/callback', async (req, res) => {
  const { company_id, api_key, webhook_url } = req.body;
  
  try {
    logger.info('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ callback –≤ YClients', { company_id });
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
    const company = await marketplaceService.getCompany(company_id);
    if (!company) {
      return res.status(404).json({ error: '–ö–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è YClients
    const callbackData = {
      salon_id: company.yclients_salon_id,
      application_id: process.env.YCLIENTS_APPLICATION_ID,
      api_key: api_key || company.api_key,
      webhook_urls: [webhook_url || `${process.env.API_URL}/webhook/yclients/${company.id}`],
      channels: ['whatsapp']
    };
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ YClients
    const result = await marketplaceService.sendCallbackToYClients(callbackData);
    
    if (result.success) {
      logger.info('‚úÖ Callback —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ YClients');
      res.json({ success: true, message: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞' });
    } else {
      throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ callback –≤ YClients');
    }
    
  } catch (error) {
    logger.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ callback:', error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏' });
  }
});

/**
 * POST /marketplace/webhook
 * Webhook endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –æ—Ç YClients
 */
router.post('/webhook/:company_id', async (req, res) => {
  const { company_id } = req.params;
  const eventData = req.body;
  
  try {
    logger.info('üì® –ü–æ–ª—É—á–µ–Ω webhook –æ—Ç YClients', {
      company_id,
      event_type: eventData.type
    });
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ
    await marketplaceService.handleWebhook(company_id, eventData);
    
    res.json({ success: true });
    
  } catch (error) {
    logger.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook:', error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è' });
  }
});

module.exports = router;