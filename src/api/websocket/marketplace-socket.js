// src/api/websocket/marketplace-socket.js
// WebSocket –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞

const logger = require('../../utils/logger');
const jwt = require('jsonwebtoken');
const BaileysManager = require('../../integrations/whatsapp/baileys-manager');

class MarketplaceSocket {
  constructor(io) {
    this.io = io;
    this.baileysManager = new BaileysManager();
    this.connections = new Map(); // companyId -> socket

    // –°–æ–∑–¥–∞–µ–º namespace –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
    this.namespace = io.of('/marketplace');
    this.setupHandlers();
  }

  setupHandlers() {
    this.namespace.on('connection', (socket) => {
      logger.info('üîå –ù–æ–≤–æ–µ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞', {
        socketId: socket.id,
        query: socket.handshake.query
      });

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
      const { token, companyId } = socket.handshake.query;

      if (!token || !companyId) {
        logger.error('WebSocket: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω –∏–ª–∏ companyId');
        socket.emit('error', { message: '–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è' });
        socket.disconnect();
        return;
      }

      // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
      try {
        const decoded = jwt.verify(token, process.env.JWT_SECRET || 'default-secret-key');

        if (decoded.company_id !== parseInt(companyId)) {
          throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏');
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        socket.companyId = companyId;
        this.connections.set(companyId, socket);

        // –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ–º –∫ –∫–æ–º–Ω–∞—Ç–µ –∫–æ–º–ø–∞–Ω–∏–∏
        socket.join(`company-${companyId}`);

        logger.info('‚úÖ WebSocket –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω', {
          companyId,
          socketId: socket.id
        });

        // –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è WhatsApp
        this.startWhatsAppConnection(socket, companyId);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
        socket.on('disconnect', () => {
          logger.info('WebSocket –æ—Ç–∫–ª—é—á–µ–Ω', {
            companyId,
            socketId: socket.id
          });
          this.connections.delete(companyId);
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–≤–æ–≥–æ QR-–∫–æ–¥–∞
        socket.on('request-qr', () => {
          logger.info('–ó–∞–ø—Ä–æ—Å –Ω–æ–≤–æ–≥–æ QR-–∫–æ–¥–∞', { companyId });
          this.sendQRCode(socket, companyId);
        });

      } catch (error) {
        logger.error('–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞:', error);
        socket.emit('error', { message: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω' });
        socket.disconnect();
      }
    });
  }

  async startWhatsAppConnection(socket, companyId) {
    try {
      logger.info('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ WhatsApp', { companyId });

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é Baileys
      const session = await this.baileysManager.createSession(companyId);

      // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –æ—Ç Baileys
      session.on('qr', (qr) => {
        logger.info('üì± –ü–æ–ª—É—á–µ–Ω QR-–∫–æ–¥', { companyId });
        socket.emit('qr-update', {
          qr,
          expiresIn: 20
        });
      });

      session.on('connected', async (data) => {
        logger.info('‚úÖ WhatsApp –ø–æ–¥–∫–ª—é—á–µ–Ω!', {
          companyId,
          phone: data.phone
        });

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        socket.emit('whatsapp-connected', {
          success: true,
          phone: data.phone,
          companyId,
          message: 'WhatsApp —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!'
        });

        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
        this.startOnboarding(companyId, data.phone);
      });

      session.on('error', (error) => {
        logger.error('–û—à–∏–±–∫–∞ Baileys:', error);
        socket.emit('error', {
          message: error.message || '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è WhatsApp'
        });
      });

      // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
      await session.initialize();

    } catch (error) {
      logger.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WhatsApp:', error);
      socket.emit('error', {
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ WhatsApp'
      });
    }
  }

  async sendQRCode(socket, companyId) {
    try {
      const session = await this.baileysManager.getSession(companyId);

      if (!session) {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
        await this.startWhatsAppConnection(socket, companyId);
      } else {
        // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–π QR
        await session.requestNewQR();
      }
    } catch (error) {
      logger.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ QR-–∫–æ–¥–∞:', error);
      socket.emit('error', {
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å QR-–∫–æ–¥'
      });
    }
  }

  async startOnboarding(companyId, whatsappPhone) {
    try {
      logger.info('üéØ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–Ω–±–æ—Ä–¥–∏–Ω–≥', {
        companyId,
        whatsappPhone
      });

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î
      const { createClient } = require('../../database/supabase');
      const supabase = createClient();

      await supabase
        .from('companies')
        .update({
          whatsapp_connected: true,
          whatsapp_phone: whatsappPhone,
          integration_status: 'active',
          connected_at: new Date().toISOString()
        })
        .eq('id', companyId);

      // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –∏–∑ YClients
      const SyncManager = require('../../sync/sync-manager');
      const syncManager = SyncManager.getSyncManager();

      await syncManager.syncCompanyData(companyId);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      setTimeout(async () => {
        try {
          const session = await this.baileysManager.getSession(companyId);
          if (session) {
            await session.sendMessage(whatsappPhone, {
              text: `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! AI Admin —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!\n\n` +
                    `–Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ–≥–∞—Ç—å –≤–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º:\n` +
                    `‚úÖ –ó–∞–ø–∏—Å—ã–≤–∞—Ç—å –Ω–∞ —É—Å–ª—É–≥–∏\n` +
                    `‚úÖ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n` +
                    `‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –≤–∏–∑–∏—Ç–∞—Ö\n\n` +
                    `–î–ª—è —Ç–µ—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n` +
                    `"–•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É"\n\n` +
                    `üì± –í–∞—à –Ω–æ–º–µ—Ä –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤: ${whatsappPhone}\n` +
                    `üí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: https://ai-admin.app/guide`
            });
          }
        } catch (error) {
          logger.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        }
      }, 3000);

    } catch (error) {
      logger.error('–û—à–∏–±–∫–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞:', error);
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
  sendToCompany(companyId, event, data) {
    const socket = this.connections.get(companyId);
    if (socket) {
      socket.emit(event, data);
    } else {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –≤ –∫–æ–º–Ω–∞—Ç–µ (–Ω–∞ —Å–ª—É—á–∞–π –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π)
      this.namespace.to(`company-${companyId}`).emit(event, data);
    }
  }
}

module.exports = MarketplaceSocket;