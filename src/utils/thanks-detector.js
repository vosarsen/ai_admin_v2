// src/utils/thanks-detector.js
const logger = require('./logger');

/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
 */
class ThanksDetector {
  constructor() {
    // –ü–∞—Ç—Ç–µ—Ä–Ω—ã –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
    this.thanksPatterns = [
      // –ü—Ä—è–º—ã–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
      /\b(—Å–ø–∞—Å–∏–±–æ|—Å–ø–∞—Å–∏–±|—Å–ø—Å|–±–ª–∞–≥–æ–¥–∞—Ä—é|–±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω|–±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞)\b/i,
      // –° –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è–º–∏
      /\b(–±–æ–ª—å—à–æ–µ\s+—Å–ø–∞—Å–∏–±–æ|–æ–≥—Ä–æ–º–Ω–æ–µ\s+—Å–ø–∞—Å–∏–±–æ|—Å–ø–∞—Å–∏–±–æ\s+–±–æ–ª—å—à–æ–µ|—Å–ø–∞—Å–∏–±–æ\s+–æ–≥—Ä–æ–º–Ω–æ–µ)\b/i,
      // –í–∞—Ä–∏–∞—Ü–∏–∏
      /\b(–±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤—É—é|–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å|–ø—Ä–∏–∑–Ω–∞—Ç–µ–ª–µ–Ω|–ø—Ä–∏–∑–Ω–∞—Ç–µ–ª—å–Ω–∞)\b/i,
      // –°–æ–∫—Ä–∞—â–µ–Ω–∏—è –∏ —Å–ª–µ–Ω–≥
      /\b(–ø–∞—Å–∏–±|–ø–∞—Å–∏–±–æ|–ø–∞—Å–∏–±–∫–∏|—Å–ø–∞—Å–∏–±–∫–∏|—Å–µ–Ω–∫—Å|—Å–µ–Ω—å–∫—Å|—Å—ç–Ω–∫—Å)\b/i,
      // –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
      /\b(thanks|thank\s+you|thx|thnx|ty)\b/i,
      // –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
      /\b(—Å–ø–∞—Å–∏–±–æ.*[!‚ù§Ô∏èüôèüíïüòä]|[‚ù§Ô∏èüôèüíï]\s*—Å–ø–∞—Å–∏–±–æ)\b/i,
      // "–≠—Ç–æ –≤—Å—ë" –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –ø–æ—Å–ª–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
      /\b(—ç—Ç–æ\s+–≤—Å—ë|–≤—Å—ë\s+—Å–ø–∞—Å–∏–±–æ|–ø–æ–∫–∞\s+—Å–ø–∞—Å–∏–±–æ)\b/i
    ];

    // –ü–∞—Ç—Ç–µ—Ä–Ω—ã —Ñ—Ä–∞–∑ –ø–æ—Å–ª–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –ù–ï —Ç—Ä–µ–±—É—é—Ç –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
    this.closingPatterns = [
      /\b(—ç—Ç–æ\s+–≤—Å—ë|–≤—Å—ë|–ø–æ–∫–∞|–¥–æ\s+—Å–≤–∏–¥–∞–Ω–∏—è|–±–æ–ª—å—à–µ\s+–Ω–∏—á–µ–≥–æ|–±–æ–ª—å—à–µ\s+–Ω–µ\s+–Ω–∞–¥–æ)\b/i,
      /\b(–±–æ–ª—å—à–µ\s+–Ω–∏—á–µ–º|–≤—Å—ë\s+—Ö–æ—Ä–æ—à–æ|–≤—Å—ë\s+–æ—Ç–ª–∏—á–Ω–æ|–≤—Å—ë\s+–ø–æ–Ω—è—Ç–Ω–æ)\b/i,
      /\b(–Ω–µ\s+–Ω—É–∂–Ω–æ|–Ω–µ\s+–Ω–∞–¥–æ|–Ω–∏—á–µ–≥–æ\s+–Ω–µ\s+–Ω–∞–¥–æ|–Ω–∏—á–µ–º\s+–Ω–µ\s+–ø–æ–º–æ—á—å)\b/i,
      /\b(–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ|—Ö–≤–∞—Ç–∏—Ç|–≤—Å—ë\s+–æ–∫|–≤—Å—ë\s+–æ–∫–µ–π)\b/i
    ];
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é
   * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
   * @returns {boolean}
   */
  isThanks(message) {
    if (!message || typeof message !== 'string') {
      return false;
    }

    const normalizedMessage = message.toLowerCase().trim();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω
    for (const pattern of this.thanksPatterns) {
      if (pattern.test(normalizedMessage)) {
        logger.debug(`Thanks detected in message: "${message}" (pattern: ${pattern})`);
        return true;
      }
    }

    return false;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
   * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
   * @returns {boolean}
   */
  isClosingMessage(message) {
    if (!message || typeof message !== 'string') {
      return false;
    }

    const normalizedMessage = message.toLowerCase().trim();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    for (const pattern of this.closingPatterns) {
      if (pattern.test(normalizedMessage)) {
        logger.debug(`Closing phrase detected in message: "${message}" (pattern: ${pattern})`);
        return true;
      }
    }

    return false;
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
   * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
   * @returns {Object} - { shouldReact: boolean, shouldAskMore: boolean }
   */
  analyzeMessage(message) {
    const isThanks = this.isThanks(message);
    const isClosing = this.isClosingMessage(message);

    return {
      shouldReact: isThanks,           // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é ‚ù§Ô∏è
      shouldAskMore: false,             // –ù–ï —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å "–ß–µ–º –µ—â–µ –º–æ–≥—É –ø–æ–º–æ—á—å?"
      isConversationEnd: isThanks || isClosing  // –ü—Ä–∏–∑–Ω–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
    };
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∏–Ω–≥–ª—Ç–æ–Ω
module.exports = new ThanksDetector();