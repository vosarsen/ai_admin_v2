// src/services/whatsapp/ai-integration.js
const aiAdmin = require('../ai-admin');
const logger = require('../../utils/logger');
const { getCompanyId } = require('../../utils/phone-utils');

/**
 * –ü—Ä–æ—Å—Ç–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è AI –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å WhatsApp
 */
class WhatsAppAIIntegration {
  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è WhatsApp
   */
  async handleMessage(message) {
    const { from, body, timestamp } = message;
    
    logger.info(`üì® WhatsApp —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${from}: "${body}"`);

    try {
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–ø–∞–Ω–∏—é –ø–æ –Ω–æ–º–µ—Ä—É (–µ—Å–ª–∏ –º–Ω–æ–≥–æ–∫–æ–º–ø–∞–Ω–∏–π–Ω—ã–π —Ä–µ–∂–∏–º)
      const companyId = await getCompanyId(from) || process.env.YCLIENTS_COMPANY_ID;

      // –ü–µ—Ä–µ–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ AI –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
      const result = await aiAdmin.processMessage(body, from, companyId);

      if (result.success) {
        logger.info('‚úÖ AI —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ');
        return {
          success: true,
          response: result.response,
          booking: result.booking || null
        };
      } else {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ AI:', result.error);
        return {
          success: false,
          response: result.response || '–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
        };
      }

    } catch (error) {
      logger.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ AI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:', error);
      return {
        success: false,
        response: '–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º –Ω–∞–ø—Ä—è–º—É—é.'
      };
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω—É–∂–Ω–æ –ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ AI
   */
  shouldProcessWithAI(message) {
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (message.isStatus || message.isMedia || message.isNotification) {
      return false;
    }

    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    if (message.body && message.body.startsWith('/')) {
      return false;
    }

    return true;
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è WhatsApp
   */
  formatResponse(response) {
    // WhatsApp –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è
    const maxLength = 4096;
    
    if (response.length <= maxLength) {
      return [response];
    }

    // –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    const messages = [];
    let currentMessage = '';
    
    const lines = response.split('\n');
    for (const line of lines) {
      if (currentMessage.length + line.length + 1 > maxLength) {
        messages.push(currentMessage.trim());
        currentMessage = line;
      } else {
        currentMessage += (currentMessage ? '\n' : '') + line;
      }
    }
    
    if (currentMessage) {
      messages.push(currentMessage.trim());
    }

    return messages;
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏
   */
  async sendBookingConfirmation(booking, phone) {
    const { services, staff, datetime } = booking;
    
    const confirmationText = `
‚úÖ *–í–∞—à–∞ –∑–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!*

üìÖ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: ${this.formatDateTime(datetime)}
üíá –£—Å–ª—É–≥–∞: ${services.map(s => s.title).join(', ')}
üë§ –ú–∞—Å—Ç–µ—Ä: ${staff.name}
üìç –ê–¥—Ä–µ—Å: ${booking.company.address}

üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${booking.cost}‚ÇΩ

_–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–º –≤–∞–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ –¥–µ–Ω—å –¥–æ –≤–∏–∑–∏—Ç–∞._

–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º!
    `.trim();

    return confirmationText;
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
   */
  formatDateTime(datetime) {
    const date = new Date(datetime);
    const options = {
      weekday: 'long',
      day: 'numeric',
      month: 'long',
      hour: '2-digit',
      minute: '2-digit',
      timeZone: 'Europe/Moscow'
    };
    
    return date.toLocaleString('ru-RU', options);
  }
}

module.exports = new WhatsAppAIIntegration();