// src/services/telegram-notifier.js
const axios = require('axios');
const logger = require('../utils/logger');
const config = require('../config');

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
 */
class TelegramNotifier {
  constructor() {
    // –≠—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ .env —Ñ–∞–π–ª:
    // TELEGRAM_BOT_TOKEN=your_bot_token
    // TELEGRAM_CHAT_ID=your_chat_id
    this.botToken = process.env.TELEGRAM_BOT_TOKEN;
    this.chatId = process.env.TELEGRAM_CHAT_ID;
    this.enabled = !!(this.botToken && this.chatId);

    if (!this.enabled) {
      logger.warn('Telegram notifications disabled - missing TELEGRAM_BOT_TOKEN or TELEGRAM_CHAT_ID');
    }

    // –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞ - –Ω–µ –±–æ–ª–µ–µ 1 —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –º–∏–Ω—É—Ç—É –¥–ª—è –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞
    this.lastNotifications = new Map();
    this.notificationCooldown = 60000; // 1 –º–∏–Ω—É—Ç–∞
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
   */
  async send(message, options = {}) {
    if (!this.enabled) {
      logger.debug('Telegram notification skipped (disabled):', message);
      return false;
    }

    try {
      const url = `https://api.telegram.org/bot${this.botToken}/sendMessage`;

      const payload = {
        chat_id: this.chatId,
        text: message,
        parse_mode: options.parseMode || 'HTML',
        disable_notification: options.silent || false
      };

      const response = await axios.post(url, payload, {
        timeout: 5000
      });

      if (response.data.ok) {
        logger.debug('Telegram notification sent successfully');
        return true;
      } else {
        logger.error('Telegram API error:', response.data);
        return false;
      }
    } catch (error) {
      logger.error('Failed to send Telegram notification:', error.message);
      return false;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–∞–º - –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ
   */
  shouldSend(type, key = '') {
    const notificationKey = `${type}:${key}`;
    const lastSent = this.lastNotifications.get(notificationKey);

    if (!lastSent) {
      this.lastNotifications.set(notificationKey, Date.now());
      return true;
    }

    const timeSinceLastSent = Date.now() - lastSent;

    if (timeSinceLastSent >= this.notificationCooldown) {
      this.lastNotifications.set(notificationKey, Date.now());
      return true;
    }

    return false;
  }

  /**
   * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ
   */
  async notifyError(error, context = {}) {
    if (!this.shouldSend('error', error.message)) {
      return;
    }

    const companyInfo = context.companyId ? `\n–ö–æ–º–ø–∞–Ω–∏—è: ${context.companyId}` : '';
    const phoneInfo = context.phone ? `\n–¢–µ–ª–µ—Ñ–æ–Ω: ${context.phone}` : '';

    const message = `
üö® <b>–û–®–ò–ë–ö–ê –í AI ADMIN</b>

<code>${error.message}</code>

üìç –ú–æ–¥—É–ª—å: ${context.module || 'unknown'}${companyInfo}${phoneInfo}
üïê –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}

${error.stack ? `<pre>${error.stack.slice(0, 500)}</pre>` : ''}

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>./recovery.sh</code> –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
`;

    await this.send(message);
  }

  /**
   * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å WhatsApp
   */
  async notifyWhatsAppIssue(companyId, issue) {
    if (!this.shouldSend('whatsapp', companyId)) {
      return;
    }

    const message = `
üì± <b>–ü—Ä–æ–±–ª–µ–º–∞ —Å WhatsApp</b>

–ö–æ–º–ø–∞–Ω–∏—è: ${companyId}
–ü—Ä–æ–±–ª–µ–º–∞: ${issue}
–í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}

–î–µ–π—Å—Ç–≤–∏—è:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: <code>curl http://localhost:3000/health/company/${companyId}</code>
2. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: <code>./recovery.sh whatsapp</code>
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ QR-–∫–æ–¥ –≤ –ª–æ–≥–∞—Ö
`;

    await this.send(message);
  }

  /**
   * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã—Å–æ–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ
   */
  async notifyHighLoad(metrics) {
    if (!this.shouldSend('load', '')) {
      return;
    }

    const message = `
‚ö†Ô∏è <b>–í—ã—Å–æ–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã</b>

üìä –ú–µ—Ç—Ä–∏–∫–∏:
‚Ä¢ –û—á–µ—Ä–µ–¥—å —Å–æ–æ–±—â–µ–Ω–∏–π: ${metrics.queueSize || 0}
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${metrics.memoryMB || 0} MB
‚Ä¢ CPU: ${metrics.cpu || 0}%
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤: ${metrics.activeChats || 0}

–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å—ã: <code>pm2 status</code>
‚Ä¢ –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏: <code>./recovery.sh soft</code>
`;

    await this.send(message, { silent: true });
  }

  /**
   * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏
   */
  async notifyRecovery(what) {
    const message = `
‚úÖ <b>–°–∏—Å—Ç–µ–º–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞</b>

–ß—Ç–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: ${what}
–í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}

–°—Ç–∞—Ç—É—Å: <code>curl http://localhost:3000/health</code>
`;

    await this.send(message);
  }

  /**
   * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
   */
  async notifyNewCompany(companyId, companyName) {
    const message = `
üéâ <b>–ü–æ–¥–∫–ª—é—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è!</b>

ID: ${companyId}
–ù–∞–∑–≤–∞–Ω–∏–µ: ${companyName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
–í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}

–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å:
<code>curl http://localhost:3000/health/company/${companyId}</code>
`;

    await this.send(message);
  }

  /**
   * –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞
   */
  async sendDailySummary(stats) {
    const message = `
üìà <b>–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–≤–æ–¥–∫–∞ AI Admin</b>

üìä –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞:
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${stats.messagesProcessed || 0}
‚Ä¢ –°–æ–∑–¥–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${stats.bookingsCreated || 0}
‚Ä¢ –û—à–∏–±–æ–∫: ${stats.errors || 0}
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${stats.avgResponseTime || 0}ms

üè¢ –ê–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏: ${stats.activeCompanies || 1}
üí¨ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.uniqueUsers || 0}

üîß –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã:
‚Ä¢ Uptime: ${stats.uptime || '0h'}
‚Ä¢ –ü–∞–º—è—Ç—å: ${stats.memoryUsage || 0}MB
‚Ä¢ –†–∞–∑–º–µ—Ä –ë–î Redis: ${stats.redisKeys || 0} –∫–ª—é—á–µ–π

${stats.errors > 10 ? '\n‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í—ã—Å–æ–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫!' : '‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ'}
`;

    await this.send(message, { silent: true });
  }
}

// –°–æ–∑–¥–∞—ë–º singleton
const telegramNotifier = new TelegramNotifier();

module.exports = telegramNotifier;