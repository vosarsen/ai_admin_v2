/**
 * –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è AI Admin v2 —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Qwen
 * 
 * –ò–∑–º–µ–Ω–µ–Ω–∏—è:
 * 1. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç DashScope Provider –≤–º–µ—Å—Ç–æ –ø—Ä—è–º—ã—Ö –≤—ã–∑–æ–≤–æ–≤ AI
 * 2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ—Ç –º–µ–∂–¥—É Qwen-Plus –∏ Qwen2.5-72B
 * 3. –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π
 */

// –ü–æ–ª—É—á–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç–∞–Ω—Å
const aiAdminV2Instance = require('./index');
const AIProviderAdapter = require('./ai-provider-adapter');
const logger = require('../../utils/logger').child({ module: 'ai-admin-v2-qwen' });

// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π AI Provider
const qwenProvider = new AIProviderAdapter();

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ callAI
const originalCallAI = aiAdminV2Instance.callAI.bind(aiAdminV2Instance);

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥ callAI –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Qwen
aiAdminV2Instance.callAI = async function(prompt, context) {
  logger.info('üöÄ Using Qwen adaptive AI system');
  
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–¥–∞–ø—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å–∞–º –≤—ã–±–µ—Ä–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â—É—é –º–æ–¥–µ–ª—å
    const response = await qwenProvider.callAI(prompt, context);
    
    // –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –∫–∞–∂–¥—ã—Ö 100 –∑–∞–ø—Ä–æ—Å–æ–≤
    const stats = qwenProvider.getUsageStats();
    if (stats.total % 100 === 0 && stats.total > 0) {
      logger.info('üìä AI Usage Statistics:', stats);
    }
    
    return response;
    
  } catch (error) {
    logger.error('Qwen AI call failed:', error);
    
    // –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω fallback –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
    if (process.env.USE_ORIGINAL_AI === 'true') {
      logger.warn('Falling back to original AI provider...');
      return originalCallAI(prompt);
    }
    
    throw error;
  }
};

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
aiAdminV2Instance.getAIStats = function() {
  return qwenProvider.getUsageStats();
};

// –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É–º–Ω–æ–π –º–æ–¥–µ–ª–∏
aiAdminV2Instance.processComplexMessage = async function(message, phone, companyId) {
  logger.info('üß† Forcing smart model for complex message');
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π callAI
  const currentCallAI = this.callAI.bind(this);
  
  // –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –≤–µ—Ä—Å–∏—é —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —É–º–Ω–æ–π –º–æ–¥–µ–ª—å—é
  this.callAI = async (prompt, context) => {
    return qwenProvider.callAI(prompt, {
      ...context,
      forceModel: 'smart'
    });
  };
  
  try {
    // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å —É–º–Ω–æ–π –º–æ–¥–µ–ª—å—é
    const result = await this.processMessage(message, phone, companyId);
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
    this.callAI = currentCallAI;
    
    return result;
  } catch (error) {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    this.callAI = currentCallAI;
    throw error;
  }
};

logger.info('‚úÖ Qwen integration activated');

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Å—Ç–∞–Ω—Å
module.exports = aiAdminV2Instance;