// src/services/reminder/templates.js

/**
 * –®–∞–±–ª–æ–Ω—ã –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∑–∞ –¥–µ–Ω—å (–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ —Å –∏–º–µ–Ω–µ–º)
 * {service} - –≤–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂ (—á—Ç–æ?)
 * –Ω–∞ {service} - –ø—Ä–µ–¥–ª–æ–∂–Ω—ã–π –ø–∞–¥–µ–∂ —Å –ù–ê
 */
const dayBeforeTemplates = [
  "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, {name}! –ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –∑–∞–ø–∏—Å–∏ –Ω–∞ {service} –∑–∞–≤—Ç—Ä–∞ –≤ {time} ‚ú®",
  "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {name}! –ó–∞–≤—Ç—Ä–∞ –≤ {time} –∂–¥—ë–º –≤–∞—Å –Ω–∞ {service} üåü",
  "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, {name}! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ {service} –∑–∞–≤—Ç—Ä–∞ –≤ {time} ‚ò∫Ô∏è",
  "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}! –ó–∞–≤—Ç—Ä–∞ –≤ {time} {staff} –∂–¥—ë—Ç –≤–∞—Å –Ω–∞ {service} ‚ú®",
  "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {name}! –ù–∞–ø–æ–º–∏–Ω–∞–µ–º: –∑–∞–≤—Ç—Ä–∞ –≤ {time} —É –≤–∞—Å {service} üìù",
  "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, {name}! –í—Å—ë –≤ —Å–∏–ª–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞? {service} –≤ {time} ü§ù",
  "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}! –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º {service} –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –≤ {time} ‚úÖ",
  "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {name}! {staff} –∂–¥—ë—Ç –≤–∞—Å –∑–∞–≤—Ç—Ä–∞ –≤ {time} –Ω–∞ {service} üí´",
  "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, {name}! –ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –∑–∞–ø–∏—Å–∏ –Ω–∞ {service} –∑–∞–≤—Ç—Ä–∞ –≤ {time} üìÖ",
  "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}! –î–æ –≤—Å—Ç—Ä–µ—á–∏ –∑–∞–≤—Ç—Ä–∞ –≤ {time} –Ω–∞ {service} üëã",
  "{name}, –¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä! –ñ–¥—ë–º –≤–∞—Å –∑–∞–≤—Ç—Ä–∞ –≤ {time} –Ω–∞ {service} ‚ú®",
  "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, {name}! –ó–∞–≤—Ç—Ä–∞—à–Ω—è—è –∑–∞–ø–∏—Å—å –Ω–∞ {service} –≤ {time} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ üåü",
  "{name}, –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ù–∞–ø–æ–º–∏–Ω–∞–µ–º: –∑–∞–≤—Ç—Ä–∞ –≤ {time} {service} üìÖ",
  "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, {name}! {staff} –±—É–¥–µ—Ç —Ä–∞–¥ –≤–∏–¥–µ—Ç—å –≤–∞—Å –∑–∞–≤—Ç—Ä–∞ –≤ {time} –Ω–∞ {service} üòä",
  "{name}, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –í—Å—ë –≥–æ—Ç–æ–≤–æ –¥–ª—è {service} –∑–∞–≤—Ç—Ä–∞ –≤ {time} ‚úÖ",
  "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, {name}! –ó–∞–≤—Ç—Ä–∞ –≤ {time} –≤–∞—Å –∂–¥—ë—Ç {service} üéØ",
  "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}! –ú–∞—Å—Ç–µ—Ä {staff} –≥–æ—Ç–æ–≤ –∫ {service} –∑–∞–≤—Ç—Ä–∞ –≤ {time} üíº",
  "{name}, –Ω–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–π –∑–∞–ø–∏—Å–∏: {service} –≤ {time} üìã",
  "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {name}! –ñ–¥—ë–º –≤–∞—Å –Ω–∞ {service} –∑–∞–≤—Ç—Ä–∞ –≤ {time} üïê",
  "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä! {name}, –∑–∞–≤—Ç—Ä–∞ –≤ {time} —É –≤–∞—Å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ {service} ‚≠ê"
];

/**
 * –®–∞–±–ª–æ–Ω—ã –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∑–∞ 2 —á–∞—Å–∞ (—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–µ)
 * {service} - –≤–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂ (—á—Ç–æ?)
 * –Ω–∞ {service} - –ø—Ä–µ–¥–ª–æ–∂–Ω—ã–π –ø–∞–¥–µ–∂ —Å –ù–ê
 */
const twoHoursTemplates = [
  "–ù–∞–ø–æ–º–∏–Ω–∞–µ–º: —Å–µ–≥–æ–¥–Ω—è –≤ {time} —É –≤–∞—Å –∑–∞–ø–∏—Å—å –Ω–∞ {service}.",
  "–ß–µ—Ä–µ–∑ 2 —á–∞—Å–∞ –≤–∞—Å –æ–∂–∏–¥–∞–µ—Ç {staff} –Ω–∞ {service}. –í—Ä–µ–º—è –≤–∏–∑–∏—Ç–∞: {time}.",
  "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –í {time} –º—ã –∂–¥—ë–º –≤–∞—Å –Ω–∞ {service}.",
  "–£–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç, –Ω–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –∑–∞–ø–∏—Å–∏ –Ω–∞ {service} –≤ {time}.",
  "–ß–µ—Ä–µ–∑ –ø–∞—Ä—É —á–∞—Å–æ–≤ ({time}) –≤–∞—Å –∂–¥—ë—Ç {staff} –Ω–∞ {service}.",
  "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {service} –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ {time} —Å–µ–≥–æ–¥–Ω—è.",
  "–í {time} –¥–ª—è –≤–∞—Å –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ –≤—Ä–µ–º—è –Ω–∞ {service}. {staff} —É–∂–µ –≥–æ—Ç–æ–≤–∏—Ç—Å—è.",
  "–ñ–¥—ë–º –≤–∞—Å —Å–µ–≥–æ–¥–Ω—è –≤ {time} –Ω–∞ {service}. –ú–∞—Å—Ç–µ—Ä {staff} –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –≤—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ.",
  "–í–∞—à–∞ –∑–∞–ø–∏—Å—å –Ω–∞ {service} —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞ ({time}).",
  "–°–∫–æ—Ä–æ –≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è! {service} –≤ {time}.",
  "–û—Å—Ç–∞–ª–æ—Å—å 2 —á–∞—Å–∞ –¥–æ {service} ({time}). {staff} –≤–∞—Å –∂–¥—ë—Ç.",
  "–ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –∑–∞–ø–∏—Å–∏ –Ω–∞ {service} –≤ {time}.",
  "–ß–µ—Ä–µ–∑ 2 —á–∞—Å–∞ ({time}) –Ω–∞—á–Ω—ë—Ç—Å—è {service}. –ú–∞—Å—Ç–µ—Ä: {staff}.",
  "–î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ {time}! –í—Å—ë –≥–æ—Ç–æ–≤–æ –¥–ª—è {service}.",
  "–í–∞—à–µ –≤—Ä–µ–º—è —Å–µ–≥–æ–¥–Ω—è: {time} –Ω–∞ {service}. –û—Å—Ç–∞–ª–æ—Å—å 2 —á–∞—Å–∞.",
  "–ß–µ—Ä–µ–∑ 2 —á–∞—Å–∞ ({time}) –≤–∞—Å –∂–¥—ë—Ç {service}. –ú–∞—Å—Ç–µ—Ä {staff} –≥–æ—Ç–æ–≤.",
  "–ù–∞–ø–æ–º–∏–Ω–∞–µ–º: {service} —Å–µ–≥–æ–¥–Ω—è –≤ {time}. –î–æ –≤—Å—Ç—Ä–µ—á–∏!",
  "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –û—Å—Ç–∞–ª–æ—Å—å 2 —á–∞—Å–∞ –¥–æ –∑–∞–ø–∏—Å–∏ –Ω–∞ {service} –≤ {time}.",
  "–í {time} –º–∞—Å—Ç–µ—Ä {staff} –∂–¥—ë—Ç –≤–∞—Å –Ω–∞ {service}.",
  "–°–∫–æ—Ä–æ —É–≤–∏–¥–∏–º—Å—è! {service} –Ω–∞—á–Ω—ë—Ç—Å—è –≤ {time}."
];

/**
 * –û–∫–æ–Ω—á–∞–Ω–∏—è –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∑–∞ –¥–µ–Ω—å
 */
const dayBeforeEndings = [
  "–ï—Å–ª–∏ –ø–ª–∞–Ω—ã –∏–∑–º–µ–Ω–∏–ª–∏—Å—å - –¥–∞–π—Ç–µ –∑–Ω–∞—Ç—å üëç",
  "–ë—É–¥—É—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è - –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º üìù",
  "–ï—Å–ª–∏ –Ω–µ —Å–º–æ–∂–µ—Ç–µ - –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üôè",
  "–ñ–¥—ë–º –≤–∞—Å! –ï—Å–ª–∏ —á—Ç–æ - –ø–∏—à–∏—Ç–µ üí¨",
  "–î–æ –≤—Å—Ç—Ä–µ—á–∏! –ò–ª–∏ —Å–æ–æ–±—â–∏—Ç–µ, –µ—Å–ª–∏ –ø–ª–∞–Ω—ã –ø–æ–º–µ–Ω—è–ª–∏—Å—å ‚úâÔ∏è",
  "–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ - —Å–æ–æ–±—â–∏—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ üì±",
  "–ñ–¥—ë–º –≤–∞—Å! –ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ, –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ø–ª–∞–Ω—ã üíå",
  "–î–æ –∑–∞–≤—Ç—Ä–∞! –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–º–µ–Ω—è–ª–æ—Å—å - –¥–∞–π—Ç–µ –∑–Ω–∞—Ç—å ü§ù"
];

/**
 * –û–∫–æ–Ω—á–∞–Ω–∏—è –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∑–∞ 2 —á–∞—Å–∞
 */
const twoHoursEndings = [
  "–î–æ –≤—Å—Ç—Ä–µ—á–∏!",
  "–ñ–¥—ë–º –≤–∞—Å!",
  "–î–æ —Å–∫–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∏!",
  "–£–≤–∏–¥–∏–º—Å—è!",
  "–ë—É–¥–µ–º —Ä–∞–¥—ã –≤–∞—Å –≤–∏–¥–µ—Ç—å!",
  "–°–∫–æ—Ä–æ —É–≤–∏–¥–∏–º—Å—è!",
  "–î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ —Å–∞–ª–æ–Ω–µ!",
  "–ñ–¥—ë–º –≤–∞—Å —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º!"
];

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞
 */
function getRandomElement(array) {
  return array[Math.floor(Math.random() * array.length)];
}

/**
 * –ó–∞–º–µ–Ω–∏—Ç—å –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –≤ —à–∞–±–ª–æ–Ω–µ
 */
function fillTemplate(template, data) {
  let result = template;
  
  // –ó–∞–º–µ–Ω—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã
  result = result.replace('{name}', data.clientName || '–¥–æ—Ä–æ–≥–æ–π –∫–ª–∏–µ–Ω—Ç');
  result = result.replace('{time}', data.time);
  result = result.replace('{staff}', data.staff);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∫–ª–æ–Ω–µ–Ω–∏—è –¥–ª—è —É—Å–ª—É–≥, –µ—Å–ª–∏ –µ—Å—Ç—å
  if (data.serviceDeclensions) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω—É–∂–Ω—ã–π –ø–∞–¥–µ–∂ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
    
    // "–Ω–∞ {service}" - –ø—Ä–µ–¥–ª–æ–∂–Ω—ã–π –ø–∞–¥–µ–∂ —Å –ø—Ä–µ–¥–ª–æ–≥–æ–º –ù–ê
    result = result.replace(/–Ω–∞ {service}/g, 
      `–Ω–∞ ${data.serviceDeclensions.prepositional_na || data.serviceDeclensions.prepositional || data.service.toLowerCase()}`);
    
    // "–æ –∑–∞–ø–∏—Å–∏ –Ω–∞ {service}" - –ø—Ä–µ–¥–ª–æ–∂–Ω—ã–π –ø–∞–¥–µ–∂ —Å –ø—Ä–µ–¥–ª–æ–≥–æ–º –ù–ê
    result = result.replace(/–∑–∞–ø–∏—Å–∏ –Ω–∞ {service}/g,
      `–∑–∞–ø–∏—Å–∏ –Ω–∞ ${data.serviceDeclensions.prepositional_na || data.serviceDeclensions.prepositional || data.service.toLowerCase()}`);
    
    // "–ø—Ä–æ {service}" - –≤–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂
    result = result.replace(/–ø—Ä–æ {service}/g, 
      `–ø—Ä–æ ${data.serviceDeclensions.accusative || data.service.toLowerCase()}`);
    
    // "–¥–ª—è {service}" - —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂
    result = result.replace(/–¥–ª—è {service}/g, 
      `–¥–ª—è ${data.serviceDeclensions.genitive || data.service.toLowerCase()}`);
    
    // "–¥–æ {service}" - —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂
    result = result.replace(/–¥–æ {service}/g, 
      `–¥–æ ${data.serviceDeclensions.genitive || data.service.toLowerCase()}`);
    
    // "–∫ {service}" - –¥–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂
    result = result.replace(/–∫ {service}/g,
      `–∫ ${data.serviceDeclensions.dative || data.service.toLowerCase()}`);
    
    // "{service} –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞" –∏–ª–∏ "—É –≤–∞—Å {service}" - –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂
    result = result.replace(/\{service\} –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞/g,
      `${data.serviceDeclensions.nominative || data.service.toLowerCase()} –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞`);
    
    result = result.replace(/—É –≤–∞—Å {service}/g,
      `—É –≤–∞—Å ${data.serviceDeclensions.nominative || data.service.toLowerCase()}`);
    
    result = result.replace(/–≤–∞—Å –∂–¥—ë—Ç {service}/g,
      `–≤–∞—Å –∂–¥—ë—Ç ${data.serviceDeclensions.nominative || data.service.toLowerCase()}`);
    
    result = result.replace(/–Ω–∞—á–Ω—ë—Ç—Å—è {service}/g,
      `–Ω–∞—á–Ω—ë—Ç—Å—è ${data.serviceDeclensions.nominative || data.service.toLowerCase()}`);
    
    result = result.replace(/—É –≤–∞—Å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ {service}/g,
      `—É –≤–∞—Å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ ${data.serviceDeclensions.nominative || data.service.toLowerCase()}`);
    
    // –û—Å—Ç–∞–≤—à–∏–µ—Å—è {service} –±–µ–∑ –ø—Ä–µ–¥–ª–æ–≥–æ–≤ - –æ–±—ã—á–Ω–æ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∏–ª–∏ –≤–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π
    result = result.replace(/{service}/g, 
      data.serviceDeclensions.nominative || data.service.toLowerCase());
      
  } else {
    // –ï—Å–ª–∏ —Å–∫–ª–æ–Ω–µ–Ω–∏–π –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–∫ –µ—Å—Ç—å, –Ω–æ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
    result = result.replace(/{service}/g, data.service.toLowerCase());
  }
  
  return result;
}

/**
 * –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ –¥–µ–Ω—å
 */
function generateDayBeforeReminder(data) {
  const template = getRandomElement(dayBeforeTemplates);
  const ending = getRandomElement(dayBeforeEndings);
  
  const mainText = fillTemplate(template, data);
  
  // –°–æ–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  let message = mainText + '\n\n';
  
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ç–µ–∫—Å—Ç–µ
  message += `–ú–∞—Å—Ç–µ—Ä: ${data.staff}\n`;
  if (data.price > 0) {
    message += `–°—Ç–æ–∏–º–æ—Å—Ç—å: ${data.price} —Ä—É–±.\n`;
  }
  if (data.address) {
    message += `\n–ñ–¥—ë–º –≤–∞—Å –ø–æ –∞–¥—Ä–µ—Å—É: ${data.address}\n`;
  }
  message += '\n' + ending;
  
  return message;
}

/**
 * –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 2 —á–∞—Å–∞
 */
function generateTwoHoursReminder(data) {
  const template = getRandomElement(twoHoursTemplates);
  const ending = getRandomElement(twoHoursEndings);
  
  const mainText = fillTemplate(template, data);
  
  // –°–æ–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  let message = mainText + '\n';
  if (data.address) {
    message += `–ê–¥—Ä–µ—Å: ${data.address}\n`;
  }
  message += '\n' + ending;
  
  return message;
}

module.exports = {
  generateDayBeforeReminder,
  generateTwoHoursReminder
};