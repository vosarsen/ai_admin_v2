// src/services/nlu/response-generator.js
const logger = require('../../utils/logger');

/**
 * Generates appropriate responses based on actions and context
 */
class ResponseGenerator {
  constructor(actionResolver) {
    this.actionResolver = actionResolver;
  }

  /**
   * Generate appropriate response - –ù–ï –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
   * @param {Object} parsed - Object with intent, entities, and optionally action
   * @param {Object} context - User context
   * @returns {string|null} Generated response or null for search_slots
   */
  generateResponse(parsed, context) {
    // Validate input
    if (!parsed || typeof parsed !== 'object') {
      logger.error('Invalid input to generateResponse:', parsed);
      return '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';
    }
    
    // Ensure action is always present
    this.actionResolver.ensureAction(parsed);
    
    const { intent, entities, action } = parsed;
    
    // Validate entities
    if (!entities || typeof entities !== 'object') {
      logger.warn('Missing or invalid entities in generateResponse');
      return '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ.';
    }
    
    logger.info('üéØ Generating response for:', {
      intent,
      action,
      hasEntities: !!entities
    });
    
    // CRITICAL: For search_slots ALWAYS return null
    if (action === 'search_slots') {
      logger.info('üîç Returning null for search_slots - response will be generated later');
      return null;
    }
    
    if (action === 'create_booking') {
      const response = `–ó–∞–ø–∏—Å—ã–≤–∞—é –≤–∞—Å –∫ ${entities.staff} –Ω–∞ ${entities.date} –≤ ${entities.time}. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é –∑–∞–ø–∏—Å—å.`;
      logger.info('üìù Generated create_booking response:', response);
      return response;
    }
    
    if (intent === 'info') {
      const response = '–ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? –†–∞—Å—Ü–µ–Ω–∫–∏, —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –∏–ª–∏ —É—Å–ª—É–≥–∏?';
      logger.info('‚ÑπÔ∏è Generated info response:', response);
      return response;
    }
    
    const defaultResponse = '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –ø–æ–º–æ–≥—É –≤–∞–º –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥–∏. –°–∫–∞–∂–∏—Ç–µ, –Ω–∞ –∫–∞–∫—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?';
    logger.info('üí¨ Generated default response:', defaultResponse);
    return defaultResponse;
  }
}

module.exports = ResponseGenerator;